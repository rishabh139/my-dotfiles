{
  "version": 3,
  "sources": ["../node_modules/relative-time-format/source/LocaleDataStore.js", "../node_modules/relative-time-format/source/resolveLocale.js", "../node_modules/relative-time-format/source/PluralRuleFunctions.js", "../node_modules/relative-time-format/source/getPluralRulesLocale.js", "../node_modules/relative-time-format/source/PluralRules.js", "../node_modules/relative-time-format/source/RelativeTimeFormat.js", "../node_modules/relative-time-format/index.commonjs.js", "../node_modules/javascript-time-ago/source/cache.js", "../node_modules/javascript-time-ago/source/locale.js", "../node_modules/javascript-time-ago/source/steps/units.js", "../node_modules/javascript-time-ago/source/steps/getStepDenominator.js", "../node_modules/javascript-time-ago/source/round.js", "../node_modules/javascript-time-ago/source/steps/getStepMinTime.js", "../node_modules/javascript-time-ago/source/steps/getStep.js", "../node_modules/javascript-time-ago/source/steps/getTimeToNextUpdateForUnit.js", "../node_modules/javascript-time-ago/source/steps/getTimeToNextUpdate.js", "../node_modules/javascript-time-ago/source/LocaleDataStore.js", "../node_modules/javascript-time-ago/source/steps/round.js", "../node_modules/javascript-time-ago/source/style/round.js", "../node_modules/javascript-time-ago/source/style/roundMinute.js", "../node_modules/javascript-time-ago/source/steps/approximate.js", "../node_modules/javascript-time-ago/source/style/approximate.js", "../node_modules/javascript-time-ago/source/style/approximateTime.js", "../node_modules/javascript-time-ago/source/steps/helpers.js", "../node_modules/javascript-time-ago/source/steps/index.js", "../node_modules/javascript-time-ago/source/steps/renameLegacyProperties.js", "../node_modules/javascript-time-ago/source/style/renameLegacyProperties.js", "../node_modules/javascript-time-ago/source/style/twitter.js", "../node_modules/javascript-time-ago/source/style/twitterNow.js", "../node_modules/javascript-time-ago/source/style/twitterMinute.js", "../node_modules/javascript-time-ago/source/style/twitterMinuteNow.js", "../node_modules/javascript-time-ago/source/style/twitterFirstMinute.js", "../node_modules/javascript-time-ago/source/style/mini.js", "../node_modules/javascript-time-ago/source/style/miniNow.js", "../node_modules/javascript-time-ago/source/style/miniMinute.js", "../node_modules/javascript-time-ago/source/style/miniMinuteNow.js", "../node_modules/javascript-time-ago/source/style/getStyleByName.js", "../node_modules/javascript-time-ago/source/TimeAgo.js", "../node_modules/javascript-time-ago/index.commonjs.js", "../node_modules/uuid/dist/rng.js", "../node_modules/uuid/dist/regex.js", "../node_modules/uuid/dist/validate.js", "../node_modules/uuid/dist/stringify.js", "../node_modules/uuid/dist/v1.js", "../node_modules/uuid/dist/parse.js", "../node_modules/uuid/dist/v35.js", "../node_modules/uuid/dist/md5.js", "../node_modules/uuid/dist/v3.js", "../node_modules/uuid/dist/v4.js", "../node_modules/uuid/dist/sha1.js", "../node_modules/uuid/dist/v5.js", "../node_modules/uuid/dist/nil.js", "../node_modules/uuid/dist/version.js", "../node_modules/uuid/dist/index.js", "../node_modules/extend/index.js", "../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/gaxios/node_modules/node-fetch/lib/index.js", "../node_modules/is-stream/index.js", "../node_modules/gaxios/src/common.ts", "../node_modules/gaxios/src/retry.ts", "../node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/has-flag/index.js", "../node_modules/supports-color/index.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/agent-base/src/promisify.ts", "../node_modules/agent-base/src/index.ts", "../node_modules/https-proxy-agent/src/parse-proxy-response.ts", "../node_modules/https-proxy-agent/src/agent.ts", "../node_modules/https-proxy-agent/src/index.ts", "../node_modules/gaxios/src/gaxios.ts", "../node_modules/gaxios/src/index.ts", "../node_modules/bignumber.js/bignumber.js", "../node_modules/json-bigint/lib/stringify.js", "../node_modules/json-bigint/lib/parse.js", "../node_modules/json-bigint/index.js", "../node_modules/gcp-metadata/src/index.ts", "../node_modules/base64-js/index.js", "../node_modules/fast-text-encoding/text.min.js", "../node_modules/google-auth-library/build/src/crypto/browser/crypto.js", "../node_modules/google-auth-library/build/src/crypto/node/crypto.js", "../node_modules/google-auth-library/build/src/crypto/crypto.js", "../node_modules/google-auth-library/build/src/options.js", "../node_modules/google-auth-library/build/src/transporters.js", "../node_modules/arrify/index.js", "../node_modules/safe-buffer/index.js", "../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js", "../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js", "../node_modules/google-auth-library/build/src/auth/authclient.js", "../node_modules/google-auth-library/build/src/auth/loginticket.js", "../node_modules/google-auth-library/build/src/auth/oauth2client.js", "../node_modules/google-auth-library/build/src/auth/computeclient.js", "../node_modules/google-auth-library/build/src/auth/idtokenclient.js", "../node_modules/google-auth-library/build/src/auth/envDetect.js", "../node_modules/jws/lib/data-stream.js", "../node_modules/buffer-equal-constant-time/index.js", "../node_modules/jwa/index.js", "../node_modules/jws/lib/tostring.js", "../node_modules/jws/lib/sign-stream.js", "../node_modules/jws/lib/verify-stream.js", "../node_modules/jws/index.js", "../node_modules/node-forge/lib/forge.js", "../node_modules/node-forge/lib/baseN.js", "../node_modules/node-forge/lib/util.js", "../node_modules/node-forge/lib/cipher.js", "../node_modules/node-forge/lib/cipherModes.js", "../node_modules/node-forge/lib/aes.js", "../node_modules/node-forge/lib/oids.js", "../node_modules/node-forge/lib/asn1.js", "../node_modules/node-forge/lib/md.js", "../node_modules/node-forge/lib/hmac.js", "../node_modules/node-forge/lib/md5.js", "../node_modules/node-forge/lib/pem.js", "../node_modules/node-forge/lib/des.js", "../node_modules/node-forge/lib/pbkdf2.js", "../node_modules/node-forge/lib/sha256.js", "../node_modules/node-forge/lib/prng.js", "../node_modules/node-forge/lib/random.js", "../node_modules/node-forge/lib/rc2.js", "../node_modules/node-forge/lib/jsbn.js", "../node_modules/node-forge/lib/sha1.js", "../node_modules/node-forge/lib/pkcs1.js", "../node_modules/node-forge/lib/prime.js", "../node_modules/node-forge/lib/rsa.js", "../node_modules/node-forge/lib/pbe.js", "../node_modules/node-forge/lib/pkcs7asn1.js", "../node_modules/node-forge/lib/mgf1.js", "../node_modules/node-forge/lib/mgf.js", "../node_modules/node-forge/lib/pss.js", "../node_modules/node-forge/lib/x509.js", "../node_modules/node-forge/lib/pkcs12.js", "../node_modules/node-forge/lib/pki.js", "../node_modules/node-forge/lib/tls.js", "../node_modules/node-forge/lib/aesCipherSuites.js", "../node_modules/node-forge/lib/sha512.js", "../node_modules/node-forge/lib/asn1-validator.js", "../node_modules/node-forge/lib/ed25519.js", "../node_modules/node-forge/lib/kem.js", "../node_modules/node-forge/lib/log.js", "../node_modules/node-forge/lib/md.all.js", "../node_modules/node-forge/lib/pkcs7.js", "../node_modules/node-forge/lib/ssh.js", "../node_modules/node-forge/lib/index.js", "../node_modules/google-p12-pem/build/src/index.js", "../node_modules/gtoken/build/src/index.js", "../node_modules/yallist/iterator.js", "../node_modules/yallist/yallist.js", "../node_modules/lru-cache/index.js", "../node_modules/google-auth-library/build/src/auth/jwtaccess.js", "../node_modules/google-auth-library/build/src/auth/jwtclient.js", "../node_modules/google-auth-library/build/src/auth/refreshclient.js", "../node_modules/google-auth-library/build/src/auth/oauth2common.js", "../node_modules/google-auth-library/build/src/auth/stscredentials.js", "../node_modules/google-auth-library/build/src/auth/baseexternalclient.js", "../node_modules/google-auth-library/build/src/auth/identitypoolclient.js", "../node_modules/google-auth-library/build/src/auth/awsrequestsigner.js", "../node_modules/google-auth-library/build/src/auth/awsclient.js", "../node_modules/google-auth-library/build/src/auth/externalclient.js", "../node_modules/google-auth-library/build/src/auth/googleauth.js", "../node_modules/google-auth-library/build/src/auth/iam.js", "../node_modules/google-auth-library/build/src/auth/impersonated.js", "../node_modules/google-auth-library/build/src/auth/downscopedclient.js", "../node_modules/google-auth-library/build/src/index.js", "../node_modules/googleapis-common/build/src/apiIndex.js", "../node_modules/has-symbols/shams.js", "../node_modules/has-symbols/index.js", "../node_modules/function-bind/implementation.js", "../node_modules/function-bind/index.js", "../node_modules/has/src/index.js", "../node_modules/get-intrinsic/index.js", "../node_modules/call-bind/index.js", "../node_modules/call-bind/callBound.js", "../node_modules/object-inspect/util.inspect.js", "../node_modules/object-inspect/index.js", "../node_modules/side-channel/index.js", "../node_modules/qs/lib/formats.js", "../node_modules/qs/lib/utils.js", "../node_modules/qs/lib/stringify.js", "../node_modules/qs/lib/parse.js", "../node_modules/qs/lib/index.js", "../node_modules/url-template/lib/url-template.js", "../node_modules/googleapis-common/build/src/isbrowser.js", "../node_modules/googleapis-common/build/src/http2.js", "../node_modules/googleapis-common/build/src/apirequest.js", "../node_modules/googleapis-common/build/src/authplus.js", "../node_modules/googleapis-common/build/src/endpoint.js", "../node_modules/googleapis-common/build/src/discovery.js", "../node_modules/googleapis-common/build/src/index.js", "../node_modules/@googleapis/youtube/v3.ts", "../node_modules/@googleapis/youtube/index.ts", "../node_modules/duration-iso-8601/index.js", "../node_modules/he/he.js", "../src/search-channel.tsx", "../src/components/channel_search.tsx", "../src/lib/utils.ts", "../src/lib/youtubeapi.ts", "../src/components/channel.tsx", "../src/components/actions.tsx", "../src/components/playlist.tsx", "../src/components/video.tsx", "../src/components/recent_videos.tsx", "../src/components/listgrid.tsx", "../src/components/video_search.tsx", "../src/components/recent_channels.tsx"],
  "sourcesContent": ["// Fallback locale.\r\n// (when not a single one of the supplied \"preferred\" locales is available)\r\nlet defaultLocale = 'en'\r\n\r\n// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\n// According to the spec BCP 47 language tags are case-insensitive.\r\n// https://tools.ietf.org/html/rfc5646\r\nconst lowercaseLocaleLookup = {}\r\n\r\nexport function getDefaultLocale() {\r\n  return defaultLocale\r\n}\r\n\r\nexport function setDefaultLocale(locale) {\r\n  defaultLocale = locale\r\n}\r\n\r\n/**\r\n * Gets locale data previously added by `addLocaleData()`.\r\n * @return  {object} [localeData]\r\n */\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\n/**\r\n * Adds locale data.\r\n * Is called by `RelativeTimeFormat.addLocale(...)`.\r\n * @param  {object} localeData\r\n */\r\nexport function addLocaleData(localeData) {\r\n  if (!localeData) {\r\n    throw new Error('No locale data passed')\r\n  }\r\n  // This locale data is stored in a global variable\r\n  // and later used when calling `.format(time)`.\r\n  localesData[localeData.locale] = localeData\r\n  lowercaseLocaleLookup[localeData.locale.toLowerCase()] = localeData.locale\r\n}\r\n\r\n/**\r\n * Returns a locale for which locale data has been added\r\n * via `RelativeTimeFormat.addLocale(...)`.\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n */\r\nexport function resolveLocale(locale) {\r\n\tif (localesData[locale]) {\r\n\t\treturn locale\r\n\t}\r\n\tif (lowercaseLocaleLookup[locale.toLowerCase()]) {\r\n\t\treturn lowercaseLocaleLookup[locale.toLowerCase()]\r\n\t}\r\n}", "import {\r\n  resolveLocale as resolveLocaleForData\r\n} from './LocaleDataStore'\r\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * @param  {string} locale\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocale(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocale(\"xx-Latn\")\r\n */\r\nexport default function resolveLocale(locale, options = {}) {\r\n  const localeMatcher = options.localeMatcher || 'lookup'\r\n  switch (localeMatcher) {\r\n    case 'lookup':\r\n      return resolveLocaleLookup(locale)\r\n    // \"best fit\" locale matching is not supported.\r\n    // https://github.com/catamphetamine/relative-time-format/issues/2\r\n    case 'best fit':\r\n      // return resolveLocaleBestFit(locale)\r\n      return resolveLocaleLookup(locale)\r\n    default:\r\n      throw new RangeError(`Invalid \"localeMatcher\" option: ${localeMatcher}`)\r\n  }\r\n}\r\n\r\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * Starts from the most specific locale and gradually\r\n * falls back to less specific ones.\r\n * This is a basic implementation of the \"lookup\" algorithm.\r\n * https://tools.ietf.org/html/rfc4647#section-3.4\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocaleLookup(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocaleLookup(\"xx-Latn\")\r\n */\r\nexport function resolveLocaleLookup(locale) {\r\n  const resolvedLocale = resolveLocaleForData(locale)\r\n  if (resolvedLocale) {\r\n    return resolvedLocale\r\n  }\r\n  // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n  const parts = locale.split('-')\r\n  while (locale.length > 1) {\r\n    parts.pop()\r\n    locale = parts.join('-')\r\n    const resolvedLocale = resolveLocaleForData(locale)\r\n    if (resolvedLocale) {\r\n      return resolvedLocale\r\n    }\r\n  }\r\n}\r\n", "// (this file was autogenerated by `generate-locales`)\n// \"plural rules\" functions are not stored in locale JSON files because they're not strings.\n// This file isn't big \u2014 it's about 5 kilobytes in size (minified).\n// Alternatively, the pluralization rules for each locale could be stored\n// in their JSON files in a non-parsed form and later parsed via `make-plural` library.\n// But `make-plural` library itself is relatively big in size:\n// `make-plural.min.js` is about 6 kilobytes (https://unpkg.com/make-plural/).\n// So, it's more practical to bypass runtime `make-plural` pluralization rules compilation\n// and just include the already compiled pluarlization rules for all locales in the library code.\n\nvar $ = {\n\taf: (n) => n == 1 ? 'one' : 'other',\n\tam: (n) => n >= 0 && n <= 1 ? 'one' : 'other',\n\tar: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n\t\treturn n == 0 ? 'zero'\n\t\t\t: n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: (n100 >= 3 && n100 <= 10) ? 'few'\n\t\t\t: (n100 >= 11 && n100 <= 99) ? 'many'\n\t\t\t: 'other';\n\t},\n\tast: (n) => {\n\t\tconst s = String(n).split('.'), v0 = !s[1];\n\t\treturn n == 1 && v0 ? 'one' : 'other';\n\t},\n\tbe: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n\t\treturn n10 == 1 && n100 != 11 ? 'one'\n\t\t\t: (n10 >= 2 && n10 <= 4) && (n100 < 12 || n100 > 14) ? 'few'\n\t\t\t: t0 && n10 == 0 || (n10 >= 5 && n10 <= 9) || (n100 >= 11 && n100 <= 14) ? 'many'\n\t\t\t: 'other';\n\t},\n\tbr: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), n1000000 = t0 && s[0].slice(-6);\n\t\treturn n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91 ? 'one'\n\t\t\t: n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92 ? 'two'\n\t\t\t: ((n10 == 3 || n10 == 4) || n10 == 9) && (n100 < 10 || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90 || n100 > 99) ? 'few'\n\t\t\t: n != 0 && t0 && n1000000 == 0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tbs: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n\t\treturn v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n\t\t\t: v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n\t\t\t: 'other';\n\t},\n\tceb: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n\t\treturn v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n\t},\n\tcs: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1];\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: (i >= 2 && i <= 4) && v0 ? 'few'\n\t\t\t: !v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tcy: (n) => n == 0 ? 'zero'\n\t\t\t: n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: n == 3 ? 'few'\n\t\t\t: n == 6 ? 'many'\n\t\t\t: 'other',\n\tda: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n;\n\t\treturn n == 1 || !t0 && (i == 0 || i == 1) ? 'one' : 'other';\n\t},\n\tdsb: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i100 = i.slice(-2), f100 = f.slice(-2);\n\t\treturn v0 && i100 == 1 || f100 == 1 ? 'one'\n\t\t\t: v0 && i100 == 2 || f100 == 2 ? 'two'\n\t\t\t: v0 && (i100 == 3 || i100 == 4) || (f100 == 3 || f100 == 4) ? 'few'\n\t\t\t: 'other';\n\t},\n\tdz: (n) => 'other',\n\tff: (n) => n >= 0 && n < 2 ? 'one' : 'other',\n\tfr: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n\t\treturn n >= 0 && n < 2 ? 'one'\n\t\t\t: i != 0 && i1000000 == 0 && v0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tga: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n;\n\t\treturn n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: (t0 && n >= 3 && n <= 6) ? 'few'\n\t\t\t: (t0 && n >= 7 && n <= 10) ? 'many'\n\t\t\t: 'other';\n\t},\n\tgd: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n;\n\t\treturn (n == 1 || n == 11) ? 'one'\n\t\t\t: (n == 2 || n == 12) ? 'two'\n\t\t\t: ((t0 && n >= 3 && n <= 10) || (t0 && n >= 13 && n <= 19)) ? 'few'\n\t\t\t: 'other';\n\t},\n\the: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1);\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: i == 2 && v0 ? 'two'\n\t\t\t: v0 && (n < 0 || n > 10) && t0 && n10 == 0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tis: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n, i10 = i.slice(-1), i100 = i.slice(-2);\n\t\treturn t0 && i10 == 1 && i100 != 11 || !t0 ? 'one' : 'other';\n\t},\n\tksh: (n) => n == 0 ? 'zero'\n\t\t\t: n == 1 ? 'one'\n\t\t\t: 'other',\n\tlt: (n) => {\n\t\tconst s = String(n).split('.'), f = s[1] || '', t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n\t\treturn n10 == 1 && (n100 < 11 || n100 > 19) ? 'one'\n\t\t\t: (n10 >= 2 && n10 <= 9) && (n100 < 11 || n100 > 19) ? 'few'\n\t\t\t: f != 0 ? 'many'\n\t\t\t: 'other';\n\t},\n\tlv: (n) => {\n\t\tconst s = String(n).split('.'), f = s[1] || '', v = f.length, t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n\t\treturn t0 && n10 == 0 || (n100 >= 11 && n100 <= 19) || v == 2 && (f100 >= 11 && f100 <= 19) ? 'zero'\n\t\t\t: n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one'\n\t\t\t: 'other';\n\t},\n\tmk: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n\t\treturn v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one' : 'other';\n\t},\n\tmt: (n) => {\n\t\tconst s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n\t\treturn n == 1 ? 'one'\n\t\t\t: n == 0 || (n100 >= 2 && n100 <= 10) ? 'few'\n\t\t\t: (n100 >= 11 && n100 <= 19) ? 'many'\n\t\t\t: 'other';\n\t},\n\tpa: (n) => (n == 0 || n == 1) ? 'one' : 'other',\n\tpl: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n\t\t\t: v0 && i != 1 && (i10 == 0 || i10 == 1) || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 12 && i100 <= 14) ? 'many'\n\t\t\t: 'other';\n\t},\n\tpt: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0];\n\t\treturn (i == 0 || i == 1) ? 'one' : 'other';\n\t},\n\tro: (n) => {\n\t\tconst s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n\t\treturn n == 1 && v0 ? 'one'\n\t\t\t: !v0 || n == 0 || (n100 >= 2 && n100 <= 19) ? 'few'\n\t\t\t: 'other';\n\t},\n\tru: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n\t\treturn v0 && i10 == 1 && i100 != 11 ? 'one'\n\t\t\t: v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n\t\t\t: v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 11 && i100 <= 14) ? 'many'\n\t\t\t: 'other';\n\t},\n\tse: (n) => n == 1 ? 'one'\n\t\t\t: n == 2 ? 'two'\n\t\t\t: 'other',\n\tsi: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], f = s[1] || '';\n\t\treturn (n == 0 || n == 1) || i == 0 && f == 1 ? 'one' : 'other';\n\t},\n\tsl: (n) => {\n\t\tconst s = String(n).split('.'), i = s[0], v0 = !s[1], i100 = i.slice(-2);\n\t\treturn v0 && i100 == 1 ? 'one'\n\t\t\t: v0 && i100 == 2 ? 'two'\n\t\t\t: v0 && (i100 == 3 || i100 == 4) || !v0 ? 'few'\n\t\t\t: 'other';\n\t}\n}\n\n$.as = $.am\n$.az = $.af\n$.bg = $.af\n$.bn = $.am\n$.ca = $.ast\n$.ce = $.af\n$.chr = $.af\n$.de = $.ast\n$.ee = $.af\n$.el = $.af\n$.en = $.ast\n$.es = $.af\n$.et = $.ast\n$.eu = $.af\n$.fa = $.am\n$.fi = $.ast\n$.fil = $.ceb\n$.fo = $.af\n$.fur = $.af\n$.fy = $.ast\n$.gl = $.ast\n$.gu = $.am\n$.ha = $.af\n$.hi = $.am\n$.hr = $.bs\n$.hsb = $.dsb\n$.hu = $.af\n$.hy = $.ff\n$.ia = $.ast\n$.id = $.dz\n$.ig = $.dz\n$.it = $.ast\n$.ja = $.dz\n$.jgo = $.af\n$.jv = $.dz\n$.ka = $.af\n$.kea = $.dz\n$.kk = $.af\n$.kl = $.af\n$.km = $.dz\n$.kn = $.am\n$.ko = $.dz\n$.ku = $.af\n$.ky = $.af\n$.lb = $.af\n$.lkt = $.dz\n$.lo = $.dz\n$.ml = $.af\n$.mn = $.af\n$.mr = $.af\n$.ms = $.dz\n$.my = $.dz\n$.nb = $.af\n$.ne = $.af\n$.nl = $.ast\n$.nn = $.af\n$.no = $.af\n$.or = $.af\n$.pcm = $.am\n$.ps = $.af\n$.rm = $.af\n$.sah = $.dz\n$.sd = $.af\n$.sk = $.cs\n$.so = $.af\n$.sq = $.af\n$.sr = $.bs\n$.su = $.dz\n$.sv = $.ast\n$.sw = $.ast\n$.ta = $.af\n$.te = $.af\n$.th = $.dz\n$.ti = $.pa\n$.tk = $.af\n$.to = $.dz\n$.tr = $.af\n$.ug = $.af\n$.uk = $.ru\n$.ur = $.ast\n$.uz = $.af\n$.vi = $.dz\n$.wae = $.af\n$.wo = $.dz\n$.yi = $.ast\n$.yo = $.dz\n$.yue = $.dz\n$.zh = $.dz\n$.zu = $.am\n\nexport default $", "/**\r\n * Returns a `locale` for which a function exists in `./PluralRuleFunctions.js`.\r\n * @param  {string} locale\r\n * @return {string}\r\n * @example\r\n * getPluralRulesLocale(\"ru-RU-Cyrl\") // Returns \"ru\".\r\n */\r\nexport default function getPluralRulesLocale(locale) {\r\n\t// \"pt\" language is the only one having different pluralization rules\r\n\t// for the one (\"pt\") (Portuguese) locale and the other (\"pt-PT\") (European Portuguese).\r\n\t// http://www.unicode.org/cldr/charts/latest/supplemental/language_plural_rules.html\r\n\t// (see the entries for \"pt\" and \"pt_PT\" there)\r\n\tif (locale === 'pt-PT') {\r\n\t\treturn locale\r\n\t}\r\n\treturn getLanguageFromLanguageTag(locale)\r\n}\r\n\r\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\r\nconst LANGUAGE_REG_EXP = /^([a-z0-9]+)/i\r\nfunction getLanguageFromLanguageTag(languageTag) {\r\n\tconst match = languageTag.match(LANGUAGE_REG_EXP)\r\n\tif (!match) {\r\n\t\tthrow new TypeError(`Invalid locale: ${languageTag}`)\r\n\t}\r\n\treturn match[1]\r\n}\r\n", "// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// export { default as default } from 'intl-plural-rules-polyfill/cardinal'\r\n\r\nimport PluralRuleFunctions from \"./PluralRuleFunctions\"\r\nimport getPluralRulesLocale from \"./getPluralRulesLocale\"\r\n\r\n/**\r\n * `Intl.PluralRules` polyfill.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules\r\n */\r\nexport default class PluralRules {\r\n\tconstructor(locale, options) {\r\n\t\tconst locales = PluralRules.supportedLocalesOf(locale)\r\n\t\tif (locales.length === 0) {\r\n\t\t\tthrow new RangeError(\"Unsupported locale: \" + locale)\r\n\t\t}\r\n\t\tif (options && options.type !== \"cardinal\") {\r\n\t\t\tthrow new RangeError(\"Only \\\"cardinal\\\" \\\"type\\\" is supported\")\r\n\t\t}\r\n\t\tthis.$ = PluralRuleFunctions[getPluralRulesLocale(locales[0])]\r\n\t}\r\n\tselect(number) {\r\n\t\treturn this.$(number)\r\n\t}\r\n\tstatic supportedLocalesOf(locales) {\r\n\t\tif (typeof locales === \"string\") {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\t\treturn locales.filter(locale => PluralRuleFunctions[getPluralRulesLocale(locale)])\r\n\t}\r\n}", "import {\r\n  getDefaultLocale,\r\n  setDefaultLocale,\r\n  getLocaleData,\r\n  addLocaleData\r\n} from './LocaleDataStore'\r\n\r\nimport resolveLocale from './resolveLocale'\r\nimport PluralRules from './PluralRules'\r\n// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// import PluralRules from 'intl-plural-rules-polyfill/cardinal'\r\n\r\n// Valid time units.\r\nexport const UNITS = [\r\n  \"second\",\r\n  \"minute\",\r\n  \"hour\",\r\n  \"day\",\r\n  \"week\",\r\n  \"month\",\r\n  \"quarter\",\r\n  \"year\"\r\n]\r\n\r\n// Valid values for the `numeric` option.\r\nconst NUMERIC_VALUES = [\r\n  \"auto\",\r\n  \"always\"\r\n]\r\n\r\n// Valid values for the `style` option.\r\nconst STYLE_VALUES = [\r\n  \"long\",\r\n  \"short\",\r\n  \"narrow\"\r\n]\r\n\r\n// Valid values for the `localeMatcher` option.\r\nconst LOCALE_MATCHER_VALUES = [\r\n  \"lookup\",\r\n  \"best fit\"\r\n]\r\n\r\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\r\nexport default class RelativeTimeFormat {\r\n  numeric = \"always\"\r\n  style = \"long\"\r\n  localeMatcher = \"lookup\"\r\n\r\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   * @param {boolean} [options.styleFallback] - If \"style\" is missing from locale data then fall back to an existing one (for example, \"long\"). Is used in `javascript-time-ago`.\r\n   */\r\n  constructor(locales = [], options = {}) {\r\n    const {\r\n      numeric,\r\n      style,\r\n      styleFallback,\r\n      localeMatcher\r\n    } = options\r\n\r\n    // Set `numeric` option.\r\n    if (numeric !== undefined) {\r\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\r\n        throw new RangeError(`Invalid \"numeric\" option: ${numeric}`)\r\n      }\r\n      this.numeric = numeric\r\n    }\r\n\r\n    // Set `style` option.\r\n    if (style !== undefined) {\r\n      if (STYLE_VALUES.indexOf(style) < 0 && !styleFallback) {\r\n        throw new RangeError(`Invalid \"style\" option: ${style}`)\r\n      }\r\n      this.style = style\r\n    }\r\n\r\n    // Set `localeMatcher` option.\r\n    if (localeMatcher !== undefined) {\r\n      if (LOCALE_MATCHER_VALUES.indexOf(localeMatcher) < 0) {\r\n        throw new RangeError(`Invalid \"localeMatcher\" option: ${localeMatcher}`)\r\n      }\r\n      this.localeMatcher = localeMatcher\r\n    }\r\n\r\n    // Set `locale`.\r\n    // Convert `locales` to an array.\r\n    if (typeof locales === 'string') {\r\n      locales = [locales]\r\n    }\r\n    // Add default locale.\r\n    locales.push(getDefaultLocale())\r\n    // Choose the most appropriate locale.\r\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\r\n      localeMatcher: this.localeMatcher\r\n    })[0]\r\n    if (!this.locale) {\r\n      throw new Error(\"No supported locale was found\")\r\n    }\r\n\r\n    // Construct an `Intl.PluralRules` instance (polyfill).\r\n    if (PluralRules.supportedLocalesOf(this.locale).length > 0) {\r\n      this.pluralRules = new PluralRules(this.locale)\r\n    } else {\r\n      console.warn(`\"${this.locale}\" locale is not supported`)\r\n    }\r\n\r\n    // Use `Intl.NumberFormat` for formatting numbers (when available).\r\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\r\n      this.numberFormat = new Intl.NumberFormat(this.locale)\r\n      this.numberingSystem = this.numberFormat.resolvedOptions().numberingSystem\r\n    } else {\r\n      this.numberingSystem = 'latn'\r\n    }\r\n\r\n    this.locale = resolveLocale(this.locale, {\r\n      localeMatcher: this.localeMatcher\r\n    })\r\n\r\n    // Fall back to another style if `style` is not supported for the `locale`.\r\n    if (styleFallback) {\r\n      const styles = Object.keys(getLocaleData(this.locale))\r\n      for (const style of [this.style, ...STYLE_VALUES, styles[0]]) {\r\n        if (styles.indexOf(style) >= 0) {\r\n          this.style = style\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\r\n  format() {\r\n    const [number, unit] = parseFormatArgs(arguments)\r\n    return this.getRule(number, unit).replace('{0}', this.formatNumber(Math.abs(number)))\r\n  }\r\n\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {Object[]} The parts (`{ type, value, unit? }`).\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Version 1 (deprecated).\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"day\", value: \"100\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   * //\r\n   * // Version 2.\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   */\r\n  formatToParts() {\r\n    const [number, unit] = parseFormatArgs(arguments)\r\n    const rule = this.getRule(number, unit)\r\n    const valueIndex = rule.indexOf(\"{0}\")\r\n    // \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (valueIndex < 0) {\r\n      return [{\r\n        type: \"literal\",\r\n        value: rule\r\n      }]\r\n    }\r\n    let parts = []\r\n    if (valueIndex > 0) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(0, valueIndex)\r\n      })\r\n    }\r\n    parts = parts.concat(\r\n      this.formatNumberToParts(Math.abs(number))\r\n        .map(part => ({ ...part, unit }))\r\n    )\r\n    if (valueIndex + \"{0}\".length < rule.length - 1) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(valueIndex + \"{0}\".length)\r\n      })\r\n    }\r\n    return parts\r\n  }\r\n\r\n  /**\r\n   * Returns formatting rule for `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"{0} days ago\"\r\n   * getRule(-2, \"day\")\r\n   */\r\n  getRule(value, unit) {\r\n    // Get locale-specific time interval formatting rules\r\n    // of a given `style` for the given value of measurement `unit`.\r\n    //\r\n    // E.g.:\r\n    //\r\n    // ```json\r\n    // {\r\n    //  \"past\": {\r\n    //    \"one\": \"a second ago\",\r\n    //    \"other\": \"{0} seconds ago\"\r\n    //  },\r\n    //  \"future\": {\r\n    //    \"one\": \"in a second\",\r\n    //    \"other\": \"in {0} seconds\"\r\n    //  }\r\n    // }\r\n    // ```\r\n    //\r\n    const unitMessages = getLocaleData(this.locale)[this.style][unit]\r\n    // Bundle size optimization technique for styles like\r\n    // \"tiny\" in `javascript-time-ago`: \"1m\", \"2h\", \"3d\"...\r\n    if (typeof unitMessages === 'string') {\r\n      return unitMessages\r\n    }\r\n    // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (this.numeric === \"auto\") {\r\n      // \"yesterday\", \"the day before yesterday\", etc.\r\n      if (value === -2 || value === -1) {\r\n        const message = unitMessages[`previous${value === -1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"tomorrow\", \"the day after tomorrow\", etc.\r\n      else if (value === 1 || value === 2) {\r\n        const message = unitMessages[`next${value === 1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"today\"\r\n      else if (value === 0) {\r\n        if (unitMessages.current) {\r\n          return unitMessages.current\r\n        }\r\n      }\r\n    }\r\n    // Choose either \"past\" or \"future\" based on time `value` sign.\r\n    // If there's only \"other\" then it's being collapsed.\r\n    // (the resulting bundle size optimization technique)\r\n    const pluralizedMessages = unitMessages[isNegative(value) ? \"past\" : \"future\"]\r\n    // Bundle size optimization technique for styles like \"narrow\"\r\n    // having messages like \"in {0} d.\" or \"{0} d. ago\".\r\n    if (typeof pluralizedMessages === \"string\") {\r\n      return pluralizedMessages\r\n    }\r\n    // Quantify `value`.\r\n    // There seems to be no such locale in CLDR\r\n    // for which \"plural rules\" function is missing.\r\n    const quantifier = this.pluralRules && this.pluralRules.select(Math.abs(value)) || 'other'\r\n    // \"other\" rule is supposed to be always present.\r\n    // If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n    return pluralizedMessages[quantifier] || pluralizedMessages.other\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a string.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {string}\r\n   */\r\n  formatNumber(number) {\r\n    return this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a list of parts.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {object[]}\r\n   */\r\n  formatNumberToParts(number) {\r\n    // `Intl.NumberFormat.formatToParts()` is not present, for example,\r\n    // in Node.js 8.x while `Intl.NumberFormat` itself is present.\r\n    return this.numberFormat && this.numberFormat.formatToParts ?\r\n      this.numberFormat.formatToParts(number) :\r\n      [{\r\n        type: \"integer\",\r\n        value: this.formatNumber(number)\r\n      }]\r\n  }\r\n\r\n  /**\r\n   * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n   * @return {Object}\r\n   */\r\n  resolvedOptions() {\r\n    return {\r\n      locale: this.locale,\r\n      style: this.style,\r\n      numeric: this.numeric,\r\n      numberingSystem: this.numberingSystem\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\r\nRelativeTimeFormat.supportedLocalesOf = function(locales, options = {}) {\r\n  // Convert `locales` to an array.\r\n  if (typeof locales === 'string') {\r\n    locales = [locales]\r\n  } else if (!Array.isArray(locales)) {\r\n    throw new TypeError('Invalid \"locales\" argument')\r\n  }\r\n  return locales.filter(locale => resolveLocale(locale, options))\r\n}\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nRelativeTimeFormat.addLocale = addLocaleData\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale\r\n\r\n/**\r\n * Export `Intl.PluralRules` just in case it's used somewhere else.\r\n */\r\nRelativeTimeFormat.PluralRules = PluralRules\r\n\r\n// The specification allows units to be in plural form.\r\n// Convert plural to singular.\r\n// Example: \"seconds\" -> \"second\".\r\nconst UNIT_ERROR = 'Invalid \"unit\" argument'\r\nfunction parseUnit(unit) {\r\n  if (typeof unit === 'symbol') {\r\n    throw new TypeError(UNIT_ERROR)\r\n  }\r\n  if (typeof unit !== 'string') {\r\n    throw new RangeError(`${UNIT_ERROR}: ${unit}`)\r\n  }\r\n  if (unit[unit.length - 1] === 's') {\r\n    unit = unit.slice(0, unit.length - 1)\r\n  }\r\n  if (UNITS.indexOf(unit) < 0) {\r\n    throw new RangeError(`${UNIT_ERROR}: ${unit}`)\r\n  }\r\n  return unit\r\n}\r\n\r\n// Converts `value` to a `Number`.\r\n// The specification allows value to be a non-number.\r\n// For example, \"-0\" is supposed to be treated as `-0`.\r\n// Also checks if `value` is a finite number.\r\nconst NUMBER_ERROR = 'Invalid \"number\" argument'\r\nfunction parseNumber(value) {\r\n  value = Number(value)\r\n  if (Number.isFinite) {\r\n    if (!Number.isFinite(value)) {\r\n      throw new RangeError(`${NUMBER_ERROR}: ${value}`)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n/**\r\n * Tells `0` from `-0`.\r\n * https://stackoverflow.com/questions/7223359/are-0-and-0-the-same\r\n * @param  {number} number\r\n * @return {Boolean}\r\n * @example\r\n * isNegativeZero(0); // false\r\n * isNegativeZero(-0); // true\r\n */\r\nfunction isNegativeZero(number) {\r\n  return 1 / number === -Infinity\r\n}\r\n\r\nfunction isNegative(number) {\r\n  return number < 0 || number === 0 && isNegativeZero(number)\r\n}\r\n\r\nfunction parseFormatArgs(args) {\r\n  if (args.length < 2) {\r\n    throw new TypeError(`\"unit\" argument is required`)\r\n  }\r\n  return [\r\n    parseNumber(args[0]),\r\n    parseUnit(args[1])\r\n  ]\r\n}", "'use strict'\r\n\r\nexports = module.exports = require('./commonjs/RelativeTimeFormat').default\r\nexports['default'] = require('./commonjs/RelativeTimeFormat').default", "/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\r\nexport default class Cache {\r\n\tcache = {}\r\n\r\n\tget(...keys) {\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache !== 'object') {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache\r\n\t}\r\n\r\n\tput(...keys) {\r\n\t\tconst value = keys.pop()\r\n\t\tconst lastKey = keys.pop()\r\n\t\tlet cache = this.cache\r\n\t\tfor (const key of keys) {\r\n\t\t\tif (typeof cache[key] !== 'object') {\r\n\t\t\t\tcache[key] = {}\r\n\t\t\t}\r\n\t\t\tcache = cache[key]\r\n\t\t}\r\n\t\treturn cache[lastKey] = value\r\n\t}\r\n}", "/**\r\n * Chooses the most appropriate locale\r\n * (one of the registered ones)\r\n * based on the list of preferred `locales` supplied by the user.\r\n *\r\n * @param {string[]} locales - the list of preferable locales (in [IETF format](https://en.wikipedia.org/wiki/IETF_language_tag)).\r\n * @param {Function} isLocaleDataAvailable - tests if a locale is available.\r\n *\r\n * @returns {string} The most suitable locale.\r\n *\r\n * @example\r\n * // Returns 'en'\r\n * chooseLocale(['en-US'], undefined, (locale) => locale === 'ru' || locale === 'en')\r\n */\r\nexport default function chooseLocale(locales, isLocaleDataAvailable) {\r\n\t// This is not an intelligent algorithm,\r\n\t// but it will do for this library's case.\r\n\t// `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\r\n\tfor (let locale of locales) {\r\n\t\tif (isLocaleDataAvailable(locale)) {\r\n\t\t\treturn locale\r\n\t\t}\r\n\t\tconst parts = locale.split('-')\r\n\t\twhile (parts.length > 1) {\r\n\t\t\tparts.pop()\r\n\t\t\tlocale = parts.join('-')\r\n\t\t\tif (isLocaleDataAvailable(locale)) {\r\n\t\t\t\treturn locale\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthrow new Error(`No locale data has been registered for any of the locales: ${locales.join(', ')}`)\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\r\nexport function intlDateTimeFormatSupportedLocale(locales) {\r\n\t/* istanbul ignore else */\r\n\tif (intlDateTimeFormatSupported()) {\r\n\t\treturn Intl.DateTimeFormat.supportedLocalesOf(locales)[0]\r\n\t}\r\n}\r\n\r\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\r\nexport function intlDateTimeFormatSupported() {\r\n\t// Babel transforms `typeof` into some \"branches\"\r\n\t// so istanbul will show this as \"branch not covered\".\r\n\t/* istanbul ignore next */\r\n\tconst isIntlAvailable = typeof Intl === 'object'\r\n\treturn isIntlAvailable && typeof Intl.DateTimeFormat === 'function'\r\n}\r\n", "export const minute = 60 // in seconds\r\n\r\nexport const hour = 60 * minute // in seconds\r\n\r\nexport const day = 24 * hour // in seconds\r\n\r\nexport const week = 7 * day // in seconds\r\n\r\n// https://www.quora.com/What-is-the-average-number-of-days-in-a-month\r\nexport const month = 30.44 * day // in seconds\r\n\r\n// \"400 years have 146097 days (taking into account leap year rules)\"\r\nexport const year = (146097 / 400) * day // in seconds\r\n\r\nexport function getSecondsInUnit(unit) {\r\n\tswitch (unit) {\r\n\t\tcase 'second':\r\n\t\t\treturn 1\r\n\t\tcase 'minute':\r\n\t\t\treturn minute\r\n\t\tcase 'hour':\r\n\t\t\treturn hour\r\n\t\tcase 'day':\r\n\t\t\treturn day\r\n\t\tcase 'week':\r\n\t\t\treturn week\r\n\t\tcase 'month':\r\n\t\t\treturn month\r\n\t\tcase 'year':\r\n\t\t\treturn year\r\n\t}\r\n}\r\n\r\n// export function getPreviousUnitFor(unit) {\r\n// \tswitch (unit) {\r\n// \t\tcase 'second':\r\n// \t\t\treturn 'now'\r\n// \t\tcase 'minute':\r\n// \t\t\treturn 'second'\r\n// \t\tcase 'hour':\r\n// \t\t\treturn 'minute'\r\n// \t\tcase 'day':\r\n// \t\t\treturn 'hour'\r\n// \t\tcase 'week':\r\n// \t\t\treturn 'day'\r\n// \t\tcase 'month':\r\n// \t\t\treturn 'week'\r\n// \t\tcase 'year':\r\n// \t\t\treturn 'month'\r\n// \t}\r\n// }", "import { getSecondsInUnit } from './units'\r\n\r\nexport default function getStepDenominator(step) {\r\n\t// `factor` is a legacy property.\r\n\tif (step.factor !== undefined) {\r\n\t\treturn step.factor\r\n\t}\r\n\t// \"unit\" is now called \"formatAs\".\r\n\treturn getSecondsInUnit(step.unit || step.formatAs) || 1\r\n}", "export function getRoundFunction(round) {\r\n\tswitch (round) {\r\n\t\tcase 'floor':\r\n\t\t\treturn Math.floor\r\n\t\tdefault:\r\n\t\t\treturn Math.round\r\n\t}\r\n}\r\n\r\n// For non-negative numbers.\r\nexport function getDiffRatioToNextRoundedNumber(round) {\r\n\tswitch (round) {\r\n\t\tcase 'floor':\r\n\t\t\t// Math.floor(x) = x\r\n\t\t\t// Math.floor(x + 1) = x + 1\r\n\t\t\treturn 1\r\n\t\tdefault:\r\n\t\t\t// Math.round(x) = x\r\n\t\t\t// Math.round(x + 0.5) = x + 1\r\n\t\t\treturn 0.5\r\n\t}\r\n}", "import { getSecondsInUnit } from './units'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}", "import getStepDenominator from './getStepDenominator'\r\nimport getStepMinTime from './getStepMinTime'\r\nimport { getRoundFunction } from '../round'\r\n\r\n/**\r\n * Finds an appropriate `step` of `steps` for the time interval (in seconds).\r\n *\r\n * @param {Object[]} steps - Time formatting steps.\r\n *\r\n * @param {number} secondsPassed - Time interval (in seconds).\r\n *                                 `< 0` for past dates and `> 0` for future dates.\r\n *\r\n * @param {number} options.now - Current timestamp.\r\n *\r\n * @param {boolean} [options.future] - Whether the date should be formatted as a future one\r\n *                                     instead of a past one.\r\n *\r\n * @param {string} [options.round] - (undocumented) Rounding mechanism.\r\n *\r\n * @param {string[]} [options.units] - A list of allowed time units.\r\n *                                     (Example: ['second', 'minute', 'hour', \u2026])\r\n *\r\n * @param {boolean} [options.getNextStep] - Pass true to return `[step, nextStep]` instead of just `step`.\r\n *\r\n * @return {Object|Object[]} [step] \u2014 Either a `step` or `[prevStep, step, nextStep]`.\r\n */\r\nexport default function getStep(steps, secondsPassed, { now, future, round, units, getNextStep }) {\r\n\t// Ignore steps having not-supported time units in `formatAs`.\r\n\tsteps = filterStepsByUnits(steps, units)\r\n\tconst step = _getStep(steps, secondsPassed, { now, future, round })\r\n\tif (getNextStep) {\r\n\t\tif (step) {\r\n\t\t\tconst prevStep = steps[steps.indexOf(step) - 1]\r\n\t\t\tconst nextStep = steps[steps.indexOf(step) + 1]\r\n\t\t\treturn [prevStep, step, nextStep]\r\n\t\t}\r\n\t\treturn [undefined, undefined, steps[0]]\r\n\t}\r\n\treturn step\r\n}\r\n\r\nfunction _getStep(steps, secondsPassed, { now, future, round }) {\r\n\t// If no steps fit the conditions then return nothing.\r\n\tif (steps.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Find the most appropriate step.\r\n\tconst i = getStepIndex(steps, secondsPassed, {\r\n\t\tnow,\r\n\t\tfuture: future || secondsPassed < 0,\r\n\t\tround\r\n\t})\r\n\r\n\t// If no step is applicable the return nothing.\r\n\tif (i === -1) {\r\n\t\treturn\r\n\t}\r\n\r\n\tconst step = steps[i]\r\n\r\n\t// Apply granularity to the time amount\r\n\t// (and fall back to the previous step\r\n\t//  if the first level of granularity\r\n\t//  isn't met by this amount)\r\n\tif (step.granularity) {\r\n\t\t// Recalculate the amount of seconds passed based on `granularity`.\r\n\t\tconst secondsPassedGranular = getRoundFunction(round)((Math.abs(secondsPassed) / getStepDenominator(step)) / step.granularity) * step.granularity\r\n\t\t// If the granularity for this step is too high,\r\n\t\t// then fall back to the previous step.\r\n\t\t// (if there is any previous step)\r\n\t\tif (secondsPassedGranular === 0 && i > 0) {\r\n\t\t\treturn steps[i - 1]\r\n\t\t}\r\n\t}\r\n\r\n\treturn step\r\n}\r\n\r\n/**\r\n * Iterates through steps until it finds the maximum one satisfying the `minTime` threshold.\r\n * @param  {Object} steps - Steps.\r\n * @param  {number} secondsPassed - How much seconds have passed since the date till `now`.\r\n * @param  {number} options.now - Current timestamp.\r\n * @param  {boolean} options.future - Whether the time interval should be formatted as a future one.\r\n * @param  {number} [i] - Gradation step currently being tested.\r\n * @return {number} Gradation step index.\r\n */\r\nfunction getStepIndex(steps, secondsPassed, options, i = 0) {\r\n\tconst minTime = getStepMinTime(steps[i], {\r\n\t\tprevStep: steps[i - 1],\r\n\t\ttimestamp: options.now - secondsPassed * 1000,\r\n\t\t...options\r\n\t})\r\n\t// If `minTime` isn't defined or deduceable for this step, then stop.\r\n\tif (minTime === undefined) {\r\n\t\treturn i - 1\r\n\t}\r\n\t// If the `minTime` threshold for moving from previous step\r\n\t// to this step is too high then return the previous step.\r\n\tif (Math.abs(secondsPassed) < minTime) {\r\n\t\treturn i - 1\r\n\t}\r\n\t// If it's the last step then return it.\r\n\tif (i === steps.length - 1) {\r\n\t\treturn i\r\n\t}\r\n\t// Move to the next step.\r\n\treturn getStepIndex(steps, secondsPassed, options, i + 1)\r\n}\r\n\r\n/**\r\n * Leaves only allowed steps.\r\n * @param  {Object[]} steps\r\n * @param  {string[]} units - Allowed time units.\r\n * @return {Object[]}\r\n */\r\nfunction filterStepsByUnits(steps, units) {\r\n\treturn steps.filter(({ unit, formatAs }) => {\r\n\t\t// \"unit\" is now called \"formatAs\".\r\n\t\tunit = unit || formatAs\r\n\t\t// If this step has a `unit` defined\r\n\t\t// then this `unit` must be in the list of allowed `units`.\r\n\t\tif (unit) {\r\n\t\t\treturn units.indexOf(unit) >= 0\r\n\t\t}\r\n\t\t// A step is not required to specify a `unit`:\r\n\t\t// alternatively, it could specify `format()`.\r\n\t\t// (see \"twitter\" style for an example)\r\n\t\treturn true\r\n\t})\r\n}", "import { getSecondsInUnit } from './units'\r\nimport { getRoundFunction, getDiffRatioToNextRoundedNumber } from '../round'\r\n\r\n/**\r\n * Gets the time to next update for a step with a time unit defined.\r\n * @param  {string} unit\r\n * @param  {number} date \u2014 The date passed to `.format()`, converted to a timestamp.\r\n * @param  {number} options.now\r\n * @param  {string} [options.round] \u2014 (undocumented) Rounding mechanism.\r\n * @return {number} [timeToNextUpdate]\r\n */\r\nexport default function getTimeToNextUpdateForUnit(unit, timestamp, { now, round }) {\r\n\t// For some units, like \"now\", there's no defined amount of seconds in them.\r\n\tif (!getSecondsInUnit(unit)) {\r\n\t\t// If there's no amount of seconds defined for this unit\r\n\t\t// then the update interval can't be determined reliably.\r\n\t\treturn\r\n\t}\r\n\tconst unitDenominator = getSecondsInUnit(unit) * 1000\r\n\tconst future = timestamp > now\r\n\tconst preciseAmount = Math.abs(timestamp - now)\r\n\tconst roundedAmount = getRoundFunction(round)(preciseAmount / unitDenominator) * unitDenominator\r\n\tif (future) {\r\n\t\tif (roundedAmount > 0) {\r\n\t\t\t// Amount decreases with time.\r\n\t\t\treturn (preciseAmount - roundedAmount) +\r\n\t\t\t\tgetDiffToPreviousRoundedNumber(round, unitDenominator)\r\n\t\t} else {\r\n\t\t\t// Refresh right after the zero point,\r\n\t\t\t// when \"future\" changes to \"past\".\r\n\t\t\treturn (preciseAmount - roundedAmount) + 1\r\n\t\t}\r\n\t}\r\n \t// Amount increases with time.\r\n\treturn -(preciseAmount - roundedAmount) + getDiffToNextRoundedNumber(round, unitDenominator)\r\n}\r\n\r\nfunction getDiffToNextRoundedNumber(round, unitDenominator) {\r\n\treturn getDiffRatioToNextRoundedNumber(round) * unitDenominator\r\n}\r\n\r\nfunction getDiffToPreviousRoundedNumber(round, unitDenominator) {\r\n\treturn (1 - getDiffRatioToNextRoundedNumber(round)) * unitDenominator + 1\r\n}", "import _getTimeToNextUpdateForUnit from './getTimeToNextUpdateForUnit'\r\nimport getStepMinTime from './getStepMinTime'\r\nimport { getRoundFunction } from '../round'\r\n\r\n// A thousand years is practically a metaphor for \"infinity\".\r\nconst YEAR = 365 * 24 * 60 * 60 * 1000\r\nexport const INFINITY = 1000 * YEAR\r\n\r\n/**\r\n * Gets the time to next update for a date and a step.\r\n * @param  {number} date \u2014 The date passed to `.format()`, converted to a timestamp.\r\n * @param  {object} step\r\n * @param  {object} [options.previousStep]\r\n * @param  {object} [options.nextStep]\r\n * @param  {number} options.now\r\n * @param  {boolean} options.future\r\n * @param  {string} [options.round] - (undocumented) Rounding mechanism.\r\n * @return {number} [timeToNextUpdate]\r\n */\r\nexport default function getTimeToNextUpdate(date, step, { prevStep, nextStep, now, future, round }) {\r\n\tconst timestamp = date.getTime ? date.getTime() : date\r\n\r\n\tconst getTimeToNextUpdateForUnit = (unit) => _getTimeToNextUpdateForUnit(unit, timestamp, { now, round })\r\n\r\n\t// For future dates, steps move from the last one to the first one,\r\n\t// while for past dates, steps move from the first one to the last one,\r\n\t// due to the fact that time flows in one direction,\r\n\t// and future dates' interval naturally becomes smaller\r\n\t// while past dates' interval naturally grows larger.\r\n\t//\r\n\t// For future dates, it's the transition\r\n\t// from the current step to the previous step,\r\n\t// therefore check the `minTime` of the current step.\r\n\t//\r\n\t// For past dates, it's the transition\r\n\t// from the current step to the next step,\r\n\t// therefore check the `minTime` of the next step.\r\n\t//\r\n\tconst timeToStepChange = getTimeToStepChange(future ? step : nextStep, timestamp, {\r\n\t\tfuture,\r\n\t\tnow,\r\n\t\tround,\r\n\t\tprevStep: future ? prevStep : step,\r\n\t\t// isFirstStep: future && isFirstStep\r\n\t})\r\n\r\n\tif (timeToStepChange === undefined) {\r\n\t\t// Can't reliably determine \"time to next update\"\r\n\t\t// if not all of the steps provide `minTime`.\r\n\t\treturn\r\n\t}\r\n\r\n\tlet timeToNextUpdate\r\n\r\n\tif (step) {\r\n\t\tif (step.getTimeToNextUpdate) {\r\n\t\t\ttimeToNextUpdate = step.getTimeToNextUpdate(timestamp, {\r\n\t\t\t\tgetTimeToNextUpdateForUnit,\r\n\t\t\t\tgetRoundFunction,\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture,\r\n\t\t\t\tround\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (timeToNextUpdate === undefined) {\r\n\t\t\t// \"unit\" is now called \"formatAs\".\r\n\t\t\tconst unit = step.unit || step.formatAs\r\n\t\t\tif (unit) {\r\n\t\t\t\t// For some units, like \"now\", there's no defined amount of seconds in them.\r\n\t\t\t\t// In such cases, `getTimeToNextUpdateForUnit()` returns `undefined`,\r\n\t\t\t\t// and the next step's `minTime` could be used to calculate the update interval:\r\n\t\t\t\t// it will just assume that the label never changes for this step.\r\n\t\t\t\ttimeToNextUpdate = getTimeToNextUpdateForUnit(unit)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (timeToNextUpdate === undefined) {\r\n\t\treturn timeToStepChange\r\n\t}\r\n\r\n\treturn Math.min(timeToNextUpdate, timeToStepChange)\r\n}\r\n\r\nexport function getStepChangesAt(currentOrNextStep, timestamp, { now, future, round, prevStep }) {\r\n\t// The first step's `minTime` is `0` by default.\r\n\t// It doesn't \"change\" steps at zero point\r\n\t// but it does change the wording when switching\r\n\t// from \"future\" to \"past\": \"in ...\" -> \"... ago\".\r\n\t// Therefore, the label should be updated at zero-point too.\r\n\tconst minTime = getStepMinTime(currentOrNextStep, { timestamp, now, future, round, prevStep })\r\n\tif (minTime === undefined) {\r\n\t\treturn\r\n\t}\r\n\tif (future) {\r\n\t\t// The step changes to the previous step\r\n\t\t// as soon as `timestamp - now` becomes\r\n\t\t// less than the `minTime` of the current step:\r\n\t\t// `timestamp - now === minTime - 1`\r\n\t\t// => `now === timestamp - minTime + 1`.\r\n\t\treturn timestamp - minTime * 1000 + 1\r\n\t} else {\r\n\t\t// The step changes to the next step\r\n\t\t// as soon as `now - timestamp` becomes\r\n\t\t// equal to `minTime` of the next step:\r\n\t\t// `now - timestamp === minTime`\r\n\t\t// => `now === timestamp + minTime`.\r\n\r\n\t\t// This is a special case when double-update could be skipped.\r\n\t\tif (minTime === 0 && timestamp === now) {\r\n\t\t\treturn INFINITY\r\n\t\t}\r\n\r\n\t\treturn timestamp + minTime * 1000\r\n\t}\r\n}\r\n\r\nexport function getTimeToStepChange(step, timestamp, {\r\n\tnow,\r\n\tfuture,\r\n\tround,\r\n\tprevStep\r\n}) {\r\n\tif (step) {\r\n\t\tconst stepChangesAt = getStepChangesAt(step, timestamp, {\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround,\r\n\t\t\tprevStep\r\n\t\t})\r\n\t\tif (stepChangesAt === undefined) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn stepChangesAt - now\r\n\t} else {\r\n\t\tif (future) {\r\n\t\t\t// No step.\r\n\t\t\t// Update right after zero point, when it changes from \"future\" to \"past\".\r\n\t\t\treturn timestamp - now + 1\r\n\t\t} else {\r\n\t\t\t// The last step doesn't ever change when `date` is in the past.\r\n\t\t\treturn INFINITY\r\n\t\t}\r\n\t}\r\n}", "// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\nexport function addLocaleData(localeData) {\r\n\tif (!localeData) {\r\n\t\tthrow new Error('[javascript-time-ago] No locale data passed.')\r\n\t}\r\n\t// This locale data is stored in a global variable\r\n\t// and later used when calling `.format(time)`.\r\n\tlocalesData[localeData.locale] = localeData\r\n}", "// just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// \u2026\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// \u2026\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// \u2026\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// \u2026\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// \u2026\r\n// 3 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// \u2026\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// \u2026\r\nexport default [\r\n\t{\r\n\t\tformatAs: 'now'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'second'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'minute'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'hour'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'day'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'week'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'month'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'year'\r\n\t}\r\n]", "import round from '../steps/round'\r\n\r\n// just now\r\n// 1 second ago\r\n// 2 seconds ago\r\n// \u2026\r\n// 59 seconds ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// \u2026\r\n// 59 minutes ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// \u2026\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// \u2026\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// \u2026\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// 4 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// \u2026\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// \u2026\r\n//\r\nexport default {\r\n\tsteps: round,\r\n\tlabels: 'long'\r\n}", "import round from './round'\r\n\r\n// just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// \u2026\r\n// 59 minutes ago\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// \u2026\r\n// 59 minutes ago\r\n// 1 hour ago\r\n// 2 hours ago\r\n// \u2026\r\n// 24 hours ago\r\n// 1 day ago\r\n// 2 days ago\r\n// \u2026\r\n// 6 days ago\r\n// 1 week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// 4 weeks ago\r\n// 1 month ago\r\n// 2 months ago\r\n// \u2026\r\n// 11 months ago\r\n// 1 year ago\r\n// 2 years ago\r\n// \u2026\r\n//\r\nexport default {\r\n\t...round,\r\n\t// Skip \"seconds\".\r\n\tsteps: round.steps.filter(step => step.formatAs !== 'second')\r\n}", "import { minute, hour, day, week, month, year } from './units'\r\n\r\n// \"factor\" is a legacy property.\r\n// Developers shouldn't need to use it in their custom steps.\r\n\r\n// \"threshold\" is a legacy name of \"min\".\r\n// Developers should use \"min\" property name instead of \"threshold\".\r\n\r\n// \"threshold_for_idOrUnit: value\" is a legacy way of specifying \"min: { id: value }\".\r\n// Developers should use \"min\" property instead of \"threshold\".\r\n\r\n// just now\r\n// 1 minute ago\r\n// 2 minutes ago\r\n// 5 minutes ago\r\n// 10 minutes ago\r\n// 15 minutes ago\r\n// 20 minutes ago\r\n// \u2026\r\n// 50 minutes ago\r\n// an hour ago\r\n// 2 hours ago\r\n// \u2026\r\n// 20 hours ago\r\n// a day ago\r\n// 2 days ago\r\n// 5 days ago\r\n// a week ago\r\n// 2 weeks ago\r\n// 3 weeks ago\r\n// a month ago\r\n// 2 months ago\r\n// 4 months ago\r\n// a year ago\r\n// 2 years ago\r\n// \u2026\r\nexport default [\r\n\t{\r\n\t\t// This step returns the amount of seconds\r\n\t\t// by dividing the amount of seconds by `1`.\r\n\t\tfactor: 1,\r\n    \t// \"now\" labels are used for formatting the output.\r\n\t\tunit: 'now'\r\n\t},\r\n\t{\r\n\t\t// When the language doesn't support `now` unit,\r\n\t\t// the first step is ignored, and it uses this `second` unit.\r\n\t\tthreshold: 1,\r\n\t\t// `threshold_for_now` should be the same as `threshold` on minutes.\r\n\t\tthreshold_for_now: 45.5,\r\n\t\t// This step returns the amount of seconds\r\n\t\t// by dividing the amount of seconds by `1`.\r\n\t\tfactor: 1,\r\n    \t// \"second\" labels are used for formatting the output.\r\n\t\tunit: 'second'\r\n\t},\r\n\t{\r\n\t\t// `threshold` should be the same as `threshold_for_now` on seconds.\r\n\t\tthreshold: 45.5,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a minute.\r\n\t\tfactor: minute,\r\n    \t// \"minute\" labels are used for formatting the output.\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 2.5 minutes.\r\n\t\tthreshold: 2.5 * minute,\r\n\t\t// Allow only 5-minute increments of minutes starting from 2.5 minutes.\r\n\t\t// `granularity` \u2014 (advanced) Time interval value \"granularity\".\r\n\t\t// For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n\t\t// when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n\t\t// Perhaps this feature will be removed because there seem to be no use cases\r\n\t\t// of it in the real world.\r\n\t\tgranularity: 5,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a minute.\r\n\t\tfactor: minute,\r\n\t\t// \"minute\" labels are used for formatting the output.\r\n\t\tunit: 'minute'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 22.5 minutes.\r\n\t\tthreshold: 22.5 * minute,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in  half-an-hour.\r\n\t\tfactor: 0.5 * hour,\r\n\t\t// \"half-hour\" labels are used for formatting the output.\r\n\t\t// (if available, which is no longer the case)\r\n\t\tunit: 'half-hour'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 42.5 minutes.\r\n\t\tthreshold: 42.5 * minute,\r\n\t\tthreshold_for_minute: 52.5 * minute,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in an hour.\r\n\t\tfactor: hour,\r\n\t\t// \"hour\" labels are used for formatting the output.\r\n\t\tunit: 'hour'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 20.5 hours.\r\n\t\tthreshold: (20.5 / 24) * day,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a day.\r\n\t\tfactor: day,\r\n\t\t// \"day\" labels are used for formatting the output.\r\n\t\tunit: 'day'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 5.5 days.\r\n\t\tthreshold: 5.5 * day,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a week.\r\n\t\tfactor: week,\r\n\t\t// \"week\" labels are used for formatting the output.\r\n\t\tunit: 'week'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 3.5 weeks.\r\n\t\tthreshold: 3.5 * week,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a month.\r\n\t\tfactor: month,\r\n\t\t// \"month\" labels are used for formatting the output.\r\n\t\tunit: 'month'\r\n\t},\r\n\t{\r\n\t\t// This step is effective starting from 10.5 months.\r\n\t\tthreshold: 10.5 * month,\r\n\t\t// Return the amount of minutes by dividing the amount\r\n\t\t// of seconds by the amount of seconds in a year.\r\n\t\tfactor: year,\r\n\t\t// \"year\" labels are used for formatting the output.\r\n\t\tunit: 'year'\r\n\t}\r\n]", "import approximate from '../steps/approximate'\r\n\r\n// \"gradation\" is a legacy name for \"steps\".\r\n// It's here just for legacy compatibility.\r\n// Use \"steps\" name instead.\r\n\r\n// \"flavour\" is a legacy name for \"labels\".\r\n// It's here just for legacy compatibility.\r\n// Use \"labels\" name instead.\r\n\r\n// \"units\" is a legacy property.\r\n// It's here just for legacy compatibility.\r\n// Developers shouldn't need to use it in their custom styles.\r\n\r\nexport default {\r\n\tgradation: approximate,\r\n\tflavour: 'long',\r\n\tunits: [\r\n\t\t'now',\r\n\t\t'minute',\r\n\t\t'hour',\r\n\t\t'day',\r\n\t\t'week',\r\n\t\t'month',\r\n\t\t'year'\r\n\t]\r\n}", "import approximate from '../steps/approximate'\r\n\r\n// \"gradation\" is a legacy name for \"steps\".\r\n// It's here just for legacy compatibility.\r\n// Use \"steps\" name instead.\r\n\r\n// \"flavour\" is a legacy name for \"labels\".\r\n// It's here just for legacy compatibility.\r\n// Use \"labels\" name instead.\r\n\r\n// \"units\" is a legacy property.\r\n// It's here just for legacy compatibility.\r\n// Developers shouldn't need to use it in their custom styles.\r\n\r\n// Similar to the default style but with \"ago\" omitted.\r\n//\r\n// just now\r\n// 5 minutes\r\n// 10 minutes\r\n// 15 minutes\r\n// 20 minutes\r\n// an hour\r\n// 2 hours\r\n// \u2026\r\n// 20 hours\r\n// 1 day\r\n// 2 days\r\n// a week\r\n// 2 weeks\r\n// 3 weeks\r\n// a month\r\n// 2 months\r\n// 3 months\r\n// 4 months\r\n// a year\r\n// 2 years\r\n//\r\nexport default {\r\n\tgradation: approximate,\r\n\tflavour: 'long-time',\r\n\tunits: [\r\n\t\t'now',\r\n\t\t'minute',\r\n\t\t'hour',\r\n\t\t'day',\r\n\t\t'week',\r\n\t\t'month',\r\n\t\t'year'\r\n\t]\r\n}", "// Looks like this one's deprecated.\r\n// /**\r\n//  * Returns a step corresponding to the unit.\r\n//  * @param  {Object[]} steps\r\n//  * @param  {string} unit\r\n//  * @return {?Object}\r\n//  */\r\n// export function getStepForUnit(steps, unit) {\r\n// \tfor (const step of steps) {\r\n// \t\tif (step.unit === unit) {\r\n// \t\t\treturn step\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\n// Looks like this one won't be used in the next major version.\r\n/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\r\nexport function getDate(value) {\r\n\treturn value instanceof Date ? value : new Date(value)\r\n}", "// \"convenient\" is a legacy name of \"approximate\" steps.\r\nexport { default as approximate, default as convenient } from './approximate'\r\n\r\n// \"canonical\" is a legacy name of \"round\" steps.\r\nexport { default as round, default as canonical } from './round'\r\n\r\nexport {\r\n\tminute,\r\n\thour,\r\n\tday,\r\n\tweek,\r\n\tmonth,\r\n\tyear\r\n} from './units'\r\n\r\nexport {\r\n\tgetDate\r\n} from './helpers'", "// This function is only used for backwards compatibility\r\n// with legacy code that uses the older versions of this library.\r\nexport default function(step_) {\r\n\tconst step = { ...step_ }\r\n\tif (step.minTime !== undefined) {\r\n\t\tif (typeof step.minTime === 'object') {\r\n\t\t\tfor (const key of Object.keys(step.minTime)) {\r\n\t\t\t\tif (key === 'default') {\r\n\t\t\t\t\tstep.threshold = step.minTime.default\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstep[`threshold_for_${key}`] = step.minTime[key]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstep.threshold = step.minTime\r\n\t\t}\r\n\t\tdelete step.minTime\r\n\t}\r\n\tif (step.formatAs) {\r\n\t\tstep.unit = step.formatAs\r\n\t\tdelete step.formatAs\r\n\t}\r\n\treturn step\r\n}", "import renameLegacyProperties from '../steps/renameLegacyProperties'\r\n\r\n// This function is only used for backwards compatibility\r\n// with legacy code that uses the older versions of this library.\r\nexport default function(style_) {\r\n\tconst style = { ...style_ }\r\n\tif (style.steps) {\r\n\t\tstyle.gradation = style.steps.map(renameLegacyProperties)\r\n\t\tdelete style.steps\r\n\t}\r\n\tif (style.labels) {\r\n\t\tstyle.flavour = style.labels\r\n\t\tdelete style.labels\r\n\t}\r\n\treturn style\r\n}", "import { day, getDate } from '../steps'\r\nimport { intlDateTimeFormatSupported } from '../locale'\r\n\r\n// For compatibility with the old versions of this library.\r\nimport renameLegacyProperties from './renameLegacyProperties'\r\n\r\n// Twitter-style relative date/time formatting.\r\n// (\"1m\", \"2h\", \"Mar 3\", \"Apr 4, 2012\").\r\n//\r\n// Seconds, minutes or hours are shown for shorter intervals,\r\n// and longer intervals are formatted using full date format.\r\n\r\nconst steps = [\r\n\t{\r\n\t\tformatAs: 'second'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'minute'\r\n\t},\r\n\t{\r\n\t\tformatAs: 'hour'\r\n\t}\r\n]\r\n\r\n// A cache for `Intl.DateTimeFormat` formatters\r\n// for various locales (is a global variable).\r\nconst formatters = {}\r\n\r\n// Starting from day intervals, output month and day.\r\nconst monthAndDay = {\r\n\tminTime(timestamp, { future, getMinTimeForUnit }) {\r\n\t\t// Returns `23.5 * 60 * 60` when `round` is \"round\",\r\n\t\t// and `24 * 60 * 60` when `round` is \"floor\".\r\n\t\treturn getMinTimeForUnit('day')\r\n\t},\r\n\tformat(value, locale) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (!formatters[locale]) {\r\n\t\t\tformatters[locale] = {}\r\n\t\t}\r\n\t\t/* istanbul ignore else */\r\n\t\tif (!formatters[locale].dayMonth) {\r\n\t\t\t// \"Apr 11\" (MMMd)\r\n\t\t\tformatters[locale].dayMonth = new Intl.DateTimeFormat(locale, {\r\n\t\t\t\tmonth: 'short',\r\n\t\t\t\tday: 'numeric'\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Output month and day.\r\n\t\treturn formatters[locale].dayMonth.format(getDate(value))\r\n\t}\r\n}\r\n\r\n// If the `date` happened/happens outside of current year,\r\n// then output day, month and year.\r\n// The interval should be such that the `date` lies outside of the current year.\r\nconst yearMonthAndDay = {\r\n\tminTime(timestamp, { future }) {\r\n\t\tif (future) {\r\n\t\t\t// January 1, 00:00, of the `date`'s year is right after\r\n\t\t\t// the maximum `now` for formatting a future date:\r\n\t\t\t// When `now` is before that date, the `date` is formatted as \"day/month/year\" (this step),\r\n\t\t\t// When `now` is equal to or after that date, the `date` is formatted as \"day/month\" (another step).\r\n\t\t\t// After that, it's hours, minutes, seconds, and after that it's no longer `future`.\r\n\t\t\t// The date is right after the maximum `now` for formatting a future date,\r\n\t\t\t// so subtract 1 millisecond from it.\r\n\t\t\tconst maxFittingNow = new Date(new Date(timestamp).getFullYear(), 0).getTime() - 1\r\n\t\t\t// Return `minTime` (in seconds).\r\n\t\t\treturn (timestamp - maxFittingNow) / 1000\r\n\t\t} else {\r\n\t\t\t// January 1, 00:00, of the year following the `date`'s year\r\n\t\t\t// is the minimum `now` for formatting a past date:\r\n\t\t\t// When `now` is before that date, the `date` is formatted as \"day/month\" (another step),\r\n\t\t\t// When `now` is equal to or after that date, the `date` is formatted as \"day/month/year\" (this step).\r\n\t\t\t// After that, it's hours, minutes, seconds, and after that it's no longer `future`.\r\n\t\t\tconst minFittingNow = new Date(new Date(timestamp).getFullYear() + 1, 0).getTime()\r\n\t\t\t// Return `minTime` (in seconds).\r\n\t\t\treturn (minFittingNow - timestamp) / 1000\r\n\t\t}\r\n\t},\r\n\tformat(value, locale) {\r\n\t\t/* istanbul ignore if */\r\n\t\tif (!formatters[locale]) {\r\n\t\t\tformatters[locale] = {}\r\n\t\t}\r\n\t\t/* istanbul ignore else */\r\n\t\tif (!formatters[locale].dayMonthYear) {\r\n\t\t\t// \"Apr 11, 2017\" (yMMMd)\r\n\t\t\tformatters[locale].dayMonthYear = new Intl.DateTimeFormat(locale, {\r\n\t\t\t\tyear: 'numeric',\r\n\t\t\t\tmonth: 'short',\r\n\t\t\t\tday: 'numeric'\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Output day, month and year.\r\n\t\treturn formatters[locale].dayMonthYear.format(getDate(value))\r\n\t}\r\n}\r\n\r\n// If `Intl.DateTimeFormat` is supported,\r\n// then longer time intervals will be formatted as dates.\r\n/* istanbul ignore else */\r\nif (intlDateTimeFormatSupported()) {\r\n\tsteps.push(monthAndDay, yearMonthAndDay)\r\n}\r\n// Otherwise, if `Intl.DateTimeFormat` is not supported,\r\n// which could be the case when using Internet Explorer,\r\n// then simply mimick \"round\" steps.\r\nelse {\r\n\tsteps.push(\r\n\t\t{\r\n\t\t\tformatAs: 'day'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'week'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'month'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'year'\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport default {\r\n\tsteps,\r\n\tlabels: [\r\n\t\t// \"mini\" labels are only defined for a few languages.\r\n\t\t'mini',\r\n\t\t// \"short-time\" labels are only defined for a few languages.\r\n\t\t'short-time',\r\n\t\t// \"narrow\" and \"short\" labels are defined for all languages.\r\n\t\t// \"narrow\" labels can sometimes be weird (like \"+5d.\"),\r\n\t\t// but \"short\" labels have the \" ago\" part, so \"narrow\" seem\r\n\t\t// more appropriate.\r\n\t\t// \"short\" labels would have been more appropriate if they\r\n\t\t// didn't have the \" ago\" part, hence the \"short-time\" above.\r\n\t\t'narrow',\r\n\t\t// Since \"narrow\" labels are always present, \"short\" element\r\n\t\t// of this array can be removed.\r\n\t\t'short'\r\n\t]\r\n}", "import twitter from './twitter'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(twitter.steps)\r\n}", "import twitter from './twitter'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Skip \"seconds\".\r\n\tsteps: twitter.steps.filter(step => step.formatAs !== 'second')\r\n}", "import twitterMinute from './twitterMinute'\r\n\r\nexport default {\r\n\t...twitterMinute,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(twitterMinute.steps)\r\n}", "import { minute } from '../steps/units'\r\nimport twitter from './twitter'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Skip \"seconds\".\r\n\tsteps: twitter.steps.filter(step => step.formatAs !== 'second')\r\n\t\t// Start showing `1m` from the first minute.\r\n\t\t.map(step => step.formatAs === 'minute' ? { ...step, minTime: minute } : step)\r\n}", "export default {\r\n\tsteps: [\r\n\t\t{\r\n\t\t\tformatAs: 'second'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'minute'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'hour'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'day'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'month'\r\n\t\t},\r\n\t\t{\r\n\t\t\tformatAs: 'year'\r\n\t\t}\r\n\t],\r\n\tlabels: [\r\n\t\t// \"mini\" labels are only defined for a few languages.\r\n\t\t'mini',\r\n\t\t// \"short-time\" labels are only defined for a few languages.\r\n\t\t'short-time',\r\n\t\t// \"narrow\" and \"short\" labels are defined for all languages.\r\n\t\t// \"narrow\" labels can sometimes be weird (like \"+5d.\"),\r\n\t\t// but \"short\" labels have the \" ago\" part, so \"narrow\" seem\r\n\t\t// more appropriate.\r\n\t\t// \"short\" labels would have been more appropriate if they\r\n\t\t// didn't have the \" ago\" part, hence the \"short-time\" above.\r\n\t\t'narrow',\r\n\t\t// Since \"narrow\" labels are always present, \"short\" element\r\n\t\t// of this array can be removed.\r\n\t\t'short'\r\n\t]\r\n}", "import mini from './mini'\r\n\r\nexport default {\r\n\t...mini,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(mini.steps)\r\n}", "import mini from './mini'\r\n\r\nexport default {\r\n\t...mini,\r\n\t// Skip \"seconds\".\r\n\tsteps: mini.steps.filter(step => step.formatAs !== 'second')\r\n}", "import miniMinute from './miniMinute'\r\n\r\nexport default {\r\n\t...miniMinute,\r\n\t// Add \"now\".\r\n\tsteps: [{ formatAs: 'now' }].concat(miniMinute.steps)\r\n}", "import round from './round'\r\nimport roundMinute from './roundMinute'\r\n// `approximate` style is deprecated.\r\nimport approximate from './approximate'\r\n// `approximateTime` style is deprecated.\r\nimport approximateTime from './approximateTime'\r\nimport twitter from './twitter'\r\nimport twitterNow from './twitterNow'\r\nimport twitterMinute from './twitterMinute'\r\nimport twitterMinuteNow from './twitterMinuteNow'\r\nimport twitterFirstMinute from './twitterFirstMinute'\r\nimport mini from './mini'\r\nimport miniNow from './miniNow'\r\nimport miniMinute from './miniMinute'\r\nimport miniMinuteNow from './miniMinuteNow'\r\n\r\nexport default function getStyleByName(style) {\r\n\tswitch (style) {\r\n\t\t// \"default\" style name is deprecated.\r\n\t\tcase 'default':\r\n\t\tcase 'round':\r\n\t\t\treturn round\r\n\t\tcase 'round-minute':\r\n\t\t\treturn roundMinute\r\n\t\tcase 'approximate':\r\n\t\t\treturn approximate\r\n\t\t// \"time\" style name is deprecated.\r\n\t\tcase 'time':\r\n\t\tcase 'approximate-time':\r\n\t\t\treturn approximateTime\r\n\t\tcase 'mini':\r\n\t\t\treturn mini\r\n\t\tcase 'mini-now':\r\n\t\t\treturn miniNow\r\n\t\tcase 'mini-minute':\r\n\t\t\treturn miniMinute\r\n\t\tcase 'mini-minute-now':\r\n\t\t\treturn miniMinuteNow\r\n\t\tcase 'twitter':\r\n\t\t\treturn twitter\r\n\t\tcase 'twitter-now':\r\n\t\t\treturn twitterNow\r\n\t\tcase 'twitter-minute':\r\n\t\t\treturn twitterMinute\r\n\t\tcase 'twitter-minute-now':\r\n\t\t\treturn twitterMinuteNow\r\n\t\tcase 'twitter-first-minute':\r\n\t\t\treturn twitterFirstMinute\r\n\t\tdefault:\r\n\t\t\t// For historical reasons, the default style is \"approximate\".\r\n\t\t\treturn approximate\r\n\t}\r\n}", "import RelativeTimeFormatPolyfill from 'relative-time-format'\r\n\r\nimport Cache from './cache'\r\nimport chooseLocale from './locale'\r\nimport getStep from './steps/getStep'\r\nimport getStepDenominator from './steps/getStepDenominator'\r\nimport getTimeToNextUpdate from './steps/getTimeToNextUpdate'\r\n\r\nimport {\r\n\taddLocaleData,\r\n\tgetLocaleData\r\n} from './LocaleDataStore'\r\n\r\nimport defaultStyle from './style/roundMinute'\r\nimport getStyleByName from './style/getStyleByName'\r\n\r\nimport { getRoundFunction } from './round'\r\n\r\n// Valid time units.\r\nconst UNITS = [\r\n\t'now',\r\n\t// The rest are the same as in `Intl.RelativeTimeFormat`.\r\n\t'second',\r\n\t'minute',\r\n\t'hour',\r\n\t'day',\r\n\t'week',\r\n\t'month',\r\n\t'quarter',\r\n\t'year'\r\n]\r\n\r\nexport default class TimeAgo {\r\n\t/**\r\n\t * @param {(string|string[])} locales=[] - Preferred locales (or locale).\r\n\t * @param {boolean} [polyfill] \u2014 Pass `false` to use native `Intl.RelativeTimeFormat` and `Intl.PluralRules` instead of the polyfills.\r\n\t */\r\n\tconstructor(locales = [], { polyfill } = {}) {\r\n\t\t// Convert `locales` to an array.\r\n\t\tif (typeof locales === 'string') {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\r\n\t\t// Choose the most appropriate locale\r\n\t\t// from the list of `locales` added by the user.\r\n\t\t// For example, new TimeAgo(\"en-US\") -> \"en\".\r\n\t\tthis.locale = chooseLocale(\r\n\t\t\tlocales.concat(TimeAgo.getDefaultLocale()),\r\n\t\t\tgetLocaleData\r\n\t\t)\r\n\r\n\t\tif (typeof Intl !== 'undefined') {\r\n\t\t\t// Use `Intl.NumberFormat` for formatting numbers (when available).\r\n\t\t\tif (Intl.NumberFormat) {\r\n\t\t\t\tthis.numberFormat = new Intl.NumberFormat(this.locale)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Some people have requested the ability to use native\r\n\t\t// `Intl.RelativeTimeFormat` and `Intl.PluralRules`\r\n\t\t// instead of the polyfills.\r\n\t\t// https://github.com/catamphetamine/javascript-time-ago/issues/21\r\n\t\tif (polyfill === false) {\r\n\t\t\tthis.IntlRelativeTimeFormat = Intl.RelativeTimeFormat\r\n\t\t\tthis.IntlPluralRules = Intl.PluralRules\r\n\t\t} else {\r\n\t\t\tthis.IntlRelativeTimeFormat = RelativeTimeFormatPolyfill\r\n\t\t\tthis.IntlPluralRules = RelativeTimeFormatPolyfill.PluralRules\r\n\t\t}\r\n\r\n\t\t// Cache `Intl.RelativeTimeFormat` instance.\r\n\t\tthis.relativeTimeFormatCache = new Cache()\r\n\r\n\t\t// Cache `Intl.PluralRules` instance.\r\n\t\tthis.pluralRulesCache = new Cache()\r\n\t}\r\n\r\n\t/**\r\n\t * Formats relative date/time.\r\n\t *\r\n\t * @param {number} [options.now] - Sets the current date timestamp.\r\n\t *\r\n\t * @param  {boolean} [options.future] \u2014 Tells how to format value `0`:\r\n\t *         as \"future\" (`true`) or \"past\" (`false`).\r\n\t *         Is `false` by default, but should have been `true` actually,\r\n\t *         in order to correspond to `Intl.RelativeTimeFormat`\r\n\t *         that uses `future` formatting for `0` unless `-0` is passed.\r\n\t *\r\n\t * @param {string} [options.round] \u2014 Rounding method. Overrides the style's one.\r\n\t *\r\n\t * @param {boolean} [options.getTimeToNextUpdate] \u2014 Pass `true` to return `[formattedDate, timeToNextUpdate]` instead of just `formattedDate`.\r\n\t *\r\n\t * @return {string} The formatted relative date/time. If no eligible `step` is found, then an empty string is returned.\r\n\t */\r\n\tformat(input, style, options) {\r\n\t\tif (!options) {\r\n\t\t\tif (style && !isStyle(style)) {\r\n\t\t\t\toptions = style\r\n\t\t\t\tstyle = undefined\r\n\t\t\t} else {\r\n\t\t\t\toptions = {}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!style) {\r\n\t\t\tstyle = defaultStyle\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tstyle = getStyleByName(style)\r\n\t\t}\r\n\r\n\t\tconst timestamp = getTimestamp(input)\r\n\r\n\t\t// Get locale messages for this type of labels.\r\n\t\t// \"flavour\" is a legacy name for \"labels\".\r\n\t\tconst { labels, labelsType } = this.getLabels(style.flavour || style.labels)\r\n\r\n\t\tlet now\r\n\t\t// Can pass a custom `now`, e.g. for testing purposes.\r\n\t\t//\r\n\t\t// Legacy way was passing `now` in `style`.\r\n\t\t// That way is deprecated.\r\n\t\tif (style.now !== undefined) {\r\n\t\t\tnow = style.now\r\n\t\t}\r\n\t\t// The new way is passing `now` option to `.format()`.\r\n\t\tif (now === undefined && options.now !== undefined) {\r\n\t\t\tnow = options.now\r\n\t\t}\r\n\t\tif (now === undefined) {\r\n\t\t\tnow = Date.now()\r\n\t\t}\r\n\r\n\t\t// how much time has passed (in seconds)\r\n\t\tconst secondsPassed = (now - timestamp) / 1000 // in seconds\r\n\r\n\t\tconst future = options.future || secondsPassed < 0\r\n\r\n\t\tconst nowLabel = getNowLabel(\r\n\t\t\tlabels,\r\n\t\t\tgetLocaleData(this.locale).now,\r\n\t\t\tgetLocaleData(this.locale).long,\r\n\t\t\tfuture\r\n\t\t)\r\n\r\n\t\t// `custom` \u2013 A function of `{ elapsed, time, date, now, locale }`.\r\n\t\t//\r\n\t\t// Looks like `custom` function is deprecated and will be removed\r\n\t\t// in the next major version.\r\n\t\t//\r\n\t\t// If this function returns a value, then the `.format()` call will return that value.\r\n\t\t// Otherwise the relative date/time is formatted as usual.\r\n\t\t// This feature is currently not used anywhere and is here\r\n\t\t// just for providing the ultimate customization point\r\n\t\t// in case anyone would ever need that. Prefer using\r\n\t\t// `steps[step].format(value, locale)` instead.\r\n\t\t//\r\n\t\tif (style.custom) {\r\n\t\t\tconst custom = style.custom({\r\n\t\t\t\tnow,\r\n\t\t\t\tdate: new Date(timestamp),\r\n\t\t\t\ttime: timestamp,\r\n\t\t\t\telapsed: secondsPassed,\r\n\t\t\t\tlocale: this.locale\r\n\t\t\t})\r\n\t\t\tif (custom !== undefined) {\r\n\t\t\t\t// Won't return `timeToNextUpdate` here\r\n\t\t\t\t// because `custom()` seems deprecated.\r\n\t\t\t\treturn custom\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get the list of available time interval units.\r\n\t\tconst units = getTimeIntervalMeasurementUnits(\r\n\t\t\t// Controlling `style.steps` through `style.units` seems to be deprecated:\r\n\t\t\t// create a new custom `style` instead.\r\n\t\t\tstyle.units,\r\n\t\t\tlabels,\r\n\t\t\tnowLabel\r\n\t\t)\r\n\r\n\t\t// // If no available time unit is suitable, just output an empty string.\r\n\t\t// if (units.length === 0) {\r\n\t\t// \tconsole.error(`None of the \"${units.join(', ')}\" time units have been found in \"${labelsType}\" labels for \"${this.locale}\" locale.`)\r\n\t\t// \treturn ''\r\n\t\t// }\r\n\r\n\t\tconst round = options.round || style.round\r\n\r\n\t\t// Choose the appropriate time measurement unit\r\n\t\t// and get the corresponding rounded time amount.\r\n\t\tconst [prevStep, step, nextStep] = getStep(\r\n\t\t\t// \"gradation\" is a legacy name for \"steps\".\r\n\t\t\t// For historical reasons, \"approximate\" steps are used by default.\r\n\t\t\t// In the next major version, there'll be no default for `steps`.\r\n\t\t\tstyle.gradation || style.steps || defaultStyle.steps,\r\n\t\t\tsecondsPassed,\r\n\t\t\t{ now, units, round, future, getNextStep: true }\r\n\t\t)\r\n\r\n\t\tconst formattedDate = this.formatDateForStep(timestamp, step, secondsPassed, {\r\n\t\t\tlabels,\r\n\t\t\tlabelsType,\r\n\t\t\tnowLabel,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t}) || ''\r\n\r\n\t\tif (options.getTimeToNextUpdate) {\r\n\t\t\tconst timeToNextUpdate = getTimeToNextUpdate(timestamp, step, {\r\n\t\t\t\tnextStep,\r\n\t\t\t\tprevStep,\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture,\r\n\t\t\t\tround\r\n\t\t\t})\r\n\t\t\treturn [formattedDate, timeToNextUpdate]\r\n\t\t}\r\n\r\n\t\treturn formattedDate\r\n\t}\r\n\r\n\tformatDateForStep(timestamp, step, secondsPassed, {\r\n\t\tlabels,\r\n\t\tlabelsType,\r\n\t\tnowLabel,\r\n\t\tnow,\r\n\t\tfuture,\r\n\t\tround\r\n\t}) {\r\n\t\t// If no step matches, then output an empty string.\r\n\t\tif (!step) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (step.format) {\r\n\t\t\treturn step.format(timestamp, this.locale, {\r\n\t\t\t\tformatAs: (unit, value) => {\r\n\t\t\t\t\t// Mimicks `Intl.RelativeTimeFormat.format()`.\r\n\t\t\t\t\treturn this.formatValue(value, unit, {\r\n\t\t\t\t\t\tlabels,\r\n\t\t\t\t\t\tfuture\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// \"unit\" is now called \"formatAs\".\r\n\t\tconst unit = step.unit || step.formatAs\r\n\r\n\t\tif (!unit) {\r\n\t\t\tthrow new Error(`[javascript-time-ago] Each step must define either \\`formatAs\\` or \\`format()\\`. Step: ${JSON.stringify(step)}`)\r\n\t\t}\r\n\r\n\t\t// `Intl.RelativeTimeFormat` doesn't operate in \"now\" units.\r\n\t\t// Therefore, threat \"now\" as a special case.\r\n\t\tif (unit === 'now') {\r\n\t\t\treturn nowLabel\r\n\t\t}\r\n\r\n\t\t// Amount in units.\r\n\t\tlet amount = Math.abs(secondsPassed) / getStepDenominator(step)\r\n\r\n\t\t// Apply granularity to the time amount\r\n\t\t// (and fallback to the previous step\r\n\t\t//  if the first level of granularity\r\n\t\t//  isn't met by this amount)\r\n\t\t//\r\n\t\t// `granularity` \u2014 (advanced) Time interval value \"granularity\".\r\n\t\t// For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n\t\t// when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n\t\t// Perhaps this feature will be removed because there seem to be no use cases\r\n\t\t// of it in the real world.\r\n\t\t//\r\n\t\tif (step.granularity) {\r\n\t\t\t// Recalculate the amount of seconds passed based on granularity\r\n\t\t\tamount = getRoundFunction(round)(amount / step.granularity) * step.granularity\r\n\t\t}\r\n\r\n\t\tlet valueForFormatting = -1 * Math.sign(secondsPassed) * getRoundFunction(round)(amount)\r\n\r\n\t\t// By default, this library formats a `0` in \"past\" mode,\r\n\t\t// unless `future: true` option is passed.\r\n\t\t// This is different to `relative-time-format`'s behavior\r\n\t\t// which formats a `0` in \"future\" mode by default, unless it's a `-0`.\r\n\t\t// So, convert `0` to `-0` if `future: true` option wasn't passed.\r\n\t\t// `=== 0` matches both `0` and `-0`.\r\n\t\tif (valueForFormatting === 0) {\r\n\t\t\tif (future) {\r\n\t\t\t\tvalueForFormatting = 0\r\n\t\t\t} else {\r\n\t\t\t\tvalueForFormatting = -0\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (labelsType) {\r\n\t\t\tcase 'long':\r\n\t\t\tcase 'short':\r\n\t\t\tcase 'narrow':\r\n\t\t\t\t// Format the amount using `Intl.RelativeTimeFormat`.\r\n\t\t\t\treturn this.getFormatter(labelsType).format(valueForFormatting, unit)\r\n\t\t\tdefault:\r\n\t\t\t\t// Format the amount.\r\n\t\t\t\t// (mimicks `Intl.RelativeTimeFormat` behavior for other time label styles)\r\n\t\t\t\treturn this.formatValue(valueForFormatting, unit, {\r\n\t\t\t\t\tlabels,\r\n\t\t\t\t\tfuture\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Mimicks what `Intl.RelativeTimeFormat` does for additional locale styles.\r\n\t * @param  {number} value\r\n\t * @param  {string} unit\r\n\t * @param  {object} options.labels \u2014 Relative time labels.\r\n\t * @param  {boolean} [options.future] \u2014 Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default, but should have been `true` actually.\r\n\t * @return {string}\r\n\t */\r\n\tformatValue(value, unit, { labels, future }) {\r\n\t\treturn this.getFormattingRule(labels, unit, value, { future })\r\n\t\t\t.replace('{0}', this.formatNumber(Math.abs(value)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns formatting rule for `value` in `units` (either in past or in future).\r\n\t * @param {object} formattingRules \u2014 Relative time labels for different units.\r\n\t * @param {string} unit - Time interval measurement unit.\r\n\t * @param {number} value - Time interval value.\r\n\t * @param  {boolean} [options.future] \u2014 Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default.\r\n\t * @return {string}\r\n\t * @example\r\n\t * // Returns \"{0} days ago\"\r\n\t * getFormattingRule(en.long, \"day\", -2, 'en')\r\n\t */\r\n\tgetFormattingRule(formattingRules, unit, value, { future }) {\r\n\t\t// Passing the language is required in order to\r\n\t\t// be able to correctly classify the `value` as a number.\r\n\t\tconst locale = this.locale\r\n\t\tformattingRules = formattingRules[unit]\r\n\t\t// Check for a special \"compacted\" rules case:\r\n\t\t// if formatting rules are the same for \"past\" and \"future\",\r\n\t\t// and also for all possible `value`s, then those rules are\r\n\t\t// stored as a single string.\r\n\t\tif (typeof formattingRules === 'string') {\r\n\t\t\treturn formattingRules\r\n\t\t}\r\n\t\t// Choose either \"past\" or \"future\" based on time `value` sign.\r\n\t\t// If \"past\" is same as \"future\" then they're stored as \"other\".\r\n\t\t// If there's only \"other\" then it's being collapsed.\r\n\t\tconst pastOrFuture = value === 0 ? (future ? 'future' : 'past') : (value < 0 ? 'past' : 'future')\r\n\t\tconst quantifierRules = formattingRules[pastOrFuture] || formattingRules\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof quantifierRules === 'string') {\r\n\t\t\treturn quantifierRules\r\n\t\t}\r\n\t\t// Quantify `value`.\r\n\t\tconst quantifier = this.getPluralRules().select(Math.abs(value))\r\n\t\t// \"other\" rule is supposed to always be present.\r\n\t\t// If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n\t\treturn quantifierRules[quantifier] || quantifierRules.other\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a number into a string.\r\n\t * Uses `Intl.NumberFormat` when available.\r\n\t * @param  {number} number\r\n\t * @return {string}\r\n\t */\r\n\tformatNumber(number) {\r\n\t\treturn this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.RelativeTimeFormat` for a given `labelsType`.\r\n\t * @param {string} labelsType\r\n\t * @return {object} `Intl.RelativeTimeFormat` instance\r\n\t */\r\n\tgetFormatter(labelsType) {\r\n\t\t// `Intl.RelativeTimeFormat` instance creation is (hypothetically) assumed\r\n\t\t// a lengthy operation so the instances are cached and reused.\r\n\t\treturn this.relativeTimeFormatCache.get(this.locale, labelsType) ||\r\n\t\t\tthis.relativeTimeFormatCache.put(this.locale, labelsType, new this.IntlRelativeTimeFormat(this.locale, { style: labelsType }))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.PluralRules` instance.\r\n\t * @return {object} `Intl.PluralRules` instance\r\n\t */\r\n\tgetPluralRules() {\r\n\t\t// `Intl.PluralRules` instance creation is (hypothetically) assumed\r\n\t\t// a lengthy operation so the instances are cached and reused.\r\n\t\treturn this.pluralRulesCache.get(this.locale) ||\r\n\t\t\tthis.pluralRulesCache.put(this.locale, new this.IntlPluralRules(this.locale))\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets localized labels for this type of labels.\r\n\t *\r\n\t * @param {(string|string[])} labelsType - Relative date/time labels type.\r\n\t *                                     If it's an array then all label types are tried\r\n\t *                                     until a suitable one is found.\r\n\t *\r\n\t * @returns {Object} Returns an object of shape { labelsType, labels }\r\n\t */\r\n\tgetLabels(labelsType = []) {\r\n\t\t// Convert `labels` to an array.\r\n\t\tif (typeof labelsType === 'string') {\r\n\t\t\tlabelsType = [labelsType]\r\n\t\t}\r\n\r\n\t\t// Supports legacy \"tiny\" and \"mini-time\" label styles.\r\n\t\tlabelsType = labelsType.map((labelsType) => {\r\n\t\t\tswitch (labelsType) {\r\n\t\t\t\tcase 'tiny':\r\n\t\t\t\tcase 'mini-time':\r\n\t\t\t\t\treturn 'mini'\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn labelsType\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// \"long\" labels type is the default one.\r\n\t\t// (it's always present for all languages)\r\n\t\tlabelsType = labelsType.concat('long')\r\n\r\n\t\t// Find a suitable labels type.\r\n\t\tconst localeData = getLocaleData(this.locale)\r\n\t\tfor (const _labelsType of labelsType) {\r\n\t\t\tif (localeData[_labelsType]) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabelsType: _labelsType,\r\n\t\t\t\t\tlabels: localeData[_labelsType]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Default locale global variable.\r\n */\r\nlet defaultLocale = 'en'\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nTimeAgo.getDefaultLocale = () => defaultLocale\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nTimeAgo.setDefaultLocale = (locale) => defaultLocale = locale\r\n\r\n/**\r\n * Adds locale data for a specific locale and marks the locale as default.\r\n * @param {Object} localeData\r\n */\r\nTimeAgo.addDefaultLocale = function(localeData) {\r\n\tif (defaultLocaleHasBeenSpecified) {\r\n\t\treturn console.error('[javascript-time-ago] `TimeAgo.addDefaultLocale()` can only be called once. To add other locales, use `TimeAgo.addLocale()`.')\r\n\t}\r\n\tdefaultLocaleHasBeenSpecified = true\r\n\tTimeAgo.setDefaultLocale(localeData.locale)\r\n\tTimeAgo.addLocale(localeData)\r\n}\r\n\r\nlet defaultLocaleHasBeenSpecified\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nTimeAgo.addLocale = function(localeData) {\r\n\taddLocaleData(localeData)\r\n\tRelativeTimeFormatPolyfill.addLocale(localeData)\r\n}\r\n\r\n/**\r\n * (legacy alias)\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n * @deprecated\r\n */\r\nTimeAgo.locale = TimeAgo.addLocale\r\n\r\n/**\r\n * Adds custom labels to locale data.\r\n * @param {string} locale\r\n * @param {string} name\r\n * @param {object} labels\r\n */\r\nTimeAgo.addLabels = (locale, name, labels) => {\r\n\tlet localeData = getLocaleData(locale)\r\n\tif (!localeData) {\r\n\t\taddLocaleData({\r\n\t\t\tlocale\r\n\t\t})\r\n\t\tlocaleData = getLocaleData(locale)\r\n\t\t// throw new Error(`[javascript-time-ago] No data for locale \"${locale}\"`)\r\n\t}\r\n\tlocaleData[name] = labels\r\n}\r\n\r\n// Normalizes `.format()` `time` argument.\r\nfunction getTimestamp(input) {\r\n\tif (input.constructor === Date || isMockedDate(input)) {\r\n\t\treturn input.getTime()\r\n\t}\r\n\r\n\tif (typeof input === 'number') {\r\n\t\treturn input\r\n\t}\r\n\r\n\t// For some weird reason istanbul doesn't see this `throw` covered.\r\n\t/* istanbul ignore next */\r\n\tthrow new Error(`Unsupported relative time formatter input: ${typeof input}, ${input}`)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nfunction isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}\r\n\r\n// Get available time interval measurement units.\r\nfunction getTimeIntervalMeasurementUnits(allowedUnits, labels, nowLabel) {\r\n\t// Get all time interval measurement units that're available\r\n\t// in locale data for a given time labels style.\r\n\tlet units = Object.keys(labels)\r\n\r\n\t// `now` unit is handled separately and is shipped in its own `now.json` file.\r\n\t// `now.json` isn't present for all locales, so it could be substituted with\r\n\t// \".second.current\".\r\n\t// Add `now` unit if it's available in locale data.\r\n\tif (nowLabel) {\r\n\t\tunits.push('now')\r\n\t}\r\n\r\n\t// If only a specific set of available time measurement units can be used\r\n\t// then only those units are allowed (if they're present in locale data).\r\n\tif (allowedUnits) {\r\n\t\tunits = allowedUnits.filter(unit => unit === 'now' || units.indexOf(unit) >= 0)\r\n\t}\r\n\r\n\treturn units\r\n}\r\n\r\nfunction getNowLabel(labels, nowLabels, longLabels, future) {\r\n\tconst nowLabel = labels.now || (nowLabels && nowLabels.now)\r\n\t// Specific \"now\" message form extended locale data (if present).\r\n\tif (nowLabel) {\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof nowLabel === 'string') {\r\n\t\t\treturn nowLabel\r\n\t\t}\r\n\t\t// Not handling `value === 0` as `localeData.now.current` here\r\n\t\t// because it wouldn't make sense: \"now\" is a moment,\r\n\t\t// so one can't possibly differentiate between a\r\n\t\t// \"previous\" moment, a \"current\" moment and a \"next moment\".\r\n\t\t// It can only be differentiated between \"past\" and \"future\".\r\n\t\tif (future) {\r\n\t\t\treturn nowLabel.future\r\n\t\t} else {\r\n\t\t\treturn nowLabel.past\r\n\t\t}\r\n\t}\r\n\t// Use \".second.current\" as \"now\" message.\r\n\tif (longLabels && longLabels.second && longLabels.second.current) {\r\n\t\treturn longLabels.second.current\r\n\t}\r\n}\r\n\r\nconst OBJECT_CONSTRUCTOR = {}.constructor\r\nfunction isObject(object) {\r\n\treturn typeof object !== undefined && object !== null && object.constructor === OBJECT_CONSTRUCTOR\r\n}\r\n\r\nfunction isStyle(variable) {\r\n\treturn typeof variable === 'string' || isStyleObject(variable)\r\n}\r\n\r\nexport function isStyleObject(object) {\r\n\treturn isObject(object) && (\r\n\t\tArray.isArray(object.steps) ||\r\n\t\t// `gradation` property is deprecated: it has been renamed to `steps`.\r\n\t\tArray.isArray(object.gradation) ||\r\n\t\t// `flavour` property is deprecated: it has been renamed to `labels`.\r\n\t\tArray.isArray(object.flavour) ||\r\n\t\ttypeof object.flavour === 'string' ||\r\n\t\tArray.isArray(object.labels) ||\r\n\t\ttypeof object.labels === 'string' ||\r\n\t\t// `units` property is deprecated.\r\n\t\tArray.isArray(object.units) ||\r\n\t\t// `custom` property is deprecated.\r\n\t\ttypeof object.custom === 'function'\r\n\t)\r\n}", "'use strict'\r\n\r\nexports = module.exports = require('./commonjs/TimeAgo').default\r\nexports['default'] = require('./commonjs/TimeAgo').default\r\n\r\nvar locale = require('./commonjs/locale')\r\n\r\nexports.intlDateTimeFormatSupported = locale.intlDateTimeFormatSupported\r\nexports.intlDateTimeFormatSupportedLocale = locale.intlDateTimeFormatSupportedLocale", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }", "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n", null, null, "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", null, null, null, null, null, null, null, ";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return \u00B10 if x is \u00B10 or y is \u00B1Infinity, or return \u00B1Infinity as y is \u00B10.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on \u00B1Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and \u00B1Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, \u00B1Infinity, \u00B10 or \u00B11, or n is \u00B1Infinity, NaN or \u00B10.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to \u00B1Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to \u00B1Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to \u00B10: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = \u00B1Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return \u00B10, else return \u00B1Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, \u00B1Infinity or \u00B10?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return \u00B1Infinity if either is \u00B1Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return \u00B10 if either is \u00B10.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return \u00B1Infinity if either \u00B1Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is \u00B1Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n", "var BigNumber = require('bignumber.js');\n\n/*\n    json2.js\n    2013-05-26\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, regexp: true */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nvar JSON = module.exports;\n\n(function () {\n    'use strict';\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key],\n            isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            if (isBigNumber) {\n                return value;\n            } else {\n                return quote(value);\n            }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n        case 'bigint':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? '[]'\n                    : gap\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                    : '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                Object.keys(value).forEach(function(k) {\n                    var v = str(k, value);\n                    if (v) {\n                        partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                    }\n                });\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? '{}'\n                : gap\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n                : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n}());\n", "var BigNumber = null;\n\n// regexpxs extracted from\n// (c) BSD-3-Clause\n// https://github.com/fastify/secure-json-parse/graphs/contributors and https://github.com/hapijs/bourne/graphs/contributors\n\nconst suspectProtoRx = /(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])/;\nconst suspectConstructorRx = /(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)/;\n\n/*\n    json_parse.js\n    2012-06-20\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    This file creates a json_parse function.\n    During create you can (optionally) specify some behavioural switches\n\n        require('json-bigint')(options)\n\n            The optional options parameter holds switches that drive certain\n            aspects of the parsing process:\n            * options.strict = true will warn about duplicate-key usage in the json.\n              The default (strict = false) will silently ignore those and overwrite\n              values for keys that are in duplicate use.\n\n    The resulting function follows this signature:\n        json_parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = json_parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n*/\n\n/*members \"\", \"\\\"\", \"\\/\", \"\\\\\", at, b, call, charAt, f, fromCharCode,\n    hasOwnProperty, message, n, name, prototype, push, r, t, text\n*/\n\nvar json_parse = function (options) {\n  'use strict';\n\n  // This is a function that can parse a JSON text, producing a JavaScript\n  // data structure. It is a simple, recursive descent parser. It does not use\n  // eval or regular expressions, so it can be used as a model for implementing\n  // a JSON parser in other languages.\n\n  // We are defining the function inside of another function to avoid creating\n  // global variables.\n\n  // Default options one can override by passing options to the parse()\n  var _options = {\n    strict: false, // not being strict means do not generate syntax errors for \"duplicate key\"\n    storeAsString: false, // toggles whether the values should be stored as BigNumber (default) or a string\n    alwaysParseAsBig: false, // toggles whether all numbers should be Big\n    useNativeBigInt: false, // toggles whether to use native BigInt instead of bignumber.js\n    protoAction: 'error',\n    constructorAction: 'error',\n  };\n\n  // If there are options, then use them to override the default _options\n  if (options !== undefined && options !== null) {\n    if (options.strict === true) {\n      _options.strict = true;\n    }\n    if (options.storeAsString === true) {\n      _options.storeAsString = true;\n    }\n    _options.alwaysParseAsBig =\n      options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;\n    _options.useNativeBigInt =\n      options.useNativeBigInt === true ? options.useNativeBigInt : false;\n\n    if (typeof options.constructorAction !== 'undefined') {\n      if (\n        options.constructorAction === 'error' ||\n        options.constructorAction === 'ignore' ||\n        options.constructorAction === 'preserve'\n      ) {\n        _options.constructorAction = options.constructorAction;\n      } else {\n        throw new Error(\n          `Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed ${options.constructorAction}`\n        );\n      }\n    }\n\n    if (typeof options.protoAction !== 'undefined') {\n      if (\n        options.protoAction === 'error' ||\n        options.protoAction === 'ignore' ||\n        options.protoAction === 'preserve'\n      ) {\n        _options.protoAction = options.protoAction;\n      } else {\n        throw new Error(\n          `Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed ${options.protoAction}`\n        );\n      }\n    }\n  }\n\n  var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t',\n    },\n    text,\n    error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text,\n      };\n    },\n    next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at);\n      at += 1;\n      return ch;\n    },\n    number = function () {\n      // Parse a number value.\n\n      var number,\n        string = '';\n\n      if (ch === '-') {\n        string = '-';\n        next('-');\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch;\n        next();\n      }\n      if (ch === '.') {\n        string += '.';\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch;\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch;\n        next();\n        if (ch === '-' || ch === '+') {\n          string += ch;\n          next();\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch;\n          next();\n        }\n      }\n      number = +string;\n      if (!isFinite(number)) {\n        error('Bad number');\n      } else {\n        if (BigNumber == null) BigNumber = require('bignumber.js');\n        //if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15)\n          return _options.storeAsString\n            ? string\n            : _options.useNativeBigInt\n            ? BigInt(string)\n            : new BigNumber(string);\n        else\n          return !_options.alwaysParseAsBig\n            ? number\n            : _options.useNativeBigInt\n            ? BigInt(number)\n            : new BigNumber(number);\n      }\n    },\n    string = function () {\n      // Parse a string value.\n\n      var hex,\n        i,\n        string = '',\n        uffff;\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        var startAt = at;\n        while (next()) {\n          if (ch === '\"') {\n            if (at - 1 > startAt) string += text.substring(startAt, at - 1);\n            next();\n            return string;\n          }\n          if (ch === '\\\\') {\n            if (at - 1 > startAt) string += text.substring(startAt, at - 1);\n            next();\n            if (ch === 'u') {\n              uffff = 0;\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16);\n                if (!isFinite(hex)) {\n                  break;\n                }\n                uffff = uffff * 16 + hex;\n              }\n              string += String.fromCharCode(uffff);\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch];\n            } else {\n              break;\n            }\n            startAt = at;\n          }\n        }\n      }\n      error('Bad string');\n    },\n    white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next();\n      }\n    },\n    word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t');\n          next('r');\n          next('u');\n          next('e');\n          return true;\n        case 'f':\n          next('f');\n          next('a');\n          next('l');\n          next('s');\n          next('e');\n          return false;\n        case 'n':\n          next('n');\n          next('u');\n          next('l');\n          next('l');\n          return null;\n      }\n      error(\"Unexpected '\" + ch + \"'\");\n    },\n    value, // Place holder for the value function.\n    array = function () {\n      // Parse an array value.\n\n      var array = [];\n\n      if (ch === '[') {\n        next('[');\n        white();\n        if (ch === ']') {\n          next(']');\n          return array; // empty array\n        }\n        while (ch) {\n          array.push(value());\n          white();\n          if (ch === ']') {\n            next(']');\n            return array;\n          }\n          next(',');\n          white();\n        }\n      }\n      error('Bad array');\n    },\n    object = function () {\n      // Parse an object value.\n\n      var key,\n        object = Object.create(null);\n\n      if (ch === '{') {\n        next('{');\n        white();\n        if (ch === '}') {\n          next('}');\n          return object; // empty object\n        }\n        while (ch) {\n          key = string();\n          white();\n          next(':');\n          if (\n            _options.strict === true &&\n            Object.hasOwnProperty.call(object, key)\n          ) {\n            error('Duplicate key \"' + key + '\"');\n          }\n\n          if (suspectProtoRx.test(key) === true) {\n            if (_options.protoAction === 'error') {\n              error('Object contains forbidden prototype property');\n            } else if (_options.protoAction === 'ignore') {\n              value();\n            } else {\n              object[key] = value();\n            }\n          } else if (suspectConstructorRx.test(key) === true) {\n            if (_options.constructorAction === 'error') {\n              error('Object contains forbidden constructor property');\n            } else if (_options.constructorAction === 'ignore') {\n              value();\n            } else {\n              object[key] = value();\n            }\n          } else {\n            object[key] = value();\n          }\n\n          white();\n          if (ch === '}') {\n            next('}');\n            return object;\n          }\n          next(',');\n          white();\n        }\n      }\n      error('Bad object');\n    };\n\n  value = function () {\n    // Parse a JSON value. It could be an object, an array, a string, a number,\n    // or a word.\n\n    white();\n    switch (ch) {\n      case '{':\n        return object();\n      case '[':\n        return array();\n      case '\"':\n        return string();\n      case '-':\n        return number();\n      default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n  };\n\n  // Return the json_parse function. It will have access to all of the above\n  // functions and variables.\n\n  return function (source, reviver) {\n    var result;\n\n    text = source + '';\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n      error('Syntax error');\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function'\n      ? (function walk(holder, key) {\n          var k,\n            v,\n            value = holder[key];\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k);\n              if (v !== undefined) {\n                value[k] = v;\n              } else {\n                delete value[k];\n              }\n            });\n          }\n          return reviver.call(holder, key, value);\n        })({ '': result }, '')\n      : result;\n  };\n};\n\nmodule.exports = json_parse;\n", "var json_stringify = require('./lib/stringify.js').stringify;\nvar json_parse     = require('./lib/parse.js');\n\nmodule.exports = function(options) {\n    return  {\n        parse: json_parse(options),\n        stringify: json_stringify\n    }\n};\n//create the default method members with no options applied for backwards compatibility\nmodule.exports.parse = json_parse();\nmodule.exports.stringify = json_stringify;\n", null, "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "(function(l){function m(){}function k(a,c){a=void 0===a?\"utf-8\":a;c=void 0===c?{fatal:!1}:c;if(-1===r.indexOf(a.toLowerCase()))throw new RangeError(\"Failed to construct 'TextDecoder': The encoding label provided ('\"+a+\"') is invalid.\");if(c.fatal)throw Error(\"Failed to construct 'TextDecoder': the 'fatal' option is unsupported.\");}function t(a){return Buffer.from(a.buffer,a.byteOffset,a.byteLength).toString(\"utf-8\")}function u(a){var c=URL.createObjectURL(new Blob([a],{type:\"text/plain;charset=UTF-8\"}));\ntry{var f=new XMLHttpRequest;f.open(\"GET\",c,!1);f.send();return f.responseText}catch(e){return q(a)}finally{URL.revokeObjectURL(c)}}function q(a){for(var c=0,f=Math.min(65536,a.length+1),e=new Uint16Array(f),h=[],d=0;;){var b=c<a.length;if(!b||d>=f-1){h.push(String.fromCharCode.apply(null,e.subarray(0,d)));if(!b)return h.join(\"\");a=a.subarray(c);d=c=0}b=a[c++];if(0===(b&128))e[d++]=b;else if(192===(b&224)){var g=a[c++]&63;e[d++]=(b&31)<<6|g}else if(224===(b&240)){g=a[c++]&63;var n=a[c++]&63;e[d++]=\n(b&31)<<12|g<<6|n}else if(240===(b&248)){g=a[c++]&63;n=a[c++]&63;var v=a[c++]&63;b=(b&7)<<18|g<<12|n<<6|v;65535<b&&(b-=65536,e[d++]=b>>>10&1023|55296,b=56320|b&1023);e[d++]=b}}}if(l.TextEncoder&&l.TextDecoder)return!1;var r=[\"utf-8\",\"utf8\",\"unicode-1-1-utf-8\"];Object.defineProperty(m.prototype,\"encoding\",{value:\"utf-8\"});m.prototype.encode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to encode: the 'stream' option is unsupported.\");c=0;for(var f=a.length,e=0,h=Math.max(32,\nf+(f>>>1)+7),d=new Uint8Array(h>>>3<<3);c<f;){var b=a.charCodeAt(c++);if(55296<=b&&56319>=b){if(c<f){var g=a.charCodeAt(c);56320===(g&64512)&&(++c,b=((b&1023)<<10)+(g&1023)+65536)}if(55296<=b&&56319>=b)continue}e+4>d.length&&(h+=8,h*=1+c/a.length*2,h=h>>>3<<3,g=new Uint8Array(h),g.set(d),d=g);if(0===(b&4294967168))d[e++]=b;else{if(0===(b&4294965248))d[e++]=b>>>6&31|192;else if(0===(b&4294901760))d[e++]=b>>>12&15|224,d[e++]=b>>>6&63|128;else if(0===(b&4292870144))d[e++]=b>>>18&7|240,d[e++]=b>>>12&\n63|128,d[e++]=b>>>6&63|128;else continue;d[e++]=b&63|128}}return d.slice?d.slice(0,e):d.subarray(0,e)};Object.defineProperty(k.prototype,\"encoding\",{value:\"utf-8\"});Object.defineProperty(k.prototype,\"fatal\",{value:!1});Object.defineProperty(k.prototype,\"ignoreBOM\",{value:!1});var p=q;\"function\"===typeof Buffer&&Buffer.from?p=t:\"function\"===typeof Blob&&\"function\"===typeof URL&&\"function\"===typeof URL.createObjectURL&&(p=u);k.prototype.decode=function(a,c){c=void 0===c?{stream:!1}:c;if(c.stream)throw Error(\"Failed to decode: the 'stream' option is unsupported.\");\na=a instanceof Uint8Array?a:a.buffer instanceof ArrayBuffer?new Uint8Array(a.buffer):new Uint8Array(a);return p(a)};l.TextEncoder=m;l.TextDecoder=k})(\"undefined\"!==typeof window?window:\"undefined\"!==typeof global?global:this);\n", "\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserCrypto = void 0;\n// This file implements crypto functions we need using in-browser\n// SubtleCrypto interface `window.crypto.subtle`.\nconst base64js = require(\"base64-js\");\n// Not all browsers support `TextEncoder`. The following `require` will\n// provide a fast UTF8-only replacement for those browsers that don't support\n// text encoding natively.\n// eslint-disable-next-line node/no-unsupported-features/node-builtins\nif (typeof process === 'undefined' && typeof TextEncoder === 'undefined') {\n    require('fast-text-encoding');\n}\nconst crypto_1 = require(\"../crypto\");\nclass BrowserCrypto {\n    constructor() {\n        if (typeof window === 'undefined' ||\n            window.crypto === undefined ||\n            window.crypto.subtle === undefined) {\n            throw new Error(\"SubtleCrypto not found. Make sure it's an https:// website.\");\n        }\n    }\n    async sha256DigestBase64(str) {\n        // SubtleCrypto digest() method is async, so we must make\n        // this method async as well.\n        // To calculate SHA256 digest using SubtleCrypto, we first\n        // need to convert an input string to an ArrayBuffer:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const inputBuffer = new TextEncoder().encode(str);\n        // Result is ArrayBuffer as well.\n        const outputBuffer = await window.crypto.subtle.digest('SHA-256', inputBuffer);\n        return base64js.fromByteArray(new Uint8Array(outputBuffer));\n    }\n    randomBytesBase64(count) {\n        const array = new Uint8Array(count);\n        window.crypto.getRandomValues(array);\n        return base64js.fromByteArray(array);\n    }\n    static padBase64(base64) {\n        // base64js requires padding, so let's add some '='\n        while (base64.length % 4 !== 0) {\n            base64 += '=';\n        }\n        return base64;\n    }\n    async verify(pubkey, data, signature) {\n        const algo = {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' },\n        };\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const dataArray = new TextEncoder().encode(data);\n        const signatureArray = base64js.toByteArray(BrowserCrypto.padBase64(signature));\n        const cryptoKey = await window.crypto.subtle.importKey('jwk', pubkey, algo, true, ['verify']);\n        // SubtleCrypto's verify method is async so we must make\n        // this method async as well.\n        const result = await window.crypto.subtle.verify(algo, cryptoKey, signatureArray, dataArray);\n        return result;\n    }\n    async sign(privateKey, data) {\n        const algo = {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' },\n        };\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const dataArray = new TextEncoder().encode(data);\n        const cryptoKey = await window.crypto.subtle.importKey('jwk', privateKey, algo, true, ['sign']);\n        // SubtleCrypto's sign method is async so we must make\n        // this method async as well.\n        const result = await window.crypto.subtle.sign(algo, cryptoKey, dataArray);\n        return base64js.fromByteArray(new Uint8Array(result));\n    }\n    decodeBase64StringUtf8(base64) {\n        const uint8array = base64js.toByteArray(BrowserCrypto.padBase64(base64));\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const result = new TextDecoder().decode(uint8array);\n        return result;\n    }\n    encodeBase64StringUtf8(text) {\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const uint8array = new TextEncoder().encode(text);\n        const result = base64js.fromByteArray(uint8array);\n        return result;\n    }\n    /**\n     * Computes the SHA-256 hash of the provided string.\n     * @param str The plain text string to hash.\n     * @return A promise that resolves with the SHA-256 hash of the provided\n     *   string in hexadecimal encoding.\n     */\n    async sha256DigestHex(str) {\n        // SubtleCrypto digest() method is async, so we must make\n        // this method async as well.\n        // To calculate SHA256 digest using SubtleCrypto, we first\n        // need to convert an input string to an ArrayBuffer:\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const inputBuffer = new TextEncoder().encode(str);\n        // Result is ArrayBuffer as well.\n        const outputBuffer = await window.crypto.subtle.digest('SHA-256', inputBuffer);\n        return crypto_1.fromArrayBufferToHex(outputBuffer);\n    }\n    /**\n     * Computes the HMAC hash of a message using the provided crypto key and the\n     * SHA-256 algorithm.\n     * @param key The secret crypto key in utf-8 or ArrayBuffer format.\n     * @param msg The plain text message.\n     * @return A promise that resolves with the HMAC-SHA256 hash in ArrayBuffer\n     *   format.\n     */\n    async signWithHmacSha256(key, msg) {\n        // Convert key, if provided in ArrayBuffer format, to string.\n        const rawKey = typeof key === 'string'\n            ? key\n            : String.fromCharCode(...new Uint16Array(key));\n        // eslint-disable-next-line node/no-unsupported-features/node-builtins\n        const enc = new TextEncoder();\n        const cryptoKey = await window.crypto.subtle.importKey('raw', enc.encode(rawKey), {\n            name: 'HMAC',\n            hash: {\n                name: 'SHA-256',\n            },\n        }, false, ['sign']);\n        return window.crypto.subtle.sign('HMAC', cryptoKey, enc.encode(msg));\n    }\n}\nexports.BrowserCrypto = BrowserCrypto;\n//# sourceMappingURL=crypto.js.map", "\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeCrypto = void 0;\nconst crypto = require(\"crypto\");\nclass NodeCrypto {\n    async sha256DigestBase64(str) {\n        return crypto.createHash('sha256').update(str).digest('base64');\n    }\n    randomBytesBase64(count) {\n        return crypto.randomBytes(count).toString('base64');\n    }\n    async verify(pubkey, data, signature) {\n        const verifier = crypto.createVerify('sha256');\n        verifier.update(data);\n        verifier.end();\n        return verifier.verify(pubkey, signature, 'base64');\n    }\n    async sign(privateKey, data) {\n        const signer = crypto.createSign('RSA-SHA256');\n        signer.update(data);\n        signer.end();\n        return signer.sign(privateKey, 'base64');\n    }\n    decodeBase64StringUtf8(base64) {\n        return Buffer.from(base64, 'base64').toString('utf-8');\n    }\n    encodeBase64StringUtf8(text) {\n        return Buffer.from(text, 'utf-8').toString('base64');\n    }\n    /**\n     * Computes the SHA-256 hash of the provided string.\n     * @param str The plain text string to hash.\n     * @return A promise that resolves with the SHA-256 hash of the provided\n     *   string in hexadecimal encoding.\n     */\n    async sha256DigestHex(str) {\n        return crypto.createHash('sha256').update(str).digest('hex');\n    }\n    /**\n     * Computes the HMAC hash of a message using the provided crypto key and the\n     * SHA-256 algorithm.\n     * @param key The secret crypto key in utf-8 or ArrayBuffer format.\n     * @param msg The plain text message.\n     * @return A promise that resolves with the HMAC-SHA256 hash in ArrayBuffer\n     *   format.\n     */\n    async signWithHmacSha256(key, msg) {\n        const cryptoKey = typeof key === 'string' ? key : toBuffer(key);\n        return toArrayBuffer(crypto.createHmac('sha256', cryptoKey).update(msg).digest());\n    }\n}\nexports.NodeCrypto = NodeCrypto;\n/**\n * Converts a Node.js Buffer to an ArrayBuffer.\n * https://stackoverflow.com/questions/8609289/convert-a-binary-nodejs-buffer-to-javascript-arraybuffer\n * @param buffer The Buffer input to covert.\n * @return The ArrayBuffer representation of the input.\n */\nfunction toArrayBuffer(buffer) {\n    return buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);\n}\n/**\n * Converts an ArrayBuffer to a Node.js Buffer.\n * @param arrayBuffer The ArrayBuffer input to covert.\n * @return The Buffer representation of the input.\n */\nfunction toBuffer(arrayBuffer) {\n    return Buffer.from(arrayBuffer);\n}\n//# sourceMappingURL=crypto.js.map", "\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* global window */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromArrayBufferToHex = exports.hasBrowserCrypto = exports.createCrypto = void 0;\nconst crypto_1 = require(\"./browser/crypto\");\nconst crypto_2 = require(\"./node/crypto\");\nfunction createCrypto() {\n    if (hasBrowserCrypto()) {\n        return new crypto_1.BrowserCrypto();\n    }\n    return new crypto_2.NodeCrypto();\n}\nexports.createCrypto = createCrypto;\nfunction hasBrowserCrypto() {\n    return (typeof window !== 'undefined' &&\n        typeof window.crypto !== 'undefined' &&\n        typeof window.crypto.subtle !== 'undefined');\n}\nexports.hasBrowserCrypto = hasBrowserCrypto;\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param arrayBuffer The ArrayBuffer to convert to hexadecimal string.\n * @return The hexadecimal encoding of the ArrayBuffer.\n */\nfunction fromArrayBufferToHex(arrayBuffer) {\n    // Convert buffer to byte array.\n    const byteArray = Array.from(new Uint8Array(arrayBuffer));\n    // Convert bytes to hex string.\n    return byteArray\n        .map(byte => {\n        return byte.toString(16).padStart(2, '0');\n    })\n        .join('');\n}\nexports.fromArrayBufferToHex = fromArrayBufferToHex;\n//# sourceMappingURL=crypto.js.map", "\"use strict\";\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validate = void 0;\n// Accepts an options object passed from the user to the API.  In the\n// previous version of the API, it referred to a `Request` options object.\n// Now it refers to an Axiox Request Config object.  This is here to help\n// ensure users don't pass invalid options when they upgrade from 0.x to 1.x.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction validate(options) {\n    const vpairs = [\n        { invalid: 'uri', expected: 'url' },\n        { invalid: 'json', expected: 'data' },\n        { invalid: 'qs', expected: 'params' },\n    ];\n    for (const pair of vpairs) {\n        if (options[pair.invalid]) {\n            const e = `'${pair.invalid}' is not a valid configuration option. Please use '${pair.expected}' instead. This library is using Axios for requests. Please see https://github.com/axios/axios to learn more about the valid request options.`;\n            throw new Error(e);\n        }\n    }\n}\nexports.validate = validate;\n//# sourceMappingURL=options.js.map", "\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultTransporter = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst options_1 = require(\"./options\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\nconst PRODUCT_NAME = 'google-api-nodejs-client';\nclass DefaultTransporter {\n    /**\n     * Configures request options before making a request.\n     * @param opts GaxiosOptions options.\n     * @return Configured options.\n     */\n    configure(opts = {}) {\n        opts.headers = opts.headers || {};\n        if (typeof window === 'undefined') {\n            // set transporter user agent if not in browser\n            const uaValue = opts.headers['User-Agent'];\n            if (!uaValue) {\n                opts.headers['User-Agent'] = DefaultTransporter.USER_AGENT;\n            }\n            else if (!uaValue.includes(`${PRODUCT_NAME}/`)) {\n                opts.headers['User-Agent'] = `${uaValue} ${DefaultTransporter.USER_AGENT}`;\n            }\n            // track google-auth-library-nodejs version:\n            const authVersion = `auth/${pkg.version}`;\n            if (opts.headers['x-goog-api-client'] &&\n                !opts.headers['x-goog-api-client'].includes(authVersion)) {\n                opts.headers['x-goog-api-client'] = `${opts.headers['x-goog-api-client']} ${authVersion}`;\n            }\n            else if (!opts.headers['x-goog-api-client']) {\n                const nodeVersion = process.version.replace(/^v/, '');\n                opts.headers['x-goog-api-client'] = `gl-node/${nodeVersion} ${authVersion}`;\n            }\n        }\n        return opts;\n    }\n    request(opts, callback) {\n        // ensure the user isn't passing in request-style options\n        opts = this.configure(opts);\n        try {\n            options_1.validate(opts);\n        }\n        catch (e) {\n            if (callback) {\n                return callback(e);\n            }\n            else {\n                throw e;\n            }\n        }\n        if (callback) {\n            gaxios_1.request(opts).then(r => {\n                callback(null, r);\n            }, e => {\n                callback(this.processError(e));\n            });\n        }\n        else {\n            return gaxios_1.request(opts).catch(e => {\n                throw this.processError(e);\n            });\n        }\n    }\n    /**\n     * Changes the error to include details from the body.\n     */\n    processError(e) {\n        const res = e.response;\n        const err = e;\n        const body = res ? res.data : null;\n        if (res && body && body.error && res.status !== 200) {\n            if (typeof body.error === 'string') {\n                err.message = body.error;\n                err.code = res.status.toString();\n            }\n            else if (Array.isArray(body.error.errors)) {\n                err.message = body.error.errors\n                    .map((err2) => err2.message)\n                    .join('\\n');\n                err.code = body.error.code;\n                err.errors = body.error.errors;\n            }\n            else {\n                err.message = body.error.message;\n                err.code = body.error.code || res.status;\n            }\n        }\n        else if (res && res.status >= 400) {\n            // Consider all 4xx and 5xx responses errors.\n            err.message = body;\n            err.code = res.status.toString();\n        }\n        return err;\n    }\n}\nexports.DefaultTransporter = DefaultTransporter;\n/**\n * Default user agent.\n */\nDefaultTransporter.USER_AGENT = `${PRODUCT_NAME}/${pkg.version}`;\n//# sourceMappingURL=transporters.js.map", "'use strict';\n\nconst arrify = value => {\n\tif (value === null || value === undefined) {\n\t\treturn [];\n\t}\n\n\tif (Array.isArray(value)) {\n\t\treturn value;\n\t}\n\n\tif (typeof value === 'string') {\n\t\treturn [value];\n\t}\n\n\tif (typeof value[Symbol.iterator] === 'function') {\n\t\treturn [...value];\n\t}\n\n\treturn [value];\n};\n\nmodule.exports = arrify;\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n", "'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n", "\"use strict\";\n// Copyright 2012 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthClient = void 0;\nconst events_1 = require(\"events\");\nconst transporters_1 = require(\"../transporters\");\nclass AuthClient extends events_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.transporter = new transporters_1.DefaultTransporter();\n        this.credentials = {};\n        this.eagerRefreshThresholdMillis = 5 * 60 * 1000;\n        this.forceRefreshOnFailure = false;\n    }\n    /**\n     * Sets the auth credentials.\n     */\n    setCredentials(credentials) {\n        this.credentials = credentials;\n    }\n    /**\n     * Append additional headers, e.g., x-goog-user-project, shared across the\n     * classes inheriting AuthClient. This method should be used by any method\n     * that overrides getRequestMetadataAsync(), which is a shared helper for\n     * setting request information in both gRPC and HTTP API calls.\n     *\n     * @param headers objedcdt to append additional headers to.\n     */\n    addSharedMetadataHeaders(headers) {\n        // quota_project_id, stored in application_default_credentials.json, is set in\n        // the x-goog-user-project header, to indicate an alternate account for\n        // billing and quota:\n        if (!headers['x-goog-user-project'] && // don't override a value the user sets.\n            this.quotaProjectId) {\n            headers['x-goog-user-project'] = this.quotaProjectId;\n        }\n        return headers;\n    }\n}\nexports.AuthClient = AuthClient;\n//# sourceMappingURL=authclient.js.map", "\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoginTicket = void 0;\nclass LoginTicket {\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @param {string} env Envelope of the jwt\n     * @param {TokenPayload} pay Payload of the jwt\n     * @constructor\n     */\n    constructor(env, pay) {\n        this.envelope = env;\n        this.payload = pay;\n    }\n    getEnvelope() {\n        return this.envelope;\n    }\n    getPayload() {\n        return this.payload;\n    }\n    /**\n     * Create a simple class to extract user ID from an ID Token\n     *\n     * @return The user ID\n     */\n    getUserId() {\n        const payload = this.getPayload();\n        if (payload && payload.sub) {\n            return payload.sub;\n        }\n        return null;\n    }\n    /**\n     * Returns attributes from the login ticket.  This can contain\n     * various information about the user session.\n     *\n     * @return The envelope and payload\n     */\n    getAttributes() {\n        return { envelope: this.getEnvelope(), payload: this.getPayload() };\n    }\n}\nexports.LoginTicket = LoginTicket;\n//# sourceMappingURL=loginticket.js.map", "\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2Client = exports.CertificateFormat = exports.CodeChallengeMethod = void 0;\nconst querystring = require(\"querystring\");\nconst stream = require(\"stream\");\nconst formatEcdsa = require(\"ecdsa-sig-formatter\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst authclient_1 = require(\"./authclient\");\nconst loginticket_1 = require(\"./loginticket\");\nvar CodeChallengeMethod;\n(function (CodeChallengeMethod) {\n    CodeChallengeMethod[\"Plain\"] = \"plain\";\n    CodeChallengeMethod[\"S256\"] = \"S256\";\n})(CodeChallengeMethod = exports.CodeChallengeMethod || (exports.CodeChallengeMethod = {}));\nvar CertificateFormat;\n(function (CertificateFormat) {\n    CertificateFormat[\"PEM\"] = \"PEM\";\n    CertificateFormat[\"JWK\"] = \"JWK\";\n})(CertificateFormat = exports.CertificateFormat || (exports.CertificateFormat = {}));\nclass OAuth2Client extends authclient_1.AuthClient {\n    constructor(optionsOrClientId, clientSecret, redirectUri) {\n        super();\n        this.certificateCache = {};\n        this.certificateExpiry = null;\n        this.certificateCacheFormat = CertificateFormat.PEM;\n        this.refreshTokenPromises = new Map();\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : { clientId: optionsOrClientId, clientSecret, redirectUri };\n        this._clientId = opts.clientId;\n        this._clientSecret = opts.clientSecret;\n        this.redirectUri = opts.redirectUri;\n        this.eagerRefreshThresholdMillis =\n            opts.eagerRefreshThresholdMillis || 5 * 60 * 1000;\n        this.forceRefreshOnFailure = !!opts.forceRefreshOnFailure;\n    }\n    /**\n     * Generates URL for consent page landing.\n     * @param opts Options.\n     * @return URL to consent page.\n     */\n    generateAuthUrl(opts = {}) {\n        if (opts.code_challenge_method && !opts.code_challenge) {\n            throw new Error('If a code_challenge_method is provided, code_challenge must be included.');\n        }\n        opts.response_type = opts.response_type || 'code';\n        opts.client_id = opts.client_id || this._clientId;\n        opts.redirect_uri = opts.redirect_uri || this.redirectUri;\n        // Allow scopes to be passed either as array or a string\n        if (opts.scope instanceof Array) {\n            opts.scope = opts.scope.join(' ');\n        }\n        const rootUrl = OAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_;\n        return (rootUrl +\n            '?' +\n            querystring.stringify(opts));\n    }\n    generateCodeVerifier() {\n        // To make the code compatible with browser SubtleCrypto we need to make\n        // this method async.\n        throw new Error('generateCodeVerifier is removed, please use generateCodeVerifierAsync instead.');\n    }\n    /**\n     * Convenience method to automatically generate a code_verifier, and its\n     * resulting SHA256. If used, this must be paired with a S256\n     * code_challenge_method.\n     *\n     * For a full example see:\n     * https://github.com/googleapis/google-auth-library-nodejs/blob/main/samples/oauth2-codeVerifier.js\n     */\n    async generateCodeVerifierAsync() {\n        // base64 encoding uses 6 bits per character, and we want to generate128\n        // characters. 6*128/8 = 96.\n        const crypto = crypto_1.createCrypto();\n        const randomString = crypto.randomBytesBase64(96);\n        // The valid characters in the code_verifier are [A-Z]/[a-z]/[0-9]/\n        // \"-\"/\".\"/\"_\"/\"~\". Base64 encoded strings are pretty close, so we're just\n        // swapping out a few chars.\n        const codeVerifier = randomString\n            .replace(/\\+/g, '~')\n            .replace(/=/g, '_')\n            .replace(/\\//g, '-');\n        // Generate the base64 encoded SHA256\n        const unencodedCodeChallenge = await crypto.sha256DigestBase64(codeVerifier);\n        // We need to use base64UrlEncoding instead of standard base64\n        const codeChallenge = unencodedCodeChallenge\n            .split('=')[0]\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_');\n        return { codeVerifier, codeChallenge };\n    }\n    getToken(codeOrOptions, callback) {\n        const options = typeof codeOrOptions === 'string' ? { code: codeOrOptions } : codeOrOptions;\n        if (callback) {\n            this.getTokenAsync(options).then(r => callback(null, r.tokens, r.res), e => callback(e, null, e.response));\n        }\n        else {\n            return this.getTokenAsync(options);\n        }\n    }\n    async getTokenAsync(options) {\n        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;\n        const values = {\n            code: options.code,\n            client_id: options.client_id || this._clientId,\n            client_secret: this._clientSecret,\n            redirect_uri: options.redirect_uri || this.redirectUri,\n            grant_type: 'authorization_code',\n            code_verifier: options.codeVerifier,\n        };\n        const res = await this.transporter.request({\n            method: 'POST',\n            url,\n            data: querystring.stringify(values),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        });\n        const tokens = res.data;\n        if (res.data && res.data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + res.data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res };\n    }\n    /**\n     * Refreshes the access token.\n     * @param refresh_token Existing refresh token.\n     * @private\n     */\n    async refreshToken(refreshToken) {\n        if (!refreshToken) {\n            return this.refreshTokenNoCache(refreshToken);\n        }\n        // If a request to refresh using the same token has started,\n        // return the same promise.\n        if (this.refreshTokenPromises.has(refreshToken)) {\n            return this.refreshTokenPromises.get(refreshToken);\n        }\n        const p = this.refreshTokenNoCache(refreshToken).then(r => {\n            this.refreshTokenPromises.delete(refreshToken);\n            return r;\n        }, e => {\n            this.refreshTokenPromises.delete(refreshToken);\n            throw e;\n        });\n        this.refreshTokenPromises.set(refreshToken, p);\n        return p;\n    }\n    async refreshTokenNoCache(refreshToken) {\n        if (!refreshToken) {\n            throw new Error('No refresh token is set.');\n        }\n        const url = OAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_;\n        const data = {\n            refresh_token: refreshToken,\n            client_id: this._clientId,\n            client_secret: this._clientSecret,\n            grant_type: 'refresh_token',\n        };\n        // request for new token\n        const res = await this.transporter.request({\n            method: 'POST',\n            url,\n            data: querystring.stringify(data),\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        });\n        const tokens = res.data;\n        // TODO: de-duplicate this code from a few spots\n        if (res.data && res.data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + res.data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res };\n    }\n    refreshAccessToken(callback) {\n        if (callback) {\n            this.refreshAccessTokenAsync().then(r => callback(null, r.credentials, r.res), callback);\n        }\n        else {\n            return this.refreshAccessTokenAsync();\n        }\n    }\n    async refreshAccessTokenAsync() {\n        const r = await this.refreshToken(this.credentials.refresh_token);\n        const tokens = r.tokens;\n        tokens.refresh_token = this.credentials.refresh_token;\n        this.credentials = tokens;\n        return { credentials: this.credentials, res: r.res };\n    }\n    getAccessToken(callback) {\n        if (callback) {\n            this.getAccessTokenAsync().then(r => callback(null, r.token, r.res), callback);\n        }\n        else {\n            return this.getAccessTokenAsync();\n        }\n    }\n    async getAccessTokenAsync() {\n        const shouldRefresh = !this.credentials.access_token || this.isTokenExpiring();\n        if (shouldRefresh) {\n            if (!this.credentials.refresh_token) {\n                if (this.refreshHandler) {\n                    const refreshedAccessToken = await this.processAndValidateRefreshHandler();\n                    if (refreshedAccessToken === null || refreshedAccessToken === void 0 ? void 0 : refreshedAccessToken.access_token) {\n                        this.setCredentials(refreshedAccessToken);\n                        return { token: this.credentials.access_token };\n                    }\n                }\n                else {\n                    throw new Error('No refresh token or refresh handler callback is set.');\n                }\n            }\n            const r = await this.refreshAccessTokenAsync();\n            if (!r.credentials || (r.credentials && !r.credentials.access_token)) {\n                throw new Error('Could not refresh access token.');\n            }\n            return { token: r.credentials.access_token, res: r.res };\n        }\n        else {\n            return { token: this.credentials.access_token };\n        }\n    }\n    /**\n     * The main authentication interface.  It takes an optional url which when\n     * present is the endpoint being accessed, and returns a Promise which\n     * resolves with authorization header fields.\n     *\n     * In OAuth2Client, the result has the form:\n     * { Authorization: 'Bearer <access_token_value>' }\n     * @param url The optional url being authorized\n     */\n    async getRequestHeaders(url) {\n        const headers = (await this.getRequestMetadataAsync(url)).headers;\n        return headers;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        const thisCreds = this.credentials;\n        if (!thisCreds.access_token &&\n            !thisCreds.refresh_token &&\n            !this.apiKey &&\n            !this.refreshHandler) {\n            throw new Error('No access, refresh token, API key or refresh handler callback is set.');\n        }\n        if (thisCreds.access_token && !this.isTokenExpiring()) {\n            thisCreds.token_type = thisCreds.token_type || 'Bearer';\n            const headers = {\n                Authorization: thisCreds.token_type + ' ' + thisCreds.access_token,\n            };\n            return { headers: this.addSharedMetadataHeaders(headers) };\n        }\n        // If refreshHandler exists, call processAndValidateRefreshHandler().\n        if (this.refreshHandler) {\n            const refreshedAccessToken = await this.processAndValidateRefreshHandler();\n            if (refreshedAccessToken === null || refreshedAccessToken === void 0 ? void 0 : refreshedAccessToken.access_token) {\n                this.setCredentials(refreshedAccessToken);\n                const headers = {\n                    Authorization: 'Bearer ' + this.credentials.access_token,\n                };\n                return { headers: this.addSharedMetadataHeaders(headers) };\n            }\n        }\n        if (this.apiKey) {\n            return { headers: { 'X-Goog-Api-Key': this.apiKey } };\n        }\n        let r = null;\n        let tokens = null;\n        try {\n            r = await this.refreshToken(thisCreds.refresh_token);\n            tokens = r.tokens;\n        }\n        catch (err) {\n            const e = err;\n            if (e.response &&\n                (e.response.status === 403 || e.response.status === 404)) {\n                e.message = `Could not refresh access token: ${e.message}`;\n            }\n            throw e;\n        }\n        const credentials = this.credentials;\n        credentials.token_type = credentials.token_type || 'Bearer';\n        tokens.refresh_token = credentials.refresh_token;\n        this.credentials = tokens;\n        const headers = {\n            Authorization: credentials.token_type + ' ' + tokens.access_token,\n        };\n        return { headers: this.addSharedMetadataHeaders(headers), res: r.res };\n    }\n    /**\n     * Generates an URL to revoke the given token.\n     * @param token The existing token to be revoked.\n     */\n    static getRevokeTokenUrl(token) {\n        const parameters = querystring.stringify({ token });\n        return `${OAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_}?${parameters}`;\n    }\n    revokeToken(token, callback) {\n        const opts = {\n            url: OAuth2Client.getRevokeTokenUrl(token),\n            method: 'POST',\n        };\n        if (callback) {\n            this.transporter\n                .request(opts)\n                .then(r => callback(null, r), callback);\n        }\n        else {\n            return this.transporter.request(opts);\n        }\n    }\n    revokeCredentials(callback) {\n        if (callback) {\n            this.revokeCredentialsAsync().then(res => callback(null, res), callback);\n        }\n        else {\n            return this.revokeCredentialsAsync();\n        }\n    }\n    async revokeCredentialsAsync() {\n        const token = this.credentials.access_token;\n        this.credentials = {};\n        if (token) {\n            return this.revokeToken(token);\n        }\n        else {\n            throw new Error('No access token to revoke.');\n        }\n    }\n    request(opts, callback) {\n        if (callback) {\n            this.requestAsync(opts).then(r => callback(null, r), e => {\n                return callback(e, e.response);\n            });\n        }\n        else {\n            return this.requestAsync(opts);\n        }\n    }\n    async requestAsync(opts, retry = false) {\n        let r2;\n        try {\n            const r = await this.getRequestMetadataAsync(opts.url);\n            opts.headers = opts.headers || {};\n            if (r.headers && r.headers['x-goog-user-project']) {\n                opts.headers['x-goog-user-project'] = r.headers['x-goog-user-project'];\n            }\n            if (r.headers && r.headers.Authorization) {\n                opts.headers.Authorization = r.headers.Authorization;\n            }\n            if (this.apiKey) {\n                opts.headers['X-Goog-Api-Key'] = this.apiKey;\n            }\n            r2 = await this.transporter.request(opts);\n        }\n        catch (e) {\n            const res = e.response;\n            if (res) {\n                const statusCode = res.status;\n                // Retry the request for metadata if the following criteria are true:\n                // - We haven't already retried.  It only makes sense to retry once.\n                // - The response was a 401 or a 403\n                // - The request didn't send a readableStream\n                // - An access_token and refresh_token were available, but either no\n                //   expiry_date was available or the forceRefreshOnFailure flag is set.\n                //   The absent expiry_date case can happen when developers stash the\n                //   access_token and refresh_token for later use, but the access_token\n                //   fails on the first try because it's expired. Some developers may\n                //   choose to enable forceRefreshOnFailure to mitigate time-related\n                //   errors.\n                // Or the following criteria are true:\n                // - We haven't already retried.  It only makes sense to retry once.\n                // - The response was a 401 or a 403\n                // - The request didn't send a readableStream\n                // - No refresh_token was available\n                // - An access_token and a refreshHandler callback were available, but\n                //   either no expiry_date was available or the forceRefreshOnFailure\n                //   flag is set. The access_token fails on the first try because it's\n                //   expired. Some developers may choose to enable forceRefreshOnFailure\n                //   to mitigate time-related errors.\n                const mayRequireRefresh = this.credentials &&\n                    this.credentials.access_token &&\n                    this.credentials.refresh_token &&\n                    (!this.credentials.expiry_date || this.forceRefreshOnFailure);\n                const mayRequireRefreshWithNoRefreshToken = this.credentials &&\n                    this.credentials.access_token &&\n                    !this.credentials.refresh_token &&\n                    (!this.credentials.expiry_date || this.forceRefreshOnFailure) &&\n                    this.refreshHandler;\n                const isReadableStream = res.config.data instanceof stream.Readable;\n                const isAuthErr = statusCode === 401 || statusCode === 403;\n                if (!retry && isAuthErr && !isReadableStream && mayRequireRefresh) {\n                    await this.refreshAccessTokenAsync();\n                    return this.requestAsync(opts, true);\n                }\n                else if (!retry &&\n                    isAuthErr &&\n                    !isReadableStream &&\n                    mayRequireRefreshWithNoRefreshToken) {\n                    const refreshedAccessToken = await this.processAndValidateRefreshHandler();\n                    if (refreshedAccessToken === null || refreshedAccessToken === void 0 ? void 0 : refreshedAccessToken.access_token) {\n                        this.setCredentials(refreshedAccessToken);\n                    }\n                    return this.requestAsync(opts, true);\n                }\n            }\n            throw e;\n        }\n        return r2;\n    }\n    verifyIdToken(options, callback) {\n        // This function used to accept two arguments instead of an options object.\n        // Check the types to help users upgrade with less pain.\n        // This check can be removed after a 2.0 release.\n        if (callback && typeof callback !== 'function') {\n            throw new Error('This method accepts an options object as the first parameter, which includes the idToken, audience, and maxExpiry.');\n        }\n        if (callback) {\n            this.verifyIdTokenAsync(options).then(r => callback(null, r), callback);\n        }\n        else {\n            return this.verifyIdTokenAsync(options);\n        }\n    }\n    async verifyIdTokenAsync(options) {\n        if (!options.idToken) {\n            throw new Error('The verifyIdToken method requires an ID Token');\n        }\n        const response = await this.getFederatedSignonCertsAsync();\n        const login = await this.verifySignedJwtWithCertsAsync(options.idToken, response.certs, options.audience, OAuth2Client.ISSUERS_, options.maxExpiry);\n        return login;\n    }\n    /**\n     * Obtains information about the provisioned access token.  Especially useful\n     * if you want to check the scopes that were provisioned to a given token.\n     *\n     * @param accessToken Required.  The Access Token for which you want to get\n     * user info.\n     */\n    async getTokenInfo(accessToken) {\n        const { data } = await this.transporter.request({\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                Authorization: `Bearer ${accessToken}`,\n            },\n            url: OAuth2Client.GOOGLE_TOKEN_INFO_URL,\n        });\n        const info = Object.assign({\n            expiry_date: new Date().getTime() + data.expires_in * 1000,\n            scopes: data.scope.split(' '),\n        }, data);\n        delete info.expires_in;\n        delete info.scope;\n        return info;\n    }\n    getFederatedSignonCerts(callback) {\n        if (callback) {\n            this.getFederatedSignonCertsAsync().then(r => callback(null, r.certs, r.res), callback);\n        }\n        else {\n            return this.getFederatedSignonCertsAsync();\n        }\n    }\n    async getFederatedSignonCertsAsync() {\n        const nowTime = new Date().getTime();\n        const format = crypto_1.hasBrowserCrypto()\n            ? CertificateFormat.JWK\n            : CertificateFormat.PEM;\n        if (this.certificateExpiry &&\n            nowTime < this.certificateExpiry.getTime() &&\n            this.certificateCacheFormat === format) {\n            return { certs: this.certificateCache, format };\n        }\n        let res;\n        let url;\n        switch (format) {\n            case CertificateFormat.PEM:\n                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_;\n                break;\n            case CertificateFormat.JWK:\n                url = OAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_;\n                break;\n            default:\n                throw new Error(`Unsupported certificate format ${format}`);\n        }\n        try {\n            res = await this.transporter.request({ url });\n        }\n        catch (e) {\n            e.message = `Failed to retrieve verification certificates: ${e.message}`;\n            throw e;\n        }\n        const cacheControl = res ? res.headers['cache-control'] : undefined;\n        let cacheAge = -1;\n        if (cacheControl) {\n            const pattern = new RegExp('max-age=([0-9]*)');\n            const regexResult = pattern.exec(cacheControl);\n            if (regexResult && regexResult.length === 2) {\n                // Cache results with max-age (in seconds)\n                cacheAge = Number(regexResult[1]) * 1000; // milliseconds\n            }\n        }\n        let certificates = {};\n        switch (format) {\n            case CertificateFormat.PEM:\n                certificates = res.data;\n                break;\n            case CertificateFormat.JWK:\n                for (const key of res.data.keys) {\n                    certificates[key.kid] = key;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported certificate format ${format}`);\n        }\n        const now = new Date();\n        this.certificateExpiry =\n            cacheAge === -1 ? null : new Date(now.getTime() + cacheAge);\n        this.certificateCache = certificates;\n        this.certificateCacheFormat = format;\n        return { certs: certificates, format, res };\n    }\n    getIapPublicKeys(callback) {\n        if (callback) {\n            this.getIapPublicKeysAsync().then(r => callback(null, r.pubkeys, r.res), callback);\n        }\n        else {\n            return this.getIapPublicKeysAsync();\n        }\n    }\n    async getIapPublicKeysAsync() {\n        let res;\n        const url = OAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_;\n        try {\n            res = await this.transporter.request({ url });\n        }\n        catch (e) {\n            e.message = `Failed to retrieve verification certificates: ${e.message}`;\n            throw e;\n        }\n        return { pubkeys: res.data, res };\n    }\n    verifySignedJwtWithCerts() {\n        // To make the code compatible with browser SubtleCrypto we need to make\n        // this method async.\n        throw new Error('verifySignedJwtWithCerts is removed, please use verifySignedJwtWithCertsAsync instead.');\n    }\n    /**\n     * Verify the id token is signed with the correct certificate\n     * and is from the correct audience.\n     * @param jwt The jwt to verify (The ID Token in this case).\n     * @param certs The array of certs to test the jwt against.\n     * @param requiredAudience The audience to test the jwt against.\n     * @param issuers The allowed issuers of the jwt (Optional).\n     * @param maxExpiry The max expiry the certificate can be (Optional).\n     * @return Returns a promise resolving to LoginTicket on verification.\n     */\n    async verifySignedJwtWithCertsAsync(jwt, certs, requiredAudience, issuers, maxExpiry) {\n        const crypto = crypto_1.createCrypto();\n        if (!maxExpiry) {\n            maxExpiry = OAuth2Client.MAX_TOKEN_LIFETIME_SECS_;\n        }\n        const segments = jwt.split('.');\n        if (segments.length !== 3) {\n            throw new Error('Wrong number of segments in token: ' + jwt);\n        }\n        const signed = segments[0] + '.' + segments[1];\n        let signature = segments[2];\n        let envelope;\n        let payload;\n        try {\n            envelope = JSON.parse(crypto.decodeBase64StringUtf8(segments[0]));\n        }\n        catch (err) {\n            err.message = `Can't parse token envelope: ${segments[0]}': ${err.message}`;\n            throw err;\n        }\n        if (!envelope) {\n            throw new Error(\"Can't parse token envelope: \" + segments[0]);\n        }\n        try {\n            payload = JSON.parse(crypto.decodeBase64StringUtf8(segments[1]));\n        }\n        catch (err) {\n            err.message = `Can't parse token payload '${segments[0]}`;\n            throw err;\n        }\n        if (!payload) {\n            throw new Error(\"Can't parse token payload: \" + segments[1]);\n        }\n        if (!Object.prototype.hasOwnProperty.call(certs, envelope.kid)) {\n            // If this is not present, then there's no reason to attempt verification\n            throw new Error('No pem found for envelope: ' + JSON.stringify(envelope));\n        }\n        const cert = certs[envelope.kid];\n        if (envelope.alg === 'ES256') {\n            signature = formatEcdsa.joseToDer(signature, 'ES256').toString('base64');\n        }\n        const verified = await crypto.verify(cert, signed, signature);\n        if (!verified) {\n            throw new Error('Invalid token signature: ' + jwt);\n        }\n        if (!payload.iat) {\n            throw new Error('No issue time in token: ' + JSON.stringify(payload));\n        }\n        if (!payload.exp) {\n            throw new Error('No expiration time in token: ' + JSON.stringify(payload));\n        }\n        const iat = Number(payload.iat);\n        if (isNaN(iat))\n            throw new Error('iat field using invalid format');\n        const exp = Number(payload.exp);\n        if (isNaN(exp))\n            throw new Error('exp field using invalid format');\n        const now = new Date().getTime() / 1000;\n        if (exp >= now + maxExpiry) {\n            throw new Error('Expiration time too far in future: ' + JSON.stringify(payload));\n        }\n        const earliest = iat - OAuth2Client.CLOCK_SKEW_SECS_;\n        const latest = exp + OAuth2Client.CLOCK_SKEW_SECS_;\n        if (now < earliest) {\n            throw new Error('Token used too early, ' +\n                now +\n                ' < ' +\n                earliest +\n                ': ' +\n                JSON.stringify(payload));\n        }\n        if (now > latest) {\n            throw new Error('Token used too late, ' +\n                now +\n                ' > ' +\n                latest +\n                ': ' +\n                JSON.stringify(payload));\n        }\n        if (issuers && issuers.indexOf(payload.iss) < 0) {\n            throw new Error('Invalid issuer, expected one of [' +\n                issuers +\n                '], but got ' +\n                payload.iss);\n        }\n        // Check the audience matches if we have one\n        if (typeof requiredAudience !== 'undefined' && requiredAudience !== null) {\n            const aud = payload.aud;\n            let audVerified = false;\n            // If the requiredAudience is an array, check if it contains token\n            // audience\n            if (requiredAudience.constructor === Array) {\n                audVerified = requiredAudience.indexOf(aud) > -1;\n            }\n            else {\n                audVerified = aud === requiredAudience;\n            }\n            if (!audVerified) {\n                throw new Error('Wrong recipient, payload audience != requiredAudience');\n            }\n        }\n        return new loginticket_1.LoginTicket(envelope, payload);\n    }\n    /**\n     * Returns a promise that resolves with AccessTokenResponse type if\n     * refreshHandler is defined.\n     * If not, nothing is returned.\n     */\n    async processAndValidateRefreshHandler() {\n        if (this.refreshHandler) {\n            const accessTokenResponse = await this.refreshHandler();\n            if (!accessTokenResponse.access_token) {\n                throw new Error('No access token is returned by the refreshHandler callback.');\n            }\n            return accessTokenResponse;\n        }\n        return;\n    }\n    /**\n     * Returns true if a token is expired or will expire within\n     * eagerRefreshThresholdMillismilliseconds.\n     * If there is no expiry time, assumes the token is not expired or expiring.\n     */\n    isTokenExpiring() {\n        const expiryDate = this.credentials.expiry_date;\n        return expiryDate\n            ? expiryDate <= new Date().getTime() + this.eagerRefreshThresholdMillis\n            : false;\n    }\n}\nexports.OAuth2Client = OAuth2Client;\nOAuth2Client.GOOGLE_TOKEN_INFO_URL = 'https://oauth2.googleapis.com/tokeninfo';\n/**\n * The base URL for auth endpoints.\n */\nOAuth2Client.GOOGLE_OAUTH2_AUTH_BASE_URL_ = 'https://accounts.google.com/o/oauth2/v2/auth';\n/**\n * The base endpoint for token retrieval.\n */\nOAuth2Client.GOOGLE_OAUTH2_TOKEN_URL_ = 'https://oauth2.googleapis.com/token';\n/**\n * The base endpoint to revoke tokens.\n */\nOAuth2Client.GOOGLE_OAUTH2_REVOKE_URL_ = 'https://oauth2.googleapis.com/revoke';\n/**\n * Google Sign on certificates in PEM format.\n */\nOAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_PEM_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v1/certs';\n/**\n * Google Sign on certificates in JWK format.\n */\nOAuth2Client.GOOGLE_OAUTH2_FEDERATED_SIGNON_JWK_CERTS_URL_ = 'https://www.googleapis.com/oauth2/v3/certs';\n/**\n * Google Sign on certificates in JWK format.\n */\nOAuth2Client.GOOGLE_OAUTH2_IAP_PUBLIC_KEY_URL_ = 'https://www.gstatic.com/iap/verify/public_key';\n/**\n * Clock skew - five minutes in seconds\n */\nOAuth2Client.CLOCK_SKEW_SECS_ = 300;\n/**\n * Max Token Lifetime is one day in seconds\n */\nOAuth2Client.MAX_TOKEN_LIFETIME_SECS_ = 86400;\n/**\n * The allowed oauth token issuers.\n */\nOAuth2Client.ISSUERS_ = [\n    'accounts.google.com',\n    'https://accounts.google.com',\n];\n//# sourceMappingURL=oauth2client.js.map", "\"use strict\";\n// Copyright 2013 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Compute = void 0;\nconst arrify = require(\"arrify\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass Compute extends oauth2client_1.OAuth2Client {\n    /**\n     * Google Compute Engine service account credentials.\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options = {}) {\n        super(options);\n        // Start with an expired refresh token, which will automatically be\n        // refreshed before the first API call is made.\n        this.credentials = { expiry_date: 1, refresh_token: 'compute-placeholder' };\n        this.serviceAccountEmail = options.serviceAccountEmail || 'default';\n        this.scopes = arrify(options.scopes);\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken Unused parameter\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        const tokenPath = `service-accounts/${this.serviceAccountEmail}/token`;\n        let data;\n        try {\n            const instanceOptions = {\n                property: tokenPath,\n            };\n            if (this.scopes.length > 0) {\n                instanceOptions.params = {\n                    scopes: this.scopes.join(','),\n                };\n            }\n            data = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not refresh access token: ${e.message}`;\n            this.wrapError(e);\n            throw e;\n        }\n        const tokens = data;\n        if (data && data.expires_in) {\n            tokens.expiry_date = new Date().getTime() + data.expires_in * 1000;\n            delete tokens.expires_in;\n        }\n        this.emit('tokens', tokens);\n        return { tokens, res: null };\n    }\n    /**\n     * Fetches an ID token.\n     * @param targetAudience the audience for the fetched ID token.\n     */\n    async fetchIdToken(targetAudience) {\n        const idTokenPath = `service-accounts/${this.serviceAccountEmail}/identity` +\n            `?format=full&audience=${targetAudience}`;\n        let idToken;\n        try {\n            const instanceOptions = {\n                property: idTokenPath,\n            };\n            idToken = await gcpMetadata.instance(instanceOptions);\n        }\n        catch (e) {\n            e.message = `Could not fetch ID token: ${e.message}`;\n            throw e;\n        }\n        return idToken;\n    }\n    wrapError(e) {\n        const res = e.response;\n        if (res && res.status) {\n            e.code = res.status.toString();\n            if (res.status === 403) {\n                e.message =\n                    'A Forbidden error was returned while attempting to retrieve an access ' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have the correct permission scopes specified: ' +\n                        e.message;\n            }\n            else if (res.status === 404) {\n                e.message =\n                    'A Not Found error was returned while attempting to retrieve an access' +\n                        'token for the Compute Engine built-in service account. This may be because the Compute ' +\n                        'Engine instance does not have any permission scopes specified: ' +\n                        e.message;\n            }\n        }\n    }\n}\nexports.Compute = Compute;\n//# sourceMappingURL=computeclient.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdTokenClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass IdTokenClient extends oauth2client_1.OAuth2Client {\n    /**\n     * Google ID Token client\n     *\n     * Retrieve access token from the metadata server.\n     * See: https://developers.google.com/compute/docs/authentication\n     */\n    constructor(options) {\n        super();\n        this.targetAudience = options.targetAudience;\n        this.idTokenProvider = options.idTokenProvider;\n    }\n    async getRequestMetadataAsync(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    url) {\n        if (!this.credentials.id_token ||\n            (this.credentials.expiry_date || 0) < Date.now()) {\n            const idToken = await this.idTokenProvider.fetchIdToken(this.targetAudience);\n            this.credentials = {\n                id_token: idToken,\n                expiry_date: this.getIdTokenExpiryDate(idToken),\n            };\n        }\n        const headers = {\n            Authorization: 'Bearer ' + this.credentials.id_token,\n        };\n        return { headers };\n    }\n    getIdTokenExpiryDate(idToken) {\n        const payloadB64 = idToken.split('.')[1];\n        if (payloadB64) {\n            const payload = JSON.parse(Buffer.from(payloadB64, 'base64').toString('ascii'));\n            return payload.exp * 1000;\n        }\n    }\n}\nexports.IdTokenClient = IdTokenClient;\n//# sourceMappingURL=idtokenclient.js.map", "\"use strict\";\n// Copyright 2018 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEnv = exports.clear = exports.GCPEnv = void 0;\nconst gcpMetadata = require(\"gcp-metadata\");\nvar GCPEnv;\n(function (GCPEnv) {\n    GCPEnv[\"APP_ENGINE\"] = \"APP_ENGINE\";\n    GCPEnv[\"KUBERNETES_ENGINE\"] = \"KUBERNETES_ENGINE\";\n    GCPEnv[\"CLOUD_FUNCTIONS\"] = \"CLOUD_FUNCTIONS\";\n    GCPEnv[\"COMPUTE_ENGINE\"] = \"COMPUTE_ENGINE\";\n    GCPEnv[\"CLOUD_RUN\"] = \"CLOUD_RUN\";\n    GCPEnv[\"NONE\"] = \"NONE\";\n})(GCPEnv = exports.GCPEnv || (exports.GCPEnv = {}));\nlet envPromise;\nfunction clear() {\n    envPromise = undefined;\n}\nexports.clear = clear;\nasync function getEnv() {\n    if (envPromise) {\n        return envPromise;\n    }\n    envPromise = getEnvMemoized();\n    return envPromise;\n}\nexports.getEnv = getEnv;\nasync function getEnvMemoized() {\n    let env = GCPEnv.NONE;\n    if (isAppEngine()) {\n        env = GCPEnv.APP_ENGINE;\n    }\n    else if (isCloudFunction()) {\n        env = GCPEnv.CLOUD_FUNCTIONS;\n    }\n    else if (await isComputeEngine()) {\n        if (await isKubernetesEngine()) {\n            env = GCPEnv.KUBERNETES_ENGINE;\n        }\n        else if (isCloudRun()) {\n            env = GCPEnv.CLOUD_RUN;\n        }\n        else {\n            env = GCPEnv.COMPUTE_ENGINE;\n        }\n    }\n    else {\n        env = GCPEnv.NONE;\n    }\n    return env;\n}\nfunction isAppEngine() {\n    return !!(process.env.GAE_SERVICE || process.env.GAE_MODULE_NAME);\n}\nfunction isCloudFunction() {\n    return !!(process.env.FUNCTION_NAME || process.env.FUNCTION_TARGET);\n}\n/**\n * This check only verifies that the environment is running knative.\n * This must be run *after* checking for Kubernetes, otherwise it will\n * return a false positive.\n */\nfunction isCloudRun() {\n    return !!process.env.K_CONFIGURATION;\n}\nasync function isKubernetesEngine() {\n    try {\n        await gcpMetadata.instance('attributes/cluster-name');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\nasync function isComputeEngine() {\n    return gcpMetadata.isAvailable();\n}\n//# sourceMappingURL=envDetect.js.map", "/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n", "/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n", "var bufferEqual = require('buffer-equal-constant-time');\nvar Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n", "/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n", "/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n", "/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n", "/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n", "/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n", "/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n", "/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n", "/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n", "/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n", "/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n", "/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n", "/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n", "/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n", "/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar md5 = module.exports = forge.md5 = forge.md5 || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n", "/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n", "/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n", "/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n", "/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n", "/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n", "/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n", "/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n", "// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n", "/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n", "/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n", "/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n", "/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n", "/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n", "/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n", "/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n", "/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n", "/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n", "/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n", "/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n", "/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./oids');\nrequire('./pbe');\nrequire('./pem');\nrequire('./pbkdf2');\nrequire('./pkcs12');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n", "/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./md5');\nrequire('./pem');\nrequire('./pki');\nrequire('./random');\nrequire('./sha1');\nrequire('./util');\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  -------->\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     -------->\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <------->     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   -------->\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      -------->\n * Application Data              <------->     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // Make a copy of c.verifyOptions so that we can modify options.verify\n    // without modifying c.verifyOptions.\n    var options = {};\n    for (var key in c.verifyOptions) {\n      options[key] = c.verifyOptions[key];\n    }\n\n    options.verify = function(vfd, depth, chain) {\n      // convert pki.certificateError to tls alert description\n      var desc = _certErrorToAlertDesc(vfd);\n\n      // call application callback\n      var ret = c.verify(c, vfd, depth, chain);\n      if(ret !== true) {\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          // throw custom error\n          var error = new Error('The application rejected the certificate.');\n          error.send = true;\n          error.alert = {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          };\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n          throw error;\n        }\n\n        // convert tls alert description to pki.certificateError\n        if(ret !== vfd) {\n          ret = _alertDescToCertError(ret);\n        }\n      }\n\n      return ret;\n    };\n\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain, options);\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    verifyOptions: options.verifyOptions || {},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nmodule.exports = forge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   verifyOptions: an object with options for the certificate chain validation.\n *     See documentation of pki.verifyCertificateChain for possible options.\n *     verifyOptions.verify is ignored. If you wish to specify a verify handler\n *     use the verify key.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n", "/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./tls');\n\nvar tls = module.exports = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00, 0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00, 0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n", "/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n", "/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n", "/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2019 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = require('./forge');\nrequire('./jsbn');\nrequire('./random');\nrequire('./sha512');\nrequire('./util');\nvar asn1Validator = require('./asn1-validator');\nvar publicKeyValidator = asn1Validator.publicKeyValidator;\nvar privateKeyValidator = asn1Validator.privateKeyValidator;\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\n/**\n * Converts a private key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a private key.\n *\n * @returns {Object} keyInfo - The key information.\n * @returns {Buffer|Uint8Array} keyInfo.privateKeyBytes - 32 private key bytes.\n */\ned25519.privateKeyFromAsn1 = function(obj) {\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, privateKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.privateKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var privateKey = capture.privateKey;\n  // manually extract the private key bytes from nested octet string, see FIXME:\n  // https://github.com/digitalbazaar/forge/blob/master/lib/asn1.js#L542\n  var privateKeyBytes = messageToNativeBuffer({\n    message: forge.asn1.fromDer(privateKey).value,\n    encoding: 'binary'\n  });\n  // TODO: RFC8410 specifies a format for encoding the public key bytes along\n  // with the private key bytes. `publicKeyBytes` can be returned in the\n  // future. https://tools.ietf.org/html/rfc8410#section-10.3\n  return {privateKeyBytes: privateKeyBytes};\n};\n\n/**\n * Converts a public key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a public key.\n *\n * @return {Buffer|Uint8Array} - 32 public key bytes.\n */\ned25519.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, publicKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.publicKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var publicKeyBytes = capture.ed25519PublicKey;\n  if(publicKeyBytes.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new Error('Key length is invalid.');\n  }\n  return messageToNativeBuffer({\n    message: publicKeyBytes,\n    encoding: 'binary'\n  });\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length === ed25519.constants.SEED_BYTE_LENGTH) {\n    var keyPair = ed25519.generateKeyPair({seed: privateKey});\n    privateKey = keyPair.privateKey;\n  } else if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.SEED_BYTE_LENGTH + ' or ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array || message instanceof NativeBuffer) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n", "/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./jsbn');\n\nmodule.exports = forge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 < r < n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.compareTo(BigInteger.ONE) <= 0);\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n", "/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n/* LOG API */\nmodule.exports = forge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || message['arguments']);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars in current URL.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null &&\n  typeof window !== 'undefined' && window.location\n) {\n  var query = new URL(window.location.href).searchParams;\n  if(query.has('console.level')) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query.get('console.level').slice(-1)[0]);\n  }\n  if(query.has('console.lock')) {\n    // set with last value\n    var lock = query.get('console.lock').slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n", "/**\n * Node.js module for all known Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nmodule.exports = require('./md');\n\nrequire('./md5');\nrequire('./sha1');\nrequire('./sha256');\nrequire('./sha512');\n", "/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n", "/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n", "/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = require('./forge');\nrequire('./aes');\nrequire('./aesCipherSuites');\nrequire('./asn1');\nrequire('./cipher');\nrequire('./des');\nrequire('./ed25519');\nrequire('./hmac');\nrequire('./kem');\nrequire('./log');\nrequire('./md.all');\nrequire('./mgf1');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./pkcs1');\nrequire('./pkcs12');\nrequire('./pkcs7');\nrequire('./pki');\nrequire('./prime');\nrequire('./prng');\nrequire('./pss');\nrequire('./random');\nrequire('./rc2');\nrequire('./ssh');\nrequire('./tls');\nrequire('./util');\n", "\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPem = void 0;\nconst fs = require(\"fs\");\nconst forge = require(\"node-forge\");\nconst util_1 = require(\"util\");\nconst readFile = util_1.promisify(fs.readFile);\nfunction getPem(filename, callback) {\n    if (callback) {\n        getPemAsync(filename)\n            .then(pem => callback(null, pem))\n            .catch(err => callback(err, null));\n    }\n    else {\n        return getPemAsync(filename);\n    }\n}\nexports.getPem = getPem;\nfunction getPemAsync(filename) {\n    return readFile(filename, { encoding: 'base64' }).then(keyp12 => {\n        return convertToPem(keyp12);\n    });\n}\n/**\n * Converts a P12 in base64 encoding to a pem.\n * @param p12base64 String containing base64 encoded p12.\n * @returns a string containing the pem.\n */\nfunction convertToPem(p12base64) {\n    const p12Der = forge.util.decode64(p12base64);\n    const p12Asn1 = forge.asn1.fromDer(p12Der);\n    const p12 = forge.pkcs12.pkcs12FromAsn1(p12Asn1, 'notasecret');\n    const bags = p12.getBags({ friendlyName: 'privatekey' });\n    if (bags.friendlyName) {\n        const privateKey = bags.friendlyName[0].key;\n        const pem = forge.pki.privateKeyToPem(privateKey);\n        return pem.replace(/\\r\\n/g, '\\n');\n    }\n    else {\n        throw new Error('Unable to get friendly name.');\n    }\n}\n//# sourceMappingURL=index.js.map", "\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? util_1.promisify(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.configure(options);\n    }\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                // bit time to overall module loading, and is likely not frequently\n                // used.  In a future release, p12 support will be entirely removed.\n                if (!getPem) {\n                    getPem = (await Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                }\n                const privateKey = await getPem(keyFile);\n                return { privateKey };\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.inFlightRequest && !opts.forceRefresh) {\n            return this.inFlightRequest;\n        }\n        try {\n            return await (this.inFlightRequest = this.getTokenAsyncInner(opts));\n        }\n        finally {\n            this.inFlightRequest = undefined;\n        }\n    }\n    async getTokenAsyncInner(opts) {\n        if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await gaxios_1.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n        this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await gaxios_1.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && e.response.data ? e.response.data : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n//# sourceMappingURL=index.js.map", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWTAccess = void 0;\nconst jws = require(\"jws\");\nconst LRU = require(\"lru-cache\");\nconst DEFAULT_HEADER = {\n    alg: 'RS256',\n    typ: 'JWT',\n};\nclass JWTAccess {\n    /**\n     * JWTAccess service account credentials.\n     *\n     * Create a new access token by using the credential to create a new JWT token\n     * that's recognized as the access token.\n     *\n     * @param email the service account email address.\n     * @param key the private key that will be used to sign the token.\n     * @param keyId the ID of the private key used to sign the token.\n     */\n    constructor(email, key, keyId, eagerRefreshThresholdMillis) {\n        this.cache = new LRU({\n            max: 500,\n            maxAge: 60 * 60 * 1000,\n        });\n        this.email = email;\n        this.key = key;\n        this.keyId = keyId;\n        this.eagerRefreshThresholdMillis = eagerRefreshThresholdMillis !== null && eagerRefreshThresholdMillis !== void 0 ? eagerRefreshThresholdMillis : 5 * 60 * 1000;\n    }\n    /**\n     * Ensures that we're caching a key appropriately, giving precedence to scopes vs. url\n     *\n     * @param url The URI being authorized.\n     * @param scopes The scope or scopes being authorized\n     * @returns A string that returns the cached key.\n     */\n    getCachedKey(url, scopes) {\n        let cacheKey = url;\n        if (scopes && Array.isArray(scopes) && scopes.length) {\n            cacheKey = url ? `${url}_${scopes.join('_')}` : `${scopes.join('_')}`;\n        }\n        else if (typeof scopes === 'string') {\n            cacheKey = url ? `${url}_${scopes}` : scopes;\n        }\n        if (!cacheKey) {\n            throw Error('Scopes or url must be provided');\n        }\n        return cacheKey;\n    }\n    /**\n     * Get a non-expired access token, after refreshing if necessary.\n     *\n     * @param url The URI being authorized.\n     * @param additionalClaims An object with a set of additional claims to\n     * include in the payload.\n     * @returns An object that includes the authorization header.\n     */\n    getRequestHeaders(url, additionalClaims, scopes) {\n        // Return cached authorization headers, unless we are within\n        // eagerRefreshThresholdMillis ms of them expiring:\n        const key = this.getCachedKey(url, scopes);\n        const cachedToken = this.cache.get(key);\n        const now = Date.now();\n        if (cachedToken &&\n            cachedToken.expiration - now > this.eagerRefreshThresholdMillis) {\n            return cachedToken.headers;\n        }\n        const iat = Math.floor(Date.now() / 1000);\n        const exp = JWTAccess.getExpirationTime(iat);\n        let defaultClaims;\n        // Turn scopes into space-separated string\n        if (Array.isArray(scopes)) {\n            scopes = scopes.join(' ');\n        }\n        // If scopes are specified, sign with scopes\n        if (scopes) {\n            defaultClaims = {\n                iss: this.email,\n                sub: this.email,\n                scope: scopes,\n                exp,\n                iat,\n            };\n        }\n        else {\n            defaultClaims = {\n                iss: this.email,\n                sub: this.email,\n                aud: url,\n                exp,\n                iat,\n            };\n        }\n        // if additionalClaims are provided, ensure they do not collide with\n        // other required claims.\n        if (additionalClaims) {\n            for (const claim in defaultClaims) {\n                if (additionalClaims[claim]) {\n                    throw new Error(`The '${claim}' property is not allowed when passing additionalClaims. This claim is included in the JWT by default.`);\n                }\n            }\n        }\n        const header = this.keyId\n            ? { ...DEFAULT_HEADER, kid: this.keyId }\n            : DEFAULT_HEADER;\n        const payload = Object.assign(defaultClaims, additionalClaims);\n        // Sign the jwt and add it to the cache\n        const signedJWT = jws.sign({ header, payload, secret: this.key });\n        const headers = { Authorization: `Bearer ${signedJWT}` };\n        this.cache.set(key, {\n            expiration: exp * 1000,\n            headers,\n        });\n        return headers;\n    }\n    /**\n     * Returns an expiration time for the JWT token.\n     *\n     * @param iat The issued at time for the JWT.\n     * @returns An expiration time for the JWT.\n     */\n    static getExpirationTime(iat) {\n        const exp = iat + 3600; // 3600 seconds = 1 hour\n        return exp;\n    }\n    /**\n     * Create a JWTAccess credentials instance using the given input options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the service account auth settings.');\n        }\n        if (!json.client_email) {\n            throw new Error('The incoming JSON object does not contain a client_email field');\n        }\n        if (!json.private_key) {\n            throw new Error('The incoming JSON object does not contain a private_key field');\n        }\n        // Extract the relevant information from the json key file.\n        this.email = json.client_email;\n        this.key = json.private_key;\n        this.keyId = json.private_key_id;\n        this.projectId = json.project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                reject(new Error('Must pass in a stream containing the service account auth settings.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('data', chunk => (s += chunk))\n                .on('error', reject)\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    resolve();\n                }\n                catch (err) {\n                    reject(err);\n                }\n            });\n        });\n    }\n}\nexports.JWTAccess = JWTAccess;\n//# sourceMappingURL=jwtaccess.js.map", "\"use strict\";\n// Copyright 2013 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JWT = void 0;\nconst gtoken_1 = require(\"gtoken\");\nconst jwtaccess_1 = require(\"./jwtaccess\");\nconst oauth2client_1 = require(\"./oauth2client\");\nclass JWT extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrEmail, keyFile, key, scopes, subject, keyId) {\n        const opts = optionsOrEmail && typeof optionsOrEmail === 'object'\n            ? optionsOrEmail\n            : { email: optionsOrEmail, keyFile, key, keyId, scopes, subject };\n        super({\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this.email = opts.email;\n        this.keyFile = opts.keyFile;\n        this.key = opts.key;\n        this.keyId = opts.keyId;\n        this.scopes = opts.scopes;\n        this.subject = opts.subject;\n        this.additionalClaims = opts.additionalClaims;\n        this.credentials = { refresh_token: 'jwt-placeholder', expiry_date: 1 };\n    }\n    /**\n     * Creates a copy of the credential with the specified scopes.\n     * @param scopes List of requested scopes or a single scope.\n     * @return The cloned instance.\n     */\n    createScoped(scopes) {\n        return new JWT({\n            email: this.email,\n            keyFile: this.keyFile,\n            key: this.key,\n            keyId: this.keyId,\n            scopes,\n            subject: this.subject,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Obtains the metadata to be sent with the request.\n     *\n     * @param url the URI being authorized.\n     */\n    async getRequestMetadataAsync(url) {\n        url = this.defaultServicePath ? `https://${this.defaultServicePath}/` : url;\n        const useSelfSignedJWT = (!this.hasUserScopes() && url) ||\n            (this.useJWTAccessWithScope && this.hasAnyScopes());\n        if (!this.apiKey && useSelfSignedJWT) {\n            if (this.additionalClaims &&\n                this.additionalClaims.target_audience) {\n                const { tokens } = await this.refreshToken();\n                return {\n                    headers: this.addSharedMetadataHeaders({\n                        Authorization: `Bearer ${tokens.id_token}`,\n                    }),\n                };\n            }\n            else {\n                // no scopes have been set, but a uri has been provided. Use JWTAccess\n                // credentials.\n                if (!this.access) {\n                    this.access = new jwtaccess_1.JWTAccess(this.email, this.key, this.keyId, this.eagerRefreshThresholdMillis);\n                }\n                let scopes;\n                if (this.hasUserScopes()) {\n                    scopes = this.scopes;\n                }\n                else if (!url) {\n                    scopes = this.defaultScopes;\n                }\n                const headers = await this.access.getRequestHeaders(url !== null && url !== void 0 ? url : undefined, this.additionalClaims, \n                // Scopes take precedent over audience for signing,\n                // so we only provide them if useJWTAccessWithScope is on\n                this.useJWTAccessWithScope ? scopes : undefined);\n                return { headers: this.addSharedMetadataHeaders(headers) };\n            }\n        }\n        else if (this.hasAnyScopes() || this.apiKey) {\n            return super.getRequestMetadataAsync(url);\n        }\n        else {\n            // If no audience, apiKey, or scopes are provided, we should not attempt\n            // to populate any headers:\n            return { headers: {} };\n        }\n    }\n    /**\n     * Fetches an ID token.\n     * @param targetAudience the audience for the fetched ID token.\n     */\n    async fetchIdToken(targetAudience) {\n        // Create a new gToken for fetching an ID token\n        const gtoken = new gtoken_1.GoogleToken({\n            iss: this.email,\n            sub: this.subject,\n            scope: this.scopes || this.defaultScopes,\n            keyFile: this.keyFile,\n            key: this.key,\n            additionalClaims: { target_audience: targetAudience },\n        });\n        await gtoken.getToken({\n            forceRefresh: true,\n        });\n        if (!gtoken.idToken) {\n            throw new Error('Unknown error: Failed to fetch ID token');\n        }\n        return gtoken.idToken;\n    }\n    /**\n     * Determine if there are currently scopes available.\n     */\n    hasUserScopes() {\n        if (!this.scopes) {\n            return false;\n        }\n        return this.scopes.length > 0;\n    }\n    /**\n     * Are there any default or user scopes defined.\n     */\n    hasAnyScopes() {\n        if (this.scopes && this.scopes.length > 0)\n            return true;\n        if (this.defaultScopes && this.defaultScopes.length > 0)\n            return true;\n        return false;\n    }\n    authorize(callback) {\n        if (callback) {\n            this.authorizeAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.authorizeAsync();\n        }\n    }\n    async authorizeAsync() {\n        const result = await this.refreshToken();\n        if (!result) {\n            throw new Error('No result returned');\n        }\n        this.credentials = result.tokens;\n        this.credentials.refresh_token = 'jwt-placeholder';\n        this.key = this.gtoken.key;\n        this.email = this.gtoken.iss;\n        return result.tokens;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken ignored\n     * @private\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        const gtoken = this.createGToken();\n        const token = await gtoken.getToken({\n            forceRefresh: this.isTokenExpiring(),\n        });\n        const tokens = {\n            access_token: token.access_token,\n            token_type: 'Bearer',\n            expiry_date: gtoken.expiresAt,\n            id_token: gtoken.idToken,\n        };\n        this.emit('tokens', tokens);\n        return { res: null, tokens };\n    }\n    /**\n     * Create a gToken if it doesn't already exist.\n     */\n    createGToken() {\n        if (!this.gtoken) {\n            this.gtoken = new gtoken_1.GoogleToken({\n                iss: this.email,\n                sub: this.subject,\n                scope: this.scopes || this.defaultScopes,\n                keyFile: this.keyFile,\n                key: this.key,\n                additionalClaims: this.additionalClaims,\n            });\n        }\n        return this.gtoken;\n    }\n    /**\n     * Create a JWT credentials instance using the given input options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the service account auth settings.');\n        }\n        if (!json.client_email) {\n            throw new Error('The incoming JSON object does not contain a client_email field');\n        }\n        if (!json.private_key) {\n            throw new Error('The incoming JSON object does not contain a private_key field');\n        }\n        // Extract the relevant information from the json key file.\n        this.email = json.client_email;\n        this.key = json.private_key;\n        this.keyId = json.private_key_id;\n        this.projectId = json.project_id;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                throw new Error('Must pass in a stream containing the service account auth settings.');\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    resolve();\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    /**\n     * Creates a JWT credentials instance using an API Key for authentication.\n     * @param apiKey The API Key in string form.\n     */\n    fromAPIKey(apiKey) {\n        if (typeof apiKey !== 'string') {\n            throw new Error('Must provide an API Key string.');\n        }\n        this.apiKey = apiKey;\n    }\n    /**\n     * Using the key or keyFile on the JWT client, obtain an object that contains\n     * the key and the client email.\n     */\n    async getCredentials() {\n        if (this.key) {\n            return { private_key: this.key, client_email: this.email };\n        }\n        else if (this.keyFile) {\n            const gtoken = this.createGToken();\n            const creds = await gtoken.getCredentials(this.keyFile);\n            return { private_key: creds.privateKey, client_email: creds.clientEmail };\n        }\n        throw new Error('A key or a keyFile must be provided to getCredentials.');\n    }\n}\nexports.JWT = JWT;\n//# sourceMappingURL=jwtclient.js.map", "\"use strict\";\n// Copyright 2015 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRefreshClient = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass UserRefreshClient extends oauth2client_1.OAuth2Client {\n    constructor(optionsOrClientId, clientSecret, refreshToken, eagerRefreshThresholdMillis, forceRefreshOnFailure) {\n        const opts = optionsOrClientId && typeof optionsOrClientId === 'object'\n            ? optionsOrClientId\n            : {\n                clientId: optionsOrClientId,\n                clientSecret,\n                refreshToken,\n                eagerRefreshThresholdMillis,\n                forceRefreshOnFailure,\n            };\n        super({\n            clientId: opts.clientId,\n            clientSecret: opts.clientSecret,\n            eagerRefreshThresholdMillis: opts.eagerRefreshThresholdMillis,\n            forceRefreshOnFailure: opts.forceRefreshOnFailure,\n        });\n        this._refreshToken = opts.refreshToken;\n        this.credentials.refresh_token = opts.refreshToken;\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken An ignored refreshToken..\n     * @param callback Optional callback.\n     */\n    async refreshTokenNoCache(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    refreshToken) {\n        return super.refreshTokenNoCache(this._refreshToken);\n    }\n    /**\n     * Create a UserRefreshClient credentials instance using the given input\n     * options.\n     * @param json The input object.\n     */\n    fromJSON(json) {\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the user refresh token');\n        }\n        if (json.type !== 'authorized_user') {\n            throw new Error('The incoming JSON object does not have the \"authorized_user\" type');\n        }\n        if (!json.client_id) {\n            throw new Error('The incoming JSON object does not contain a client_id field');\n        }\n        if (!json.client_secret) {\n            throw new Error('The incoming JSON object does not contain a client_secret field');\n        }\n        if (!json.refresh_token) {\n            throw new Error('The incoming JSON object does not contain a refresh_token field');\n        }\n        this._clientId = json.client_id;\n        this._clientSecret = json.client_secret;\n        this._refreshToken = json.refresh_token;\n        this.credentials.refresh_token = json.refresh_token;\n        this.quotaProjectId = json.quota_project_id;\n    }\n    fromStream(inputStream, callback) {\n        if (callback) {\n            this.fromStreamAsync(inputStream).then(() => callback(), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream);\n        }\n    }\n    async fromStreamAsync(inputStream) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                return reject(new Error('Must pass in a stream containing the user refresh token.'));\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    const data = JSON.parse(s);\n                    this.fromJSON(data);\n                    return resolve();\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n}\nexports.UserRefreshClient = UserRefreshClient;\n//# sourceMappingURL=refreshclient.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorFromOAuthErrorResponse = exports.OAuthClientAuthHandler = void 0;\nconst querystring = require(\"querystring\");\nconst crypto_1 = require(\"../crypto/crypto\");\n/** List of HTTP methods that accept request bodies. */\nconst METHODS_SUPPORTING_REQUEST_BODY = ['PUT', 'POST', 'PATCH'];\n/**\n * Abstract class for handling client authentication in OAuth-based\n * operations.\n * When request-body client authentication is used, only application/json and\n * application/x-www-form-urlencoded content types for HTTP methods that support\n * request bodies are supported.\n */\nclass OAuthClientAuthHandler {\n    /**\n     * Instantiates an OAuth client authentication handler.\n     * @param clientAuthentication The client auth credentials.\n     */\n    constructor(clientAuthentication) {\n        this.clientAuthentication = clientAuthentication;\n        this.crypto = crypto_1.createCrypto();\n    }\n    /**\n     * Applies client authentication on the OAuth request's headers or POST\n     * body but does not process the request.\n     * @param opts The GaxiosOptions whose headers or data are to be modified\n     *   depending on the client authentication mechanism to be used.\n     * @param bearerToken The optional bearer token to use for authentication.\n     *   When this is used, no client authentication credentials are needed.\n     */\n    applyClientAuthenticationOptions(opts, bearerToken) {\n        // Inject authenticated header.\n        this.injectAuthenticatedHeaders(opts, bearerToken);\n        // Inject authenticated request body.\n        if (!bearerToken) {\n            this.injectAuthenticatedRequestBody(opts);\n        }\n    }\n    /**\n     * Applies client authentication on the request's header if either\n     * basic authentication or bearer token authentication is selected.\n     *\n     * @param opts The GaxiosOptions whose headers or data are to be modified\n     *   depending on the client authentication mechanism to be used.\n     * @param bearerToken The optional bearer token to use for authentication.\n     *   When this is used, no client authentication credentials are needed.\n     */\n    injectAuthenticatedHeaders(opts, bearerToken) {\n        var _a;\n        // Bearer token prioritized higher than basic Auth.\n        if (bearerToken) {\n            opts.headers = opts.headers || {};\n            Object.assign(opts.headers, {\n                Authorization: `Bearer ${bearerToken}}`,\n            });\n        }\n        else if (((_a = this.clientAuthentication) === null || _a === void 0 ? void 0 : _a.confidentialClientType) === 'basic') {\n            opts.headers = opts.headers || {};\n            const clientId = this.clientAuthentication.clientId;\n            const clientSecret = this.clientAuthentication.clientSecret || '';\n            const base64EncodedCreds = this.crypto.encodeBase64StringUtf8(`${clientId}:${clientSecret}`);\n            Object.assign(opts.headers, {\n                Authorization: `Basic ${base64EncodedCreds}`,\n            });\n        }\n    }\n    /**\n     * Applies client authentication on the request's body if request-body\n     * client authentication is selected.\n     *\n     * @param opts The GaxiosOptions whose headers or data are to be modified\n     *   depending on the client authentication mechanism to be used.\n     */\n    injectAuthenticatedRequestBody(opts) {\n        var _a;\n        if (((_a = this.clientAuthentication) === null || _a === void 0 ? void 0 : _a.confidentialClientType) === 'request-body') {\n            const method = (opts.method || 'GET').toUpperCase();\n            // Inject authenticated request body.\n            if (METHODS_SUPPORTING_REQUEST_BODY.indexOf(method) !== -1) {\n                // Get content-type.\n                let contentType;\n                const headers = opts.headers || {};\n                for (const key in headers) {\n                    if (key.toLowerCase() === 'content-type' && headers[key]) {\n                        contentType = headers[key].toLowerCase();\n                        break;\n                    }\n                }\n                if (contentType === 'application/x-www-form-urlencoded') {\n                    opts.data = opts.data || '';\n                    const data = querystring.parse(opts.data);\n                    Object.assign(data, {\n                        client_id: this.clientAuthentication.clientId,\n                        client_secret: this.clientAuthentication.clientSecret || '',\n                    });\n                    opts.data = querystring.stringify(data);\n                }\n                else if (contentType === 'application/json') {\n                    opts.data = opts.data || {};\n                    Object.assign(opts.data, {\n                        client_id: this.clientAuthentication.clientId,\n                        client_secret: this.clientAuthentication.clientSecret || '',\n                    });\n                }\n                else {\n                    throw new Error(`${contentType} content-types are not supported with ` +\n                        `${this.clientAuthentication.confidentialClientType} ` +\n                        'client authentication');\n                }\n            }\n            else {\n                throw new Error(`${method} HTTP method does not support ` +\n                    `${this.clientAuthentication.confidentialClientType} ` +\n                    'client authentication');\n            }\n        }\n    }\n}\nexports.OAuthClientAuthHandler = OAuthClientAuthHandler;\n/**\n * Converts an OAuth error response to a native JavaScript Error.\n * @param resp The OAuth error response to convert to a native Error object.\n * @param err The optional original error. If provided, the error properties\n *   will be copied to the new error.\n * @return The converted native Error object.\n */\nfunction getErrorFromOAuthErrorResponse(resp, err) {\n    // Error response.\n    const errorCode = resp.error;\n    const errorDescription = resp.error_description;\n    const errorUri = resp.error_uri;\n    let message = `Error code ${errorCode}`;\n    if (typeof errorDescription !== 'undefined') {\n        message += `: ${errorDescription}`;\n    }\n    if (typeof errorUri !== 'undefined') {\n        message += ` - ${errorUri}`;\n    }\n    const newError = new Error(message);\n    // Copy properties from original error to newly generated error.\n    if (err) {\n        const keys = Object.keys(err);\n        if (err.stack) {\n            // Copy error.stack if available.\n            keys.push('stack');\n        }\n        keys.forEach(key => {\n            // Do not overwrite the message field.\n            if (key !== 'message') {\n                Object.defineProperty(newError, key, {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    value: err[key],\n                    writable: false,\n                    enumerable: true,\n                });\n            }\n        });\n    }\n    return newError;\n}\nexports.getErrorFromOAuthErrorResponse = getErrorFromOAuthErrorResponse;\n//# sourceMappingURL=oauth2common.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StsCredentials = void 0;\nconst querystring = require(\"querystring\");\nconst transporters_1 = require(\"../transporters\");\nconst oauth2common_1 = require(\"./oauth2common\");\n/**\n * Implements the OAuth 2.0 token exchange based on\n * https://tools.ietf.org/html/rfc8693\n */\nclass StsCredentials extends oauth2common_1.OAuthClientAuthHandler {\n    /**\n     * Initializes an STS credentials instance.\n     * @param tokenExchangeEndpoint The token exchange endpoint.\n     * @param clientAuthentication The client authentication credentials if\n     *   available.\n     */\n    constructor(tokenExchangeEndpoint, clientAuthentication) {\n        super(clientAuthentication);\n        this.tokenExchangeEndpoint = tokenExchangeEndpoint;\n        this.transporter = new transporters_1.DefaultTransporter();\n    }\n    /**\n     * Exchanges the provided token for another type of token based on the\n     * rfc8693 spec.\n     * @param stsCredentialsOptions The token exchange options used to populate\n     *   the token exchange request.\n     * @param additionalHeaders Optional additional headers to pass along the\n     *   request.\n     * @param options Optional additional GCP-specific non-spec defined options\n     *   to send with the request.\n     *   Example: `&options=${encodeUriComponent(JSON.stringified(options))}`\n     * @return A promise that resolves with the token exchange response containing\n     *   the requested token and its expiration time.\n     */\n    async exchangeToken(stsCredentialsOptions, additionalHeaders, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    options) {\n        var _a, _b, _c;\n        const values = {\n            grant_type: stsCredentialsOptions.grantType,\n            resource: stsCredentialsOptions.resource,\n            audience: stsCredentialsOptions.audience,\n            scope: (_a = stsCredentialsOptions.scope) === null || _a === void 0 ? void 0 : _a.join(' '),\n            requested_token_type: stsCredentialsOptions.requestedTokenType,\n            subject_token: stsCredentialsOptions.subjectToken,\n            subject_token_type: stsCredentialsOptions.subjectTokenType,\n            actor_token: (_b = stsCredentialsOptions.actingParty) === null || _b === void 0 ? void 0 : _b.actorToken,\n            actor_token_type: (_c = stsCredentialsOptions.actingParty) === null || _c === void 0 ? void 0 : _c.actorTokenType,\n            // Non-standard GCP-specific options.\n            options: options && JSON.stringify(options),\n        };\n        // Remove undefined fields.\n        Object.keys(values).forEach(key => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (typeof values[key] === 'undefined') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                delete values[key];\n            }\n        });\n        const headers = {\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        // Inject additional STS headers if available.\n        Object.assign(headers, additionalHeaders || {});\n        const opts = {\n            url: this.tokenExchangeEndpoint,\n            method: 'POST',\n            headers,\n            data: querystring.stringify(values),\n            responseType: 'json',\n        };\n        // Apply OAuth client authentication.\n        this.applyClientAuthenticationOptions(opts);\n        try {\n            const response = await this.transporter.request(opts);\n            // Successful response.\n            const stsSuccessfulResponse = response.data;\n            stsSuccessfulResponse.res = response;\n            return stsSuccessfulResponse;\n        }\n        catch (error) {\n            // Translate error to OAuthError.\n            if (error.response) {\n                throw oauth2common_1.getErrorFromOAuthErrorResponse(error.response.data, \n                // Preserve other fields from the original error.\n                error);\n            }\n            // Request could fail before the server responds.\n            throw error;\n        }\n    }\n}\nexports.StsCredentials = StsCredentials;\n//# sourceMappingURL=stscredentials.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseExternalAccountClient = exports.CLOUD_RESOURCE_MANAGER = exports.EXTERNAL_ACCOUNT_TYPE = exports.EXPIRATION_TIME_OFFSET = void 0;\nconst stream = require(\"stream\");\nconst authclient_1 = require(\"./authclient\");\nconst sts = require(\"./stscredentials\");\n/**\n * The required token exchange grant_type: rfc8693#section-2.1\n */\nconst STS_GRANT_TYPE = 'urn:ietf:params:oauth:grant-type:token-exchange';\n/**\n * The requested token exchange requested_token_type: rfc8693#section-2.1\n */\nconst STS_REQUEST_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:access_token';\n/** The default OAuth scope to request when none is provided. */\nconst DEFAULT_OAUTH_SCOPE = 'https://www.googleapis.com/auth/cloud-platform';\n/** The google apis domain pattern. */\nconst GOOGLE_APIS_DOMAIN_PATTERN = '\\\\.googleapis\\\\.com$';\n/** The variable portion pattern in a Google APIs domain. */\nconst VARIABLE_PORTION_PATTERN = '[^\\\\.\\\\s\\\\/\\\\\\\\]+';\n/**\n * Offset to take into account network delays and server clock skews.\n */\nexports.EXPIRATION_TIME_OFFSET = 5 * 60 * 1000;\n/**\n * The credentials JSON file type for external account clients.\n * There are 3 types of JSON configs:\n * 1. authorized_user => Google end user credential\n * 2. service_account => Google service account credential\n * 3. external_Account => non-GCP service (eg. AWS, Azure, K8s)\n */\nexports.EXTERNAL_ACCOUNT_TYPE = 'external_account';\n/** Cloud resource manager URL used to retrieve project information. */\nexports.CLOUD_RESOURCE_MANAGER = 'https://cloudresourcemanager.googleapis.com/v1/projects/';\n/** The workforce audience pattern. */\nconst WORKFORCE_AUDIENCE_PATTERN = '//iam.googleapis.com/locations/[^/]+/workforcePools/[^/]+/providers/.+';\n/**\n * Base external account client. This is used to instantiate AuthClients for\n * exchanging external account credentials for GCP access token and authorizing\n * requests to GCP APIs.\n * The base class implements common logic for exchanging various type of\n * external credentials for GCP access token. The logic of determining and\n * retrieving the external credential based on the environment and\n * credential_source will be left for the subclasses.\n */\nclass BaseExternalAccountClient extends authclient_1.AuthClient {\n    /**\n     * Instantiate a BaseExternalAccountClient instance using the provided JSON\n     * object loaded from an external account credentials file.\n     * @param options The external account options object typically loaded\n     *   from the external account JSON credential file.\n     * @param additionalOptions Optional additional behavior customization\n     *   options. These currently customize expiration threshold time and\n     *   whether to retry on 401/403 API request errors.\n     */\n    constructor(options, additionalOptions) {\n        super();\n        if (options.type !== exports.EXTERNAL_ACCOUNT_TYPE) {\n            throw new Error(`Expected \"${exports.EXTERNAL_ACCOUNT_TYPE}\" type but ` +\n                `received \"${options.type}\"`);\n        }\n        this.clientAuth = options.client_id\n            ? {\n                confidentialClientType: 'basic',\n                clientId: options.client_id,\n                clientSecret: options.client_secret,\n            }\n            : undefined;\n        if (!this.validateGoogleAPIsUrl('sts', options.token_url)) {\n            throw new Error(`\"${options.token_url}\" is not a valid token url.`);\n        }\n        this.stsCredential = new sts.StsCredentials(options.token_url, this.clientAuth);\n        // Default OAuth scope. This could be overridden via public property.\n        this.scopes = [DEFAULT_OAUTH_SCOPE];\n        this.cachedAccessToken = null;\n        this.audience = options.audience;\n        this.subjectTokenType = options.subject_token_type;\n        this.quotaProjectId = options.quota_project_id;\n        this.workforcePoolUserProject = options.workforce_pool_user_project;\n        const workforceAudiencePattern = new RegExp(WORKFORCE_AUDIENCE_PATTERN);\n        if (this.workforcePoolUserProject &&\n            !this.audience.match(workforceAudiencePattern)) {\n            throw new Error('workforcePoolUserProject should not be set for non-workforce pool ' +\n                'credentials.');\n        }\n        if (typeof options.service_account_impersonation_url !== 'undefined' &&\n            !this.validateGoogleAPIsUrl('iamcredentials', options.service_account_impersonation_url)) {\n            throw new Error(`\"${options.service_account_impersonation_url}\" is ` +\n                'not a valid service account impersonation url.');\n        }\n        this.serviceAccountImpersonationUrl =\n            options.service_account_impersonation_url;\n        // As threshold could be zero,\n        // eagerRefreshThresholdMillis || EXPIRATION_TIME_OFFSET will override the\n        // zero value.\n        if (typeof (additionalOptions === null || additionalOptions === void 0 ? void 0 : additionalOptions.eagerRefreshThresholdMillis) !== 'number') {\n            this.eagerRefreshThresholdMillis = exports.EXPIRATION_TIME_OFFSET;\n        }\n        else {\n            this.eagerRefreshThresholdMillis = additionalOptions\n                .eagerRefreshThresholdMillis;\n        }\n        this.forceRefreshOnFailure = !!(additionalOptions === null || additionalOptions === void 0 ? void 0 : additionalOptions.forceRefreshOnFailure);\n        this.projectId = null;\n        this.projectNumber = this.getProjectNumber(this.audience);\n    }\n    /** The service account email to be impersonated, if available. */\n    getServiceAccountEmail() {\n        var _a;\n        if (this.serviceAccountImpersonationUrl) {\n            // Parse email from URL. The formal looks as follows:\n            // https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/name@project-id.iam.gserviceaccount.com:generateAccessToken\n            const re = /serviceAccounts\\/(?<email>[^:]+):generateAccessToken$/;\n            const result = re.exec(this.serviceAccountImpersonationUrl);\n            return ((_a = result === null || result === void 0 ? void 0 : result.groups) === null || _a === void 0 ? void 0 : _a.email) || null;\n        }\n        return null;\n    }\n    /**\n     * Provides a mechanism to inject GCP access tokens directly.\n     * When the provided credential expires, a new credential, using the\n     * external account options, is retrieved.\n     * @param credentials The Credentials object to set on the current client.\n     */\n    setCredentials(credentials) {\n        super.setCredentials(credentials);\n        this.cachedAccessToken = credentials;\n    }\n    /**\n     * @return A promise that resolves with the current GCP access token\n     *   response. If the current credential is expired, a new one is retrieved.\n     */\n    async getAccessToken() {\n        // If cached access token is unavailable or expired, force refresh.\n        if (!this.cachedAccessToken || this.isExpired(this.cachedAccessToken)) {\n            await this.refreshAccessTokenAsync();\n        }\n        // Return GCP access token in GetAccessTokenResponse format.\n        return {\n            token: this.cachedAccessToken.access_token,\n            res: this.cachedAccessToken.res,\n        };\n    }\n    /**\n     * The main authentication interface. It takes an optional url which when\n     * present is the endpoint being accessed, and returns a Promise which\n     * resolves with authorization header fields.\n     *\n     * The result has the form:\n     * { Authorization: 'Bearer <access_token_value>' }\n     */\n    async getRequestHeaders() {\n        const accessTokenResponse = await this.getAccessToken();\n        const headers = {\n            Authorization: `Bearer ${accessTokenResponse.token}`,\n        };\n        return this.addSharedMetadataHeaders(headers);\n    }\n    request(opts, callback) {\n        if (callback) {\n            this.requestAsync(opts).then(r => callback(null, r), e => {\n                return callback(e, e.response);\n            });\n        }\n        else {\n            return this.requestAsync(opts);\n        }\n    }\n    /**\n     * @return A promise that resolves with the project ID corresponding to the\n     *   current workload identity pool or current workforce pool if\n     *   determinable. For workforce pool credential, it returns the project ID\n     *   corresponding to the workforcePoolUserProject.\n     *   This is introduced to match the current pattern of using the Auth\n     *   library:\n     *   const projectId = await auth.getProjectId();\n     *   const url = `https://dns.googleapis.com/dns/v1/projects/${projectId}`;\n     *   const res = await client.request({ url });\n     *   The resource may not have permission\n     *   (resourcemanager.projects.get) to call this API or the required\n     *   scopes may not be selected:\n     *   https://cloud.google.com/resource-manager/reference/rest/v1/projects/get#authorization-scopes\n     */\n    async getProjectId() {\n        const projectNumber = this.projectNumber || this.workforcePoolUserProject;\n        if (this.projectId) {\n            // Return previously determined project ID.\n            return this.projectId;\n        }\n        else if (projectNumber) {\n            // Preferable not to use request() to avoid retrial policies.\n            const headers = await this.getRequestHeaders();\n            const response = await this.transporter.request({\n                headers,\n                url: `${exports.CLOUD_RESOURCE_MANAGER}${projectNumber}`,\n                responseType: 'json',\n            });\n            this.projectId = response.data.projectId;\n            return this.projectId;\n        }\n        return null;\n    }\n    /**\n     * Authenticates the provided HTTP request, processes it and resolves with the\n     * returned response.\n     * @param opts The HTTP request options.\n     * @param retry Whether the current attempt is a retry after a failed attempt.\n     * @return A promise that resolves with the successful response.\n     */\n    async requestAsync(opts, retry = false) {\n        let response;\n        try {\n            const requestHeaders = await this.getRequestHeaders();\n            opts.headers = opts.headers || {};\n            if (requestHeaders && requestHeaders['x-goog-user-project']) {\n                opts.headers['x-goog-user-project'] =\n                    requestHeaders['x-goog-user-project'];\n            }\n            if (requestHeaders && requestHeaders.Authorization) {\n                opts.headers.Authorization = requestHeaders.Authorization;\n            }\n            response = await this.transporter.request(opts);\n        }\n        catch (e) {\n            const res = e.response;\n            if (res) {\n                const statusCode = res.status;\n                // Retry the request for metadata if the following criteria are true:\n                // - We haven't already retried.  It only makes sense to retry once.\n                // - The response was a 401 or a 403\n                // - The request didn't send a readableStream\n                // - forceRefreshOnFailure is true\n                const isReadableStream = res.config.data instanceof stream.Readable;\n                const isAuthErr = statusCode === 401 || statusCode === 403;\n                if (!retry &&\n                    isAuthErr &&\n                    !isReadableStream &&\n                    this.forceRefreshOnFailure) {\n                    await this.refreshAccessTokenAsync();\n                    return await this.requestAsync(opts, true);\n                }\n            }\n            throw e;\n        }\n        return response;\n    }\n    /**\n     * Forces token refresh, even if unexpired tokens are currently cached.\n     * External credentials are exchanged for GCP access tokens via the token\n     * exchange endpoint and other settings provided in the client options\n     * object.\n     * If the service_account_impersonation_url is provided, an additional\n     * step to exchange the external account GCP access token for a service\n     * account impersonated token is performed.\n     * @return A promise that resolves with the fresh GCP access tokens.\n     */\n    async refreshAccessTokenAsync() {\n        // Retrieve the external credential.\n        const subjectToken = await this.retrieveSubjectToken();\n        // Construct the STS credentials options.\n        const stsCredentialsOptions = {\n            grantType: STS_GRANT_TYPE,\n            audience: this.audience,\n            requestedTokenType: STS_REQUEST_TOKEN_TYPE,\n            subjectToken,\n            subjectTokenType: this.subjectTokenType,\n            // generateAccessToken requires the provided access token to have\n            // scopes:\n            // https://www.googleapis.com/auth/iam or\n            // https://www.googleapis.com/auth/cloud-platform\n            // The new service account access token scopes will match the user\n            // provided ones.\n            scope: this.serviceAccountImpersonationUrl\n                ? [DEFAULT_OAUTH_SCOPE]\n                : this.getScopesArray(),\n        };\n        // Exchange the external credentials for a GCP access token.\n        // Client auth is prioritized over passing the workforcePoolUserProject\n        // parameter for STS token exchange.\n        const additionalOptions = !this.clientAuth && this.workforcePoolUserProject\n            ? { userProject: this.workforcePoolUserProject }\n            : undefined;\n        const stsResponse = await this.stsCredential.exchangeToken(stsCredentialsOptions, undefined, additionalOptions);\n        if (this.serviceAccountImpersonationUrl) {\n            this.cachedAccessToken = await this.getImpersonatedAccessToken(stsResponse.access_token);\n        }\n        else if (stsResponse.expires_in) {\n            // Save response in cached access token.\n            this.cachedAccessToken = {\n                access_token: stsResponse.access_token,\n                expiry_date: new Date().getTime() + stsResponse.expires_in * 1000,\n                res: stsResponse.res,\n            };\n        }\n        else {\n            // Save response in cached access token.\n            this.cachedAccessToken = {\n                access_token: stsResponse.access_token,\n                res: stsResponse.res,\n            };\n        }\n        // Save credentials.\n        this.credentials = {};\n        Object.assign(this.credentials, this.cachedAccessToken);\n        delete this.credentials.res;\n        // Trigger tokens event to notify external listeners.\n        this.emit('tokens', {\n            refresh_token: null,\n            expiry_date: this.cachedAccessToken.expiry_date,\n            access_token: this.cachedAccessToken.access_token,\n            token_type: 'Bearer',\n            id_token: null,\n        });\n        // Return the cached access token.\n        return this.cachedAccessToken;\n    }\n    /**\n     * Returns the workload identity pool project number if it is determinable\n     * from the audience resource name.\n     * @param audience The STS audience used to determine the project number.\n     * @return The project number associated with the workload identity pool, if\n     *   this can be determined from the STS audience field. Otherwise, null is\n     *   returned.\n     */\n    getProjectNumber(audience) {\n        // STS audience pattern:\n        // //iam.googleapis.com/projects/$PROJECT_NUMBER/locations/...\n        const match = audience.match(/\\/projects\\/([^/]+)/);\n        if (!match) {\n            return null;\n        }\n        return match[1];\n    }\n    /**\n     * Exchanges an external account GCP access token for a service\n     * account impersonated access token using iamcredentials\n     * GenerateAccessToken API.\n     * @param token The access token to exchange for a service account access\n     *   token.\n     * @return A promise that resolves with the service account impersonated\n     *   credentials response.\n     */\n    async getImpersonatedAccessToken(token) {\n        const opts = {\n            url: this.serviceAccountImpersonationUrl,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n            data: {\n                scope: this.getScopesArray(),\n            },\n            responseType: 'json',\n        };\n        const response = await this.transporter.request(opts);\n        const successResponse = response.data;\n        return {\n            access_token: successResponse.accessToken,\n            // Convert from ISO format to timestamp.\n            expiry_date: new Date(successResponse.expireTime).getTime(),\n            res: response,\n        };\n    }\n    /**\n     * Returns whether the provided credentials are expired or not.\n     * If there is no expiry time, assumes the token is not expired or expiring.\n     * @param accessToken The credentials to check for expiration.\n     * @return Whether the credentials are expired or not.\n     */\n    isExpired(accessToken) {\n        const now = new Date().getTime();\n        return accessToken.expiry_date\n            ? now >= accessToken.expiry_date - this.eagerRefreshThresholdMillis\n            : false;\n    }\n    /**\n     * @return The list of scopes for the requested GCP access token.\n     */\n    getScopesArray() {\n        // Since scopes can be provided as string or array, the type should\n        // be normalized.\n        if (typeof this.scopes === 'string') {\n            return [this.scopes];\n        }\n        else if (typeof this.scopes === 'undefined') {\n            return [DEFAULT_OAUTH_SCOPE];\n        }\n        else {\n            return this.scopes;\n        }\n    }\n    /**\n     * Checks whether Google APIs URL is valid.\n     * @param apiName The apiName of url.\n     * @param url The Google API URL to validate.\n     * @return Whether the URL is valid or not.\n     */\n    validateGoogleAPIsUrl(apiName, url) {\n        let parsedUrl;\n        // Return false if error is thrown during parsing URL.\n        try {\n            parsedUrl = new URL(url);\n        }\n        catch (e) {\n            return false;\n        }\n        const urlDomain = parsedUrl.hostname;\n        // Check the protocol is https.\n        if (parsedUrl.protocol !== 'https:') {\n            return false;\n        }\n        const googleAPIsDomainPatterns = [\n            new RegExp('^' +\n                VARIABLE_PORTION_PATTERN +\n                '\\\\.' +\n                apiName +\n                GOOGLE_APIS_DOMAIN_PATTERN),\n            new RegExp('^' + apiName + GOOGLE_APIS_DOMAIN_PATTERN),\n            new RegExp('^' +\n                apiName +\n                '\\\\.' +\n                VARIABLE_PORTION_PATTERN +\n                GOOGLE_APIS_DOMAIN_PATTERN),\n            new RegExp('^' +\n                VARIABLE_PORTION_PATTERN +\n                '\\\\-' +\n                apiName +\n                GOOGLE_APIS_DOMAIN_PATTERN),\n        ];\n        for (const googleAPIsDomainPattern of googleAPIsDomainPatterns) {\n            if (urlDomain.match(googleAPIsDomainPattern)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexports.BaseExternalAccountClient = BaseExternalAccountClient;\n//# sourceMappingURL=baseexternalclient.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar _a, _b, _c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityPoolClient = void 0;\nconst fs = require(\"fs\");\nconst util_1 = require(\"util\");\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\n// fs.readfile is undefined in browser karma tests causing\n// `npm run browser-test` to fail as test.oauth2.ts imports this file via\n// src/index.ts.\n// Fallback to void function to avoid promisify throwing a TypeError.\nconst readFile = util_1.promisify((_a = fs.readFile) !== null && _a !== void 0 ? _a : (() => { }));\nconst realpath = util_1.promisify((_b = fs.realpath) !== null && _b !== void 0 ? _b : (() => { }));\nconst lstat = util_1.promisify((_c = fs.lstat) !== null && _c !== void 0 ? _c : (() => { }));\n/**\n * Defines the Url-sourced and file-sourced external account clients mainly\n * used for K8s and Azure workloads.\n */\nclass IdentityPoolClient extends baseexternalclient_1.BaseExternalAccountClient {\n    /**\n     * Instantiate an IdentityPoolClient instance using the provided JSON\n     * object loaded from an external account credentials file.\n     * An error is thrown if the credential is not a valid file-sourced or\n     * url-sourced credential or a workforce pool user project is provided\n     * with a non workforce audience.\n     * @param options The external account options object typically loaded\n     *   from the external account JSON credential file.\n     * @param additionalOptions Optional additional behavior customization\n     *   options. These currently customize expiration threshold time and\n     *   whether to retry on 401/403 API request errors.\n     */\n    constructor(options, additionalOptions) {\n        var _a, _b;\n        super(options, additionalOptions);\n        this.file = options.credential_source.file;\n        this.url = options.credential_source.url;\n        this.headers = options.credential_source.headers;\n        if (!this.file && !this.url) {\n            throw new Error('No valid Identity Pool \"credential_source\" provided');\n        }\n        // Text is the default format type.\n        this.formatType = ((_a = options.credential_source.format) === null || _a === void 0 ? void 0 : _a.type) || 'text';\n        this.formatSubjectTokenFieldName = (_b = options.credential_source.format) === null || _b === void 0 ? void 0 : _b.subject_token_field_name;\n        if (this.formatType !== 'json' && this.formatType !== 'text') {\n            throw new Error(`Invalid credential_source format \"${this.formatType}\"`);\n        }\n        if (this.formatType === 'json' && !this.formatSubjectTokenFieldName) {\n            throw new Error('Missing subject_token_field_name for JSON credential_source format');\n        }\n    }\n    /**\n     * Triggered when a external subject token is needed to be exchanged for a GCP\n     * access token via GCP STS endpoint.\n     * This uses the `options.credential_source` object to figure out how\n     * to retrieve the token using the current environment. In this case,\n     * this either retrieves the local credential from a file location (k8s\n     * workload) or by sending a GET request to a local metadata server (Azure\n     * workloads).\n     * @return A promise that resolves with the external subject token.\n     */\n    async retrieveSubjectToken() {\n        if (this.file) {\n            return await this.getTokenFromFile(this.file, this.formatType, this.formatSubjectTokenFieldName);\n        }\n        return await this.getTokenFromUrl(this.url, this.formatType, this.formatSubjectTokenFieldName, this.headers);\n    }\n    /**\n     * Looks up the external subject token in the file path provided and\n     * resolves with that token.\n     * @param file The file path where the external credential is located.\n     * @param formatType The token file or URL response type (JSON or text).\n     * @param formatSubjectTokenFieldName For JSON response types, this is the\n     *   subject_token field name. For Azure, this is access_token. For text\n     *   response types, this is ignored.\n     * @return A promise that resolves with the external subject token.\n     */\n    async getTokenFromFile(filePath, formatType, formatSubjectTokenFieldName) {\n        // Make sure there is a file at the path. lstatSync will throw if there is\n        // nothing there.\n        try {\n            // Resolve path to actual file in case of symlink. Expect a thrown error\n            // if not resolvable.\n            filePath = await realpath(filePath);\n            if (!(await lstat(filePath)).isFile()) {\n                throw new Error();\n            }\n        }\n        catch (err) {\n            err.message = `The file at ${filePath} does not exist, or it is not a file. ${err.message}`;\n            throw err;\n        }\n        let subjectToken;\n        const rawText = await readFile(filePath, { encoding: 'utf8' });\n        if (formatType === 'text') {\n            subjectToken = rawText;\n        }\n        else if (formatType === 'json' && formatSubjectTokenFieldName) {\n            const json = JSON.parse(rawText);\n            subjectToken = json[formatSubjectTokenFieldName];\n        }\n        if (!subjectToken) {\n            throw new Error('Unable to parse the subject_token from the credential_source file');\n        }\n        return subjectToken;\n    }\n    /**\n     * Sends a GET request to the URL provided and resolves with the returned\n     * external subject token.\n     * @param url The URL to call to retrieve the subject token. This is typically\n     *   a local metadata server.\n     * @param formatType The token file or URL response type (JSON or text).\n     * @param formatSubjectTokenFieldName For JSON response types, this is the\n     *   subject_token field name. For Azure, this is access_token. For text\n     *   response types, this is ignored.\n     * @param headers The optional additional headers to send with the request to\n     *   the metadata server url.\n     * @return A promise that resolves with the external subject token.\n     */\n    async getTokenFromUrl(url, formatType, formatSubjectTokenFieldName, headers) {\n        const opts = {\n            url,\n            method: 'GET',\n            headers,\n            responseType: formatType,\n        };\n        let subjectToken;\n        if (formatType === 'text') {\n            const response = await this.transporter.request(opts);\n            subjectToken = response.data;\n        }\n        else if (formatType === 'json' && formatSubjectTokenFieldName) {\n            const response = await this.transporter.request(opts);\n            subjectToken = response.data[formatSubjectTokenFieldName];\n        }\n        if (!subjectToken) {\n            throw new Error('Unable to parse the subject_token from the credential_source URL');\n        }\n        return subjectToken;\n    }\n}\nexports.IdentityPoolClient = IdentityPoolClient;\n//# sourceMappingURL=identitypoolclient.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsRequestSigner = void 0;\nconst crypto_1 = require(\"../crypto/crypto\");\n/** AWS Signature Version 4 signing algorithm identifier.  */\nconst AWS_ALGORITHM = 'AWS4-HMAC-SHA256';\n/**\n * The termination string for the AWS credential scope value as defined in\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html\n */\nconst AWS_REQUEST_TYPE = 'aws4_request';\n/**\n * Implements an AWS API request signer based on the AWS Signature Version 4\n * signing process.\n * https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\n */\nclass AwsRequestSigner {\n    /**\n     * Instantiates an AWS API request signer used to send authenticated signed\n     * requests to AWS APIs based on the AWS Signature Version 4 signing process.\n     * This also provides a mechanism to generate the signed request without\n     * sending it.\n     * @param getCredentials A mechanism to retrieve AWS security credentials\n     *   when needed.\n     * @param region The AWS region to use.\n     */\n    constructor(getCredentials, region) {\n        this.getCredentials = getCredentials;\n        this.region = region;\n        this.crypto = crypto_1.createCrypto();\n    }\n    /**\n     * Generates the signed request for the provided HTTP request for calling\n     * an AWS API. This follows the steps described at:\n     * https://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html\n     * @param amzOptions The AWS request options that need to be signed.\n     * @return A promise that resolves with the GaxiosOptions containing the\n     *   signed HTTP request parameters.\n     */\n    async getRequestOptions(amzOptions) {\n        if (!amzOptions.url) {\n            throw new Error('\"url\" is required in \"amzOptions\"');\n        }\n        // Stringify JSON requests. This will be set in the request body of the\n        // generated signed request.\n        const requestPayloadData = typeof amzOptions.data === 'object'\n            ? JSON.stringify(amzOptions.data)\n            : amzOptions.data;\n        const url = amzOptions.url;\n        const method = amzOptions.method || 'GET';\n        const requestPayload = amzOptions.body || requestPayloadData;\n        const additionalAmzHeaders = amzOptions.headers;\n        const awsSecurityCredentials = await this.getCredentials();\n        const uri = new URL(url);\n        const headerMap = await generateAuthenticationHeaderMap({\n            crypto: this.crypto,\n            host: uri.host,\n            canonicalUri: uri.pathname,\n            canonicalQuerystring: uri.search.substr(1),\n            method,\n            region: this.region,\n            securityCredentials: awsSecurityCredentials,\n            requestPayload,\n            additionalAmzHeaders,\n        });\n        // Append additional optional headers, eg. X-Amz-Target, Content-Type, etc.\n        const headers = Object.assign(\n        // Add x-amz-date if available.\n        headerMap.amzDate ? { 'x-amz-date': headerMap.amzDate } : {}, {\n            Authorization: headerMap.authorizationHeader,\n            host: uri.host,\n        }, additionalAmzHeaders || {});\n        if (awsSecurityCredentials.token) {\n            Object.assign(headers, {\n                'x-amz-security-token': awsSecurityCredentials.token,\n            });\n        }\n        const awsSignedReq = {\n            url,\n            method: method,\n            headers,\n        };\n        if (typeof requestPayload !== 'undefined') {\n            awsSignedReq.body = requestPayload;\n        }\n        return awsSignedReq;\n    }\n}\nexports.AwsRequestSigner = AwsRequestSigner;\n/**\n * Creates the HMAC-SHA256 hash of the provided message using the\n * provided key.\n *\n * @param crypto The crypto instance used to facilitate cryptographic\n *   operations.\n * @param key The HMAC-SHA256 key to use.\n * @param msg The message to hash.\n * @return The computed hash bytes.\n */\nasync function sign(crypto, key, msg) {\n    return await crypto.signWithHmacSha256(key, msg);\n}\n/**\n * Calculates the signing key used to calculate the signature for\n * AWS Signature Version 4 based on:\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param crypto The crypto instance used to facilitate cryptographic\n *   operations.\n * @param key The AWS secret access key.\n * @param dateStamp The '%Y%m%d' date format.\n * @param region The AWS region.\n * @param serviceName The AWS service name, eg. sts.\n * @return The signing key bytes.\n */\nasync function getSigningKey(crypto, key, dateStamp, region, serviceName) {\n    const kDate = await sign(crypto, `AWS4${key}`, dateStamp);\n    const kRegion = await sign(crypto, kDate, region);\n    const kService = await sign(crypto, kRegion, serviceName);\n    const kSigning = await sign(crypto, kService, 'aws4_request');\n    return kSigning;\n}\n/**\n * Generates the authentication header map needed for generating the AWS\n * Signature Version 4 signed request.\n *\n * @param option The options needed to compute the authentication header map.\n * @return The AWS authentication header map which constitutes of the following\n *   components: amz-date, authorization header and canonical query string.\n */\nasync function generateAuthenticationHeaderMap(options) {\n    const additionalAmzHeaders = options.additionalAmzHeaders || {};\n    const requestPayload = options.requestPayload || '';\n    // iam.amazonaws.com host => iam service.\n    // sts.us-east-2.amazonaws.com => sts service.\n    const serviceName = options.host.split('.')[0];\n    const now = new Date();\n    // Format: '%Y%m%dT%H%M%SZ'.\n    const amzDate = now\n        .toISOString()\n        .replace(/[-:]/g, '')\n        .replace(/\\.[0-9]+/, '');\n    // Format: '%Y%m%d'.\n    const dateStamp = now.toISOString().replace(/[-]/g, '').replace(/T.*/, '');\n    // Change all additional headers to be lower case.\n    const reformattedAdditionalAmzHeaders = {};\n    Object.keys(additionalAmzHeaders).forEach(key => {\n        reformattedAdditionalAmzHeaders[key.toLowerCase()] =\n            additionalAmzHeaders[key];\n    });\n    // Add AWS token if available.\n    if (options.securityCredentials.token) {\n        reformattedAdditionalAmzHeaders['x-amz-security-token'] =\n            options.securityCredentials.token;\n    }\n    // Header keys need to be sorted alphabetically.\n    const amzHeaders = Object.assign({\n        host: options.host,\n    }, \n    // Previously the date was not fixed with x-amz- and could be provided manually.\n    // https://github.com/boto/botocore/blob/879f8440a4e9ace5d3cf145ce8b3d5e5ffb892ef/tests/unit/auth/aws4_testsuite/get-header-value-trim.req\n    reformattedAdditionalAmzHeaders.date ? {} : { 'x-amz-date': amzDate }, reformattedAdditionalAmzHeaders);\n    let canonicalHeaders = '';\n    const signedHeadersList = Object.keys(amzHeaders).sort();\n    signedHeadersList.forEach(key => {\n        canonicalHeaders += `${key}:${amzHeaders[key]}\\n`;\n    });\n    const signedHeaders = signedHeadersList.join(';');\n    const payloadHash = await options.crypto.sha256DigestHex(requestPayload);\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html\n    const canonicalRequest = `${options.method}\\n` +\n        `${options.canonicalUri}\\n` +\n        `${options.canonicalQuerystring}\\n` +\n        `${canonicalHeaders}\\n` +\n        `${signedHeaders}\\n` +\n        `${payloadHash}`;\n    const credentialScope = `${dateStamp}/${options.region}/${serviceName}/${AWS_REQUEST_TYPE}`;\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html\n    const stringToSign = `${AWS_ALGORITHM}\\n` +\n        `${amzDate}\\n` +\n        `${credentialScope}\\n` +\n        (await options.crypto.sha256DigestHex(canonicalRequest));\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n    const signingKey = await getSigningKey(options.crypto, options.securityCredentials.secretAccessKey, dateStamp, options.region, serviceName);\n    const signature = await sign(options.crypto, signingKey, stringToSign);\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n    const authorizationHeader = `${AWS_ALGORITHM} Credential=${options.securityCredentials.accessKeyId}/` +\n        `${credentialScope}, SignedHeaders=${signedHeaders}, ` +\n        `Signature=${crypto_1.fromArrayBufferToHex(signature)}`;\n    return {\n        // Do not return x-amz-date if date is available.\n        amzDate: reformattedAdditionalAmzHeaders.date ? undefined : amzDate,\n        authorizationHeader,\n        canonicalQuerystring: options.canonicalQuerystring,\n    };\n}\n//# sourceMappingURL=awsrequestsigner.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwsClient = void 0;\nconst awsrequestsigner_1 = require(\"./awsrequestsigner\");\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\n/**\n * AWS external account client. This is used for AWS workloads, where\n * AWS STS GetCallerIdentity serialized signed requests are exchanged for\n * GCP access token.\n */\nclass AwsClient extends baseexternalclient_1.BaseExternalAccountClient {\n    /**\n     * Instantiates an AwsClient instance using the provided JSON\n     * object loaded from an external account credentials file.\n     * An error is thrown if the credential is not a valid AWS credential.\n     * @param options The external account options object typically loaded\n     *   from the external account JSON credential file.\n     * @param additionalOptions Optional additional behavior customization\n     *   options. These currently customize expiration threshold time and\n     *   whether to retry on 401/403 API request errors.\n     */\n    constructor(options, additionalOptions) {\n        var _a;\n        super(options, additionalOptions);\n        this.environmentId = options.credential_source.environment_id;\n        // This is only required if the AWS region is not available in the\n        // AWS_REGION or AWS_DEFAULT_REGION environment variables.\n        this.regionUrl = options.credential_source.region_url;\n        // This is only required if AWS security credentials are not available in\n        // environment variables.\n        this.securityCredentialsUrl = options.credential_source.url;\n        this.regionalCredVerificationUrl =\n            options.credential_source.regional_cred_verification_url;\n        const match = (_a = this.environmentId) === null || _a === void 0 ? void 0 : _a.match(/^(aws)(\\d+)$/);\n        if (!match || !this.regionalCredVerificationUrl) {\n            throw new Error('No valid AWS \"credential_source\" provided');\n        }\n        else if (parseInt(match[2], 10) !== 1) {\n            throw new Error(`aws version \"${match[2]}\" is not supported in the current build.`);\n        }\n        this.awsRequestSigner = null;\n        this.region = '';\n    }\n    /**\n     * Triggered when an external subject token is needed to be exchanged for a\n     * GCP access token via GCP STS endpoint.\n     * This uses the `options.credential_source` object to figure out how\n     * to retrieve the token using the current environment. In this case,\n     * this uses a serialized AWS signed request to the STS GetCallerIdentity\n     * endpoint.\n     * The logic is summarized as:\n     * 1. Retrieve AWS region from availability-zone.\n     * 2a. Check AWS credentials in environment variables. If not found, get\n     *     from security-credentials endpoint.\n     * 2b. Get AWS credentials from security-credentials endpoint. In order\n     *     to retrieve this, the AWS role needs to be determined by calling\n     *     security-credentials endpoint without any argument. Then the\n     *     credentials can be retrieved via: security-credentials/role_name\n     * 3. Generate the signed request to AWS STS GetCallerIdentity action.\n     * 4. Inject x-goog-cloud-target-resource into header and serialize the\n     *    signed request. This will be the subject-token to pass to GCP STS.\n     * @return A promise that resolves with the external subject token.\n     */\n    async retrieveSubjectToken() {\n        // Initialize AWS request signer if not already initialized.\n        if (!this.awsRequestSigner) {\n            this.region = await this.getAwsRegion();\n            this.awsRequestSigner = new awsrequestsigner_1.AwsRequestSigner(async () => {\n                // Check environment variables for permanent credentials first.\n                // https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html\n                if (process.env['AWS_ACCESS_KEY_ID'] &&\n                    process.env['AWS_SECRET_ACCESS_KEY']) {\n                    return {\n                        accessKeyId: process.env['AWS_ACCESS_KEY_ID'],\n                        secretAccessKey: process.env['AWS_SECRET_ACCESS_KEY'],\n                        // This is normally not available for permanent credentials.\n                        token: process.env['AWS_SESSION_TOKEN'],\n                    };\n                }\n                // Since the role on a VM can change, we don't need to cache it.\n                const roleName = await this.getAwsRoleName();\n                // Temporary credentials typically last for several hours.\n                // Expiration is returned in response.\n                // Consider future optimization of this logic to cache AWS tokens\n                // until their natural expiration.\n                const awsCreds = await this.getAwsSecurityCredentials(roleName);\n                return {\n                    accessKeyId: awsCreds.AccessKeyId,\n                    secretAccessKey: awsCreds.SecretAccessKey,\n                    token: awsCreds.Token,\n                };\n            }, this.region);\n        }\n        // Generate signed request to AWS STS GetCallerIdentity API.\n        // Use the required regional endpoint. Otherwise, the request will fail.\n        const options = await this.awsRequestSigner.getRequestOptions({\n            url: this.regionalCredVerificationUrl.replace('{region}', this.region),\n            method: 'POST',\n        });\n        // The GCP STS endpoint expects the headers to be formatted as:\n        // [\n        //   {key: 'x-amz-date', value: '...'},\n        //   {key: 'Authorization', value: '...'},\n        //   ...\n        // ]\n        // And then serialized as:\n        // encodeURIComponent(JSON.stringify({\n        //   url: '...',\n        //   method: 'POST',\n        //   headers: [{key: 'x-amz-date', value: '...'}, ...]\n        // }))\n        const reformattedHeader = [];\n        const extendedHeaders = Object.assign({\n            // The full, canonical resource name of the workload identity pool\n            // provider, with or without the HTTPS prefix.\n            // Including this header as part of the signature is recommended to\n            // ensure data integrity.\n            'x-goog-cloud-target-resource': this.audience,\n        }, options.headers);\n        // Reformat header to GCP STS expected format.\n        for (const key in extendedHeaders) {\n            reformattedHeader.push({\n                key,\n                value: extendedHeaders[key],\n            });\n        }\n        // Serialize the reformatted signed request.\n        return encodeURIComponent(JSON.stringify({\n            url: options.url,\n            method: options.method,\n            headers: reformattedHeader,\n        }));\n    }\n    /**\n     * @return A promise that resolves with the current AWS region.\n     */\n    async getAwsRegion() {\n        // Priority order for region determination:\n        // AWS_REGION > AWS_DEFAULT_REGION > metadata server.\n        if (process.env['AWS_REGION'] || process.env['AWS_DEFAULT_REGION']) {\n            return (process.env['AWS_REGION'] || process.env['AWS_DEFAULT_REGION']);\n        }\n        if (!this.regionUrl) {\n            throw new Error('Unable to determine AWS region due to missing ' +\n                '\"options.credential_source.region_url\"');\n        }\n        const opts = {\n            url: this.regionUrl,\n            method: 'GET',\n            responseType: 'text',\n        };\n        const response = await this.transporter.request(opts);\n        // Remove last character. For example, if us-east-2b is returned,\n        // the region would be us-east-2.\n        return response.data.substr(0, response.data.length - 1);\n    }\n    /**\n     * @return A promise that resolves with the assigned role to the current\n     *   AWS VM. This is needed for calling the security-credentials endpoint.\n     */\n    async getAwsRoleName() {\n        if (!this.securityCredentialsUrl) {\n            throw new Error('Unable to determine AWS role name due to missing ' +\n                '\"options.credential_source.url\"');\n        }\n        const opts = {\n            url: this.securityCredentialsUrl,\n            method: 'GET',\n            responseType: 'text',\n        };\n        const response = await this.transporter.request(opts);\n        return response.data;\n    }\n    /**\n     * Retrieves the temporary AWS credentials by calling the security-credentials\n     * endpoint as specified in the `credential_source` object.\n     * @param roleName The role attached to the current VM.\n     * @return A promise that resolves with the temporary AWS credentials\n     *   needed for creating the GetCallerIdentity signed request.\n     */\n    async getAwsSecurityCredentials(roleName) {\n        const response = await this.transporter.request({\n            url: `${this.securityCredentialsUrl}/${roleName}`,\n            responseType: 'json',\n        });\n        return response.data;\n    }\n}\nexports.AwsClient = AwsClient;\n//# sourceMappingURL=awsclient.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalAccountClient = void 0;\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\nconst identitypoolclient_1 = require(\"./identitypoolclient\");\nconst awsclient_1 = require(\"./awsclient\");\n/**\n * Dummy class with no constructor. Developers are expected to use fromJSON.\n */\nclass ExternalAccountClient {\n    constructor() {\n        throw new Error('ExternalAccountClients should be initialized via: ' +\n            'ExternalAccountClient.fromJSON(), ' +\n            'directly via explicit constructors, eg. ' +\n            'new AwsClient(options), new IdentityPoolClient(options) or via ' +\n            'new GoogleAuth(options).getClient()');\n    }\n    /**\n     * This static method will instantiate the\n     * corresponding type of external account credential depending on the\n     * underlying credential source.\n     * @param options The external account options object typically loaded\n     *   from the external account JSON credential file.\n     * @param additionalOptions Optional additional behavior customization\n     *   options. These currently customize expiration threshold time and\n     *   whether to retry on 401/403 API request errors.\n     * @return A BaseExternalAccountClient instance or null if the options\n     *   provided do not correspond to an external account credential.\n     */\n    static fromJSON(options, additionalOptions) {\n        var _a;\n        if (options && options.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n            if ((_a = options.credential_source) === null || _a === void 0 ? void 0 : _a.environment_id) {\n                return new awsclient_1.AwsClient(options, additionalOptions);\n            }\n            else {\n                return new identitypoolclient_1.IdentityPoolClient(options, additionalOptions);\n            }\n        }\n        else {\n            return null;\n        }\n    }\n}\nexports.ExternalAccountClient = ExternalAccountClient;\n//# sourceMappingURL=externalclient.js.map", "\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleAuth = exports.CLOUD_SDK_CLIENT_ID = void 0;\nconst child_process_1 = require(\"child_process\");\nconst fs = require(\"fs\");\nconst gcpMetadata = require(\"gcp-metadata\");\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst transporters_1 = require(\"../transporters\");\nconst computeclient_1 = require(\"./computeclient\");\nconst idtokenclient_1 = require(\"./idtokenclient\");\nconst envDetect_1 = require(\"./envDetect\");\nconst jwtclient_1 = require(\"./jwtclient\");\nconst refreshclient_1 = require(\"./refreshclient\");\nconst externalclient_1 = require(\"./externalclient\");\nconst baseexternalclient_1 = require(\"./baseexternalclient\");\nexports.CLOUD_SDK_CLIENT_ID = '764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com';\nclass GoogleAuth {\n    constructor(opts) {\n        /**\n         * Caches a value indicating whether the auth layer is running on Google\n         * Compute Engine.\n         * @private\n         */\n        this.checkIsGCE = undefined;\n        // To save the contents of the JSON credential file\n        this.jsonContent = null;\n        this.cachedCredential = null;\n        opts = opts || {};\n        this._cachedProjectId = opts.projectId || null;\n        this.keyFilename = opts.keyFilename || opts.keyFile;\n        this.scopes = opts.scopes;\n        this.jsonContent = opts.credentials || null;\n        this.clientOptions = opts.clientOptions;\n    }\n    // Note:  this properly is only public to satisify unit tests.\n    // https://github.com/Microsoft/TypeScript/issues/5228\n    get isGCE() {\n        return this.checkIsGCE;\n    }\n    // GAPIC client libraries should always use self-signed JWTs. The following\n    // variables are set on the JWT client in order to indicate the type of library,\n    // and sign the JWT with the correct audience and scopes (if not supplied).\n    setGapicJWTValues(client) {\n        client.defaultServicePath = this.defaultServicePath;\n        client.useJWTAccessWithScope = this.useJWTAccessWithScope;\n        client.defaultScopes = this.defaultScopes;\n    }\n    getProjectId(callback) {\n        if (callback) {\n            this.getProjectIdAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.getProjectIdAsync();\n        }\n    }\n    getProjectIdAsync() {\n        if (this._cachedProjectId) {\n            return Promise.resolve(this._cachedProjectId);\n        }\n        // In implicit case, supports three environments. In order of precedence,\n        // the implicit environments are:\n        // - GCLOUD_PROJECT or GOOGLE_CLOUD_PROJECT environment variable\n        // - GOOGLE_APPLICATION_CREDENTIALS JSON file\n        // - Cloud SDK: `gcloud config config-helper --format json`\n        // - GCE project ID from metadata server)\n        if (!this._getDefaultProjectIdPromise) {\n            // TODO: refactor the below code so that it doesn't mix and match\n            // promises and async/await.\n            this._getDefaultProjectIdPromise = new Promise(\n            // eslint-disable-next-line no-async-promise-executor\n            async (resolve, reject) => {\n                try {\n                    const projectId = this.getProductionProjectId() ||\n                        (await this.getFileProjectId()) ||\n                        (await this.getDefaultServiceProjectId()) ||\n                        (await this.getGCEProjectId()) ||\n                        (await this.getExternalAccountClientProjectId());\n                    this._cachedProjectId = projectId;\n                    if (!projectId) {\n                        throw new Error('Unable to detect a Project Id in the current environment. \\n' +\n                            'To learn more about authentication and Google APIs, visit: \\n' +\n                            'https://cloud.google.com/docs/authentication/getting-started');\n                    }\n                    resolve(projectId);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        }\n        return this._getDefaultProjectIdPromise;\n    }\n    /**\n     * @returns Any scopes (user-specified or default scopes specified by the\n     *   client library) that need to be set on the current Auth client.\n     */\n    getAnyScopes() {\n        return this.scopes || this.defaultScopes;\n    }\n    getApplicationDefault(optionsOrCallback = {}, callback) {\n        let options;\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        if (callback) {\n            this.getApplicationDefaultAsync(options).then(r => callback(null, r.credential, r.projectId), callback);\n        }\n        else {\n            return this.getApplicationDefaultAsync(options);\n        }\n    }\n    async getApplicationDefaultAsync(options = {}) {\n        // If we've already got a cached credential, just return it.\n        if (this.cachedCredential) {\n            return {\n                credential: this.cachedCredential,\n                projectId: await this.getProjectIdAsync(),\n            };\n        }\n        let credential;\n        let projectId;\n        // Check for the existence of a local environment variable pointing to the\n        // location of the credential file. This is typically used in local\n        // developer scenarios.\n        credential =\n            await this._tryGetApplicationCredentialsFromEnvironmentVariable(options);\n        if (credential) {\n            if (credential instanceof jwtclient_1.JWT) {\n                credential.scopes = this.scopes;\n            }\n            else if (credential instanceof baseexternalclient_1.BaseExternalAccountClient) {\n                credential.scopes = this.getAnyScopes();\n            }\n            this.cachedCredential = credential;\n            projectId = await this.getProjectId();\n            return { credential, projectId };\n        }\n        // Look in the well-known credential file location.\n        credential = await this._tryGetApplicationCredentialsFromWellKnownFile(options);\n        if (credential) {\n            if (credential instanceof jwtclient_1.JWT) {\n                credential.scopes = this.scopes;\n            }\n            else if (credential instanceof baseexternalclient_1.BaseExternalAccountClient) {\n                credential.scopes = this.getAnyScopes();\n            }\n            this.cachedCredential = credential;\n            projectId = await this.getProjectId();\n            return { credential, projectId };\n        }\n        // Determine if we're running on GCE.\n        let isGCE;\n        try {\n            isGCE = await this._checkIsGCE();\n        }\n        catch (e) {\n            e.message = `Unexpected error determining execution environment: ${e.message}`;\n            throw e;\n        }\n        if (!isGCE) {\n            // We failed to find the default credentials. Bail out with an error.\n            throw new Error('Could not load the default credentials. Browse to https://cloud.google.com/docs/authentication/getting-started for more information.');\n        }\n        // For GCE, just return a default ComputeClient. It will take care of\n        // the rest.\n        options.scopes = this.getAnyScopes();\n        this.cachedCredential = new computeclient_1.Compute(options);\n        projectId = await this.getProjectId();\n        return { projectId, credential: this.cachedCredential };\n    }\n    /**\n     * Determines whether the auth layer is running on Google Compute Engine.\n     * @returns A promise that resolves with the boolean.\n     * @api private\n     */\n    async _checkIsGCE() {\n        if (this.checkIsGCE === undefined) {\n            this.checkIsGCE = await gcpMetadata.isAvailable();\n        }\n        return this.checkIsGCE;\n    }\n    /**\n     * Attempts to load default credentials from the environment variable path..\n     * @returns Promise that resolves with the OAuth2Client or null.\n     * @api private\n     */\n    async _tryGetApplicationCredentialsFromEnvironmentVariable(options) {\n        const credentialsPath = process.env['GOOGLE_APPLICATION_CREDENTIALS'] ||\n            process.env['google_application_credentials'];\n        if (!credentialsPath || credentialsPath.length === 0) {\n            return null;\n        }\n        try {\n            return this._getApplicationCredentialsFromFilePath(credentialsPath, options);\n        }\n        catch (e) {\n            e.message = `Unable to read the credential file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable: ${e.message}`;\n            throw e;\n        }\n    }\n    /**\n     * Attempts to load default credentials from a well-known file location\n     * @return Promise that resolves with the OAuth2Client or null.\n     * @api private\n     */\n    async _tryGetApplicationCredentialsFromWellKnownFile(options) {\n        // First, figure out the location of the file, depending upon the OS type.\n        let location = null;\n        if (this._isWindows()) {\n            // Windows\n            location = process.env['APPDATA'];\n        }\n        else {\n            // Linux or Mac\n            const home = process.env['HOME'];\n            if (home) {\n                location = path.join(home, '.config');\n            }\n        }\n        // If we found the root path, expand it.\n        if (location) {\n            location = path.join(location, 'gcloud', 'application_default_credentials.json');\n            if (!fs.existsSync(location)) {\n                location = null;\n            }\n        }\n        // The file does not exist.\n        if (!location) {\n            return null;\n        }\n        // The file seems to exist. Try to use it.\n        const client = await this._getApplicationCredentialsFromFilePath(location, options);\n        return client;\n    }\n    /**\n     * Attempts to load default credentials from a file at the given path..\n     * @param filePath The path to the file to read.\n     * @returns Promise that resolves with the OAuth2Client\n     * @api private\n     */\n    async _getApplicationCredentialsFromFilePath(filePath, options = {}) {\n        // Make sure the path looks like a string.\n        if (!filePath || filePath.length === 0) {\n            throw new Error('The file path is invalid.');\n        }\n        // Make sure there is a file at the path. lstatSync will throw if there is\n        // nothing there.\n        try {\n            // Resolve path to actual file in case of symlink. Expect a thrown error\n            // if not resolvable.\n            filePath = fs.realpathSync(filePath);\n            if (!fs.lstatSync(filePath).isFile()) {\n                throw new Error();\n            }\n        }\n        catch (err) {\n            err.message = `The file at ${filePath} does not exist, or it is not a file. ${err.message}`;\n            throw err;\n        }\n        // Now open a read stream on the file, and parse it.\n        const readStream = fs.createReadStream(filePath);\n        return this.fromStream(readStream, options);\n    }\n    /**\n     * Create a credentials instance using the given input options.\n     * @param json The input object.\n     * @param options The JWT or UserRefresh options for the client\n     * @returns JWT or UserRefresh Client with data\n     */\n    fromJSON(json, options) {\n        let client;\n        if (!json) {\n            throw new Error('Must pass in a JSON object containing the Google auth settings.');\n        }\n        options = options || {};\n        if (json.type === 'authorized_user') {\n            client = new refreshclient_1.UserRefreshClient(options);\n            client.fromJSON(json);\n        }\n        else if (json.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n            client = externalclient_1.ExternalAccountClient.fromJSON(json, options);\n            client.scopes = this.getAnyScopes();\n        }\n        else {\n            options.scopes = this.scopes;\n            client = new jwtclient_1.JWT(options);\n            this.setGapicJWTValues(client);\n            client.fromJSON(json);\n        }\n        return client;\n    }\n    /**\n     * Return a JWT or UserRefreshClient from JavaScript object, caching both the\n     * object used to instantiate and the client.\n     * @param json The input object.\n     * @param options The JWT or UserRefresh options for the client\n     * @returns JWT or UserRefresh Client with data\n     */\n    _cacheClientFromJSON(json, options) {\n        let client;\n        // create either a UserRefreshClient or JWT client.\n        options = options || {};\n        if (json.type === 'authorized_user') {\n            client = new refreshclient_1.UserRefreshClient(options);\n            client.fromJSON(json);\n        }\n        else if (json.type === baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n            client = externalclient_1.ExternalAccountClient.fromJSON(json, options);\n            client.scopes = this.getAnyScopes();\n        }\n        else {\n            options.scopes = this.scopes;\n            client = new jwtclient_1.JWT(options);\n            this.setGapicJWTValues(client);\n            client.fromJSON(json);\n        }\n        // cache both raw data used to instantiate client and client itself.\n        this.jsonContent = json;\n        this.cachedCredential = client;\n        return this.cachedCredential;\n    }\n    fromStream(inputStream, optionsOrCallback = {}, callback) {\n        let options = {};\n        if (typeof optionsOrCallback === 'function') {\n            callback = optionsOrCallback;\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        if (callback) {\n            this.fromStreamAsync(inputStream, options).then(r => callback(null, r), callback);\n        }\n        else {\n            return this.fromStreamAsync(inputStream, options);\n        }\n    }\n    fromStreamAsync(inputStream, options) {\n        return new Promise((resolve, reject) => {\n            if (!inputStream) {\n                throw new Error('Must pass in a stream containing the Google auth settings.');\n            }\n            let s = '';\n            inputStream\n                .setEncoding('utf8')\n                .on('error', reject)\n                .on('data', chunk => (s += chunk))\n                .on('end', () => {\n                try {\n                    try {\n                        const data = JSON.parse(s);\n                        const r = this._cacheClientFromJSON(data, options);\n                        return resolve(r);\n                    }\n                    catch (err) {\n                        // If we failed parsing this.keyFileName, assume that it\n                        // is a PEM or p12 certificate:\n                        if (!this.keyFilename)\n                            throw err;\n                        const client = new jwtclient_1.JWT({\n                            ...this.clientOptions,\n                            keyFile: this.keyFilename,\n                        });\n                        this.cachedCredential = client;\n                        this.setGapicJWTValues(client);\n                        return resolve(client);\n                    }\n                }\n                catch (err) {\n                    return reject(err);\n                }\n            });\n        });\n    }\n    /**\n     * Create a credentials instance using the given API key string.\n     * @param apiKey The API key string\n     * @param options An optional options object.\n     * @returns A JWT loaded from the key\n     */\n    fromAPIKey(apiKey, options) {\n        options = options || {};\n        const client = new jwtclient_1.JWT(options);\n        client.fromAPIKey(apiKey);\n        return client;\n    }\n    /**\n     * Determines whether the current operating system is Windows.\n     * @api private\n     */\n    _isWindows() {\n        const sys = os.platform();\n        if (sys && sys.length >= 3) {\n            if (sys.substring(0, 3).toLowerCase() === 'win') {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Run the Google Cloud SDK command that prints the default project ID\n     */\n    async getDefaultServiceProjectId() {\n        return new Promise(resolve => {\n            child_process_1.exec('gcloud config config-helper --format json', (err, stdout) => {\n                if (!err && stdout) {\n                    try {\n                        const projectId = JSON.parse(stdout).configuration.properties.core.project;\n                        resolve(projectId);\n                        return;\n                    }\n                    catch (e) {\n                        // ignore errors\n                    }\n                }\n                resolve(null);\n            });\n        });\n    }\n    /**\n     * Loads the project id from environment variables.\n     * @api private\n     */\n    getProductionProjectId() {\n        return (process.env['GCLOUD_PROJECT'] ||\n            process.env['GOOGLE_CLOUD_PROJECT'] ||\n            process.env['gcloud_project'] ||\n            process.env['google_cloud_project']);\n    }\n    /**\n     * Loads the project id from the GOOGLE_APPLICATION_CREDENTIALS json file.\n     * @api private\n     */\n    async getFileProjectId() {\n        if (this.cachedCredential) {\n            // Try to read the project ID from the cached credentials file\n            return this.cachedCredential.projectId;\n        }\n        // Ensure the projectId is loaded from the keyFile if available.\n        if (this.keyFilename) {\n            const creds = await this.getClient();\n            if (creds && creds.projectId) {\n                return creds.projectId;\n            }\n        }\n        // Try to load a credentials file and read its project ID\n        const r = await this._tryGetApplicationCredentialsFromEnvironmentVariable();\n        if (r) {\n            return r.projectId;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Gets the project ID from external account client if available.\n     */\n    async getExternalAccountClientProjectId() {\n        if (!this.jsonContent || this.jsonContent.type !== baseexternalclient_1.EXTERNAL_ACCOUNT_TYPE) {\n            return null;\n        }\n        const creds = await this.getClient();\n        // Do not suppress the underlying error, as the error could contain helpful\n        // information for debugging and fixing. This is especially true for\n        // external account creds as in order to get the project ID, the following\n        // operations have to succeed:\n        // 1. Valid credentials file should be supplied.\n        // 2. Ability to retrieve access tokens from STS token exchange API.\n        // 3. Ability to exchange for service account impersonated credentials (if\n        //    enabled).\n        // 4. Ability to get project info using the access token from step 2 or 3.\n        // Without surfacing the error, it is harder for developers to determine\n        // which step went wrong.\n        return await creds.getProjectId();\n    }\n    /**\n     * Gets the Compute Engine project ID if it can be inferred.\n     */\n    async getGCEProjectId() {\n        try {\n            const r = await gcpMetadata.project('project-id');\n            return r;\n        }\n        catch (e) {\n            // Ignore any errors\n            return null;\n        }\n    }\n    getCredentials(callback) {\n        if (callback) {\n            this.getCredentialsAsync().then(r => callback(null, r), callback);\n        }\n        else {\n            return this.getCredentialsAsync();\n        }\n    }\n    async getCredentialsAsync() {\n        await this.getClient();\n        if (this.jsonContent) {\n            const credential = {\n                client_email: this.jsonContent.client_email,\n                private_key: this.jsonContent.private_key,\n            };\n            return credential;\n        }\n        const isGCE = await this._checkIsGCE();\n        if (!isGCE) {\n            throw new Error('Unknown error.');\n        }\n        // For GCE, return the service account details from the metadata server\n        // NOTE: The trailing '/' at the end of service-accounts/ is very important!\n        // The GCF metadata server doesn't respect querystring params if this / is\n        // not included.\n        const data = await gcpMetadata.instance({\n            property: 'service-accounts/',\n            params: { recursive: 'true' },\n        });\n        if (!data || !data.default || !data.default.email) {\n            throw new Error('Failure from metadata server.');\n        }\n        return { client_email: data.default.email };\n    }\n    /**\n     * Automatically obtain a client based on the provided configuration.  If no\n     * options were passed, use Application Default Credentials.\n     */\n    async getClient(options) {\n        if (options) {\n            throw new Error('Passing options to getClient is forbidden in v5.0.0. Use new GoogleAuth(opts) instead.');\n        }\n        if (!this.cachedCredential) {\n            if (this.jsonContent) {\n                this._cacheClientFromJSON(this.jsonContent, this.clientOptions);\n            }\n            else if (this.keyFilename) {\n                const filePath = path.resolve(this.keyFilename);\n                const stream = fs.createReadStream(filePath);\n                await this.fromStreamAsync(stream, this.clientOptions);\n            }\n            else {\n                await this.getApplicationDefaultAsync(this.clientOptions);\n            }\n        }\n        return this.cachedCredential;\n    }\n    /**\n     * Creates a client which will fetch an ID token for authorization.\n     * @param targetAudience the audience for the fetched ID token.\n     * @returns IdTokenClient for making HTTP calls authenticated with ID tokens.\n     */\n    async getIdTokenClient(targetAudience) {\n        const client = await this.getClient();\n        if (!('fetchIdToken' in client)) {\n            throw new Error('Cannot fetch ID token in this environment, use GCE or set the GOOGLE_APPLICATION_CREDENTIALS environment variable to a service account credentials JSON file.');\n        }\n        return new idtokenclient_1.IdTokenClient({ targetAudience, idTokenProvider: client });\n    }\n    /**\n     * Automatically obtain application default credentials, and return\n     * an access token for making requests.\n     */\n    async getAccessToken() {\n        const client = await this.getClient();\n        return (await client.getAccessToken()).token;\n    }\n    /**\n     * Obtain the HTTP headers that will provide authorization for a given\n     * request.\n     */\n    async getRequestHeaders(url) {\n        const client = await this.getClient();\n        return client.getRequestHeaders(url);\n    }\n    /**\n     * Obtain credentials for a request, then attach the appropriate headers to\n     * the request options.\n     * @param opts Axios or Request options on which to attach the headers\n     */\n    async authorizeRequest(opts) {\n        opts = opts || {};\n        const url = opts.url || opts.uri;\n        const client = await this.getClient();\n        const headers = await client.getRequestHeaders(url);\n        opts.headers = Object.assign(opts.headers || {}, headers);\n        return opts;\n    }\n    /**\n     * Automatically obtain application default credentials, and make an\n     * HTTP request using the given options.\n     * @param opts Axios request options for the HTTP request.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(opts) {\n        const client = await this.getClient();\n        return client.request(opts);\n    }\n    /**\n     * Determine the compute environment in which the code is running.\n     */\n    getEnv() {\n        return envDetect_1.getEnv();\n    }\n    /**\n     * Sign the given data with the current private key, or go out\n     * to the IAM API to sign it.\n     * @param data The data to be signed.\n     */\n    async sign(data) {\n        const client = await this.getClient();\n        const crypto = crypto_1.createCrypto();\n        if (client instanceof jwtclient_1.JWT && client.key) {\n            const sign = await crypto.sign(client.key, data);\n            return sign;\n        }\n        // signBlob requires a service account email and the underlying\n        // access token to have iam.serviceAccounts.signBlob permission\n        // on the specified resource name.\n        // The \"Service Account Token Creator\" role should cover this.\n        // As a result external account credentials can support this\n        // operation when service account impersonation is enabled.\n        if (client instanceof baseexternalclient_1.BaseExternalAccountClient &&\n            client.getServiceAccountEmail()) {\n            return this.signBlob(crypto, client.getServiceAccountEmail(), data);\n        }\n        const projectId = await this.getProjectId();\n        if (!projectId) {\n            throw new Error('Cannot sign data without a project ID.');\n        }\n        const creds = await this.getCredentials();\n        if (!creds.client_email) {\n            throw new Error('Cannot sign data without `client_email`.');\n        }\n        return this.signBlob(crypto, creds.client_email, data);\n    }\n    async signBlob(crypto, emailOrUniqueId, data) {\n        const url = 'https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/' +\n            `${emailOrUniqueId}:signBlob`;\n        const res = await this.request({\n            method: 'POST',\n            url,\n            data: {\n                payload: crypto.encodeBase64StringUtf8(data),\n            },\n        });\n        return res.data.signedBlob;\n    }\n}\nexports.GoogleAuth = GoogleAuth;\n/**\n * Export DefaultTransporter as a static property of the class.\n */\nGoogleAuth.DefaultTransporter = transporters_1.DefaultTransporter;\n//# sourceMappingURL=googleauth.js.map", "\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IAMAuth = void 0;\nclass IAMAuth {\n    /**\n     * IAM credentials.\n     *\n     * @param selector the iam authority selector\n     * @param token the token\n     * @constructor\n     */\n    constructor(selector, token) {\n        this.selector = selector;\n        this.token = token;\n        this.selector = selector;\n        this.token = token;\n    }\n    /**\n     * Acquire the HTTP headers required to make an authenticated request.\n     */\n    getRequestHeaders() {\n        return {\n            'x-goog-iam-authority-selector': this.selector,\n            'x-goog-iam-authorization-token': this.token,\n        };\n    }\n}\nexports.IAMAuth = IAMAuth;\n//# sourceMappingURL=iam.js.map", "\"use strict\";\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Impersonated = void 0;\nconst oauth2client_1 = require(\"./oauth2client\");\nclass Impersonated extends oauth2client_1.OAuth2Client {\n    /**\n     * Impersonated service account credentials.\n     *\n     * Create a new access token by impersonating another service account.\n     *\n     * Impersonated Credentials allowing credentials issued to a user or\n     * service account to impersonate another. The source project using\n     * Impersonated Credentials must enable the \"IAMCredentials\" API.\n     * Also, the target service account must grant the orginating principal\n     * the \"Service Account Token Creator\" IAM role.\n     *\n     * @param {object} options - The configuration object.\n     * @param {object} [options.sourceClient] the source credential used as to\n     * acquire the impersonated credentials.\n     * @param {string} [options.targetPrincipal] the service account to\n     * impersonate.\n     * @param {string[]} [options.delegates] the chained list of delegates\n     * required to grant the final access_token. If set, the sequence of\n     * identities must have \"Service Account Token Creator\" capability granted to\n     * the preceding identity. For example, if set to [serviceAccountB,\n     * serviceAccountC], the sourceCredential must have the Token Creator role on\n     * serviceAccountB. serviceAccountB must have the Token Creator on\n     * serviceAccountC. Finally, C must have Token Creator on target_principal.\n     * If left unset, sourceCredential must have that role on targetPrincipal.\n     * @param {string[]} [options.targetScopes] scopes to request during the\n     * authorization grant.\n     * @param {number} [options.lifetime] number of seconds the delegated\n     * credential should be valid for up to 3600 seconds by default, or 43,200\n     * seconds by extending the token's lifetime, see:\n     * https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials#sa-credentials-oauth\n     * @param {string} [options.endpoint] api endpoint override.\n     */\n    constructor(options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        super(options);\n        this.credentials = {\n            expiry_date: 1,\n            refresh_token: 'impersonated-placeholder',\n        };\n        this.sourceClient = (_a = options.sourceClient) !== null && _a !== void 0 ? _a : new oauth2client_1.OAuth2Client();\n        this.targetPrincipal = (_b = options.targetPrincipal) !== null && _b !== void 0 ? _b : '';\n        this.delegates = (_c = options.delegates) !== null && _c !== void 0 ? _c : [];\n        this.targetScopes = (_d = options.targetScopes) !== null && _d !== void 0 ? _d : [];\n        this.lifetime = (_e = options.lifetime) !== null && _e !== void 0 ? _e : 3600;\n        this.endpoint = (_f = options.endpoint) !== null && _f !== void 0 ? _f : 'https://iamcredentials.googleapis.com';\n    }\n    /**\n     * Refreshes the access token.\n     * @param refreshToken Unused parameter\n     */\n    async refreshToken(refreshToken) {\n        var _a, _b, _c, _d, _e, _f;\n        try {\n            await this.sourceClient.getAccessToken();\n            const name = 'projects/-/serviceAccounts/' + this.targetPrincipal;\n            const u = `${this.endpoint}/v1/${name}:generateAccessToken`;\n            const body = {\n                delegates: this.delegates,\n                scope: this.targetScopes,\n                lifetime: this.lifetime + 's',\n            };\n            const res = await this.sourceClient.request({\n                url: u,\n                data: body,\n                method: 'POST',\n            });\n            const tokenResponse = res.data;\n            this.credentials.access_token = tokenResponse.accessToken;\n            this.credentials.expiry_date = Date.parse(tokenResponse.expireTime);\n            return {\n                tokens: this.credentials,\n                res,\n            };\n        }\n        catch (error) {\n            const status = (_c = (_b = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.status;\n            const message = (_f = (_e = (_d = error === null || error === void 0 ? void 0 : error.response) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.error) === null || _f === void 0 ? void 0 : _f.message;\n            if (status && message) {\n                error.message = `${status}: unable to impersonate: ${message}`;\n                throw error;\n            }\n            else {\n                error.message = `unable to impersonate: ${error}`;\n                throw error;\n            }\n        }\n    }\n}\nexports.Impersonated = Impersonated;\n//# sourceMappingURL=impersonated.js.map", "\"use strict\";\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DownscopedClient = exports.EXPIRATION_TIME_OFFSET = exports.MAX_ACCESS_BOUNDARY_RULES_COUNT = void 0;\nconst stream = require(\"stream\");\nconst authclient_1 = require(\"./authclient\");\nconst sts = require(\"./stscredentials\");\n/**\n * The required token exchange grant_type: rfc8693#section-2.1\n */\nconst STS_GRANT_TYPE = 'urn:ietf:params:oauth:grant-type:token-exchange';\n/**\n * The requested token exchange requested_token_type: rfc8693#section-2.1\n */\nconst STS_REQUEST_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:access_token';\n/**\n * The requested token exchange subject_token_type: rfc8693#section-2.1\n */\nconst STS_SUBJECT_TOKEN_TYPE = 'urn:ietf:params:oauth:token-type:access_token';\n/** The STS access token exchange end point. */\nconst STS_ACCESS_TOKEN_URL = 'https://sts.googleapis.com/v1/token';\n/**\n * The maximum number of access boundary rules a Credential Access Boundary\n * can contain.\n */\nexports.MAX_ACCESS_BOUNDARY_RULES_COUNT = 10;\n/**\n * Offset to take into account network delays and server clock skews.\n */\nexports.EXPIRATION_TIME_OFFSET = 5 * 60 * 1000;\n/**\n * Defines a set of Google credentials that are downscoped from an existing set\n * of Google OAuth2 credentials. This is useful to restrict the Identity and\n * Access Management (IAM) permissions that a short-lived credential can use.\n * The common pattern of usage is to have a token broker with elevated access\n * generate these downscoped credentials from higher access source credentials\n * and pass the downscoped short-lived access tokens to a token consumer via\n * some secure authenticated channel for limited access to Google Cloud Storage\n * resources.\n */\nclass DownscopedClient extends authclient_1.AuthClient {\n    /**\n     * Instantiates a downscoped client object using the provided source\n     * AuthClient and credential access boundary rules.\n     * To downscope permissions of a source AuthClient, a Credential Access\n     * Boundary that specifies which resources the new credential can access, as\n     * well as an upper bound on the permissions that are available on each\n     * resource, has to be defined. A downscoped client can then be instantiated\n     * using the source AuthClient and the Credential Access Boundary.\n     * @param authClient The source AuthClient to be downscoped based on the\n     *   provided Credential Access Boundary rules.\n     * @param credentialAccessBoundary The Credential Access Boundary which\n     *   contains a list of access boundary rules. Each rule contains information\n     *   on the resource that the rule applies to, the upper bound of the\n     *   permissions that are available on that resource and an optional\n     *   condition to further restrict permissions.\n     * @param additionalOptions Optional additional behavior customization\n     *   options. These currently customize expiration threshold time and\n     *   whether to retry on 401/403 API request errors.\n     * @param quotaProjectId Optional quota project id for setting up in the\n     *   x-goog-user-project header.\n     */\n    constructor(authClient, credentialAccessBoundary, additionalOptions, quotaProjectId) {\n        super();\n        this.authClient = authClient;\n        this.credentialAccessBoundary = credentialAccessBoundary;\n        // Check 1-10 Access Boundary Rules are defined within Credential Access\n        // Boundary.\n        if (credentialAccessBoundary.accessBoundary.accessBoundaryRules.length === 0) {\n            throw new Error('At least one access boundary rule needs to be defined.');\n        }\n        else if (credentialAccessBoundary.accessBoundary.accessBoundaryRules.length >\n            exports.MAX_ACCESS_BOUNDARY_RULES_COUNT) {\n            throw new Error('The provided access boundary has more than ' +\n                `${exports.MAX_ACCESS_BOUNDARY_RULES_COUNT} access boundary rules.`);\n        }\n        // Check at least one permission should be defined in each Access Boundary\n        // Rule.\n        for (const rule of credentialAccessBoundary.accessBoundary\n            .accessBoundaryRules) {\n            if (rule.availablePermissions.length === 0) {\n                throw new Error('At least one permission should be defined in access boundary rules.');\n            }\n        }\n        this.stsCredential = new sts.StsCredentials(STS_ACCESS_TOKEN_URL);\n        this.cachedDownscopedAccessToken = null;\n        // As threshold could be zero,\n        // eagerRefreshThresholdMillis || EXPIRATION_TIME_OFFSET will override the\n        // zero value.\n        if (typeof (additionalOptions === null || additionalOptions === void 0 ? void 0 : additionalOptions.eagerRefreshThresholdMillis) !== 'number') {\n            this.eagerRefreshThresholdMillis = exports.EXPIRATION_TIME_OFFSET;\n        }\n        else {\n            this.eagerRefreshThresholdMillis = additionalOptions\n                .eagerRefreshThresholdMillis;\n        }\n        this.forceRefreshOnFailure = !!(additionalOptions === null || additionalOptions === void 0 ? void 0 : additionalOptions.forceRefreshOnFailure);\n        this.quotaProjectId = quotaProjectId;\n    }\n    /**\n     * Provides a mechanism to inject Downscoped access tokens directly.\n     * The expiry_date field is required to facilitate determination of the token\n     * expiration which would make it easier for the token consumer to handle.\n     * @param credentials The Credentials object to set on the current client.\n     */\n    setCredentials(credentials) {\n        if (!credentials.expiry_date) {\n            throw new Error('The access token expiry_date field is missing in the provided ' +\n                'credentials.');\n        }\n        super.setCredentials(credentials);\n        this.cachedDownscopedAccessToken = credentials;\n    }\n    async getAccessToken() {\n        // If the cached access token is unavailable or expired, force refresh.\n        // The Downscoped access token will be returned in\n        // DownscopedAccessTokenResponse format.\n        if (!this.cachedDownscopedAccessToken ||\n            this.isExpired(this.cachedDownscopedAccessToken)) {\n            await this.refreshAccessTokenAsync();\n        }\n        // Return Downscoped access token in DownscopedAccessTokenResponse format.\n        return {\n            token: this.cachedDownscopedAccessToken.access_token,\n            expirationTime: this.cachedDownscopedAccessToken.expiry_date,\n            res: this.cachedDownscopedAccessToken.res,\n        };\n    }\n    /**\n     * The main authentication interface. It takes an optional url which when\n     * present is the endpoint being accessed, and returns a Promise which\n     * resolves with authorization header fields.\n     *\n     * The result has the form:\n     * { Authorization: 'Bearer <access_token_value>' }\n     */\n    async getRequestHeaders() {\n        const accessTokenResponse = await this.getAccessToken();\n        const headers = {\n            Authorization: `Bearer ${accessTokenResponse.token}`,\n        };\n        return this.addSharedMetadataHeaders(headers);\n    }\n    request(opts, callback) {\n        if (callback) {\n            this.requestAsync(opts).then(r => callback(null, r), e => {\n                return callback(e, e.response);\n            });\n        }\n        else {\n            return this.requestAsync(opts);\n        }\n    }\n    /**\n     * Authenticates the provided HTTP request, processes it and resolves with the\n     * returned response.\n     * @param opts The HTTP request options.\n     * @param retry Whether the current attempt is a retry after a failed attempt.\n     * @return A promise that resolves with the successful response.\n     */\n    async requestAsync(opts, retry = false) {\n        let response;\n        try {\n            const requestHeaders = await this.getRequestHeaders();\n            opts.headers = opts.headers || {};\n            if (requestHeaders && requestHeaders['x-goog-user-project']) {\n                opts.headers['x-goog-user-project'] =\n                    requestHeaders['x-goog-user-project'];\n            }\n            if (requestHeaders && requestHeaders.Authorization) {\n                opts.headers.Authorization = requestHeaders.Authorization;\n            }\n            response = await this.transporter.request(opts);\n        }\n        catch (e) {\n            const res = e.response;\n            if (res) {\n                const statusCode = res.status;\n                // Retry the request for metadata if the following criteria are true:\n                // - We haven't already retried.  It only makes sense to retry once.\n                // - The response was a 401 or a 403\n                // - The request didn't send a readableStream\n                // - forceRefreshOnFailure is true\n                const isReadableStream = res.config.data instanceof stream.Readable;\n                const isAuthErr = statusCode === 401 || statusCode === 403;\n                if (!retry &&\n                    isAuthErr &&\n                    !isReadableStream &&\n                    this.forceRefreshOnFailure) {\n                    await this.refreshAccessTokenAsync();\n                    return await this.requestAsync(opts, true);\n                }\n            }\n            throw e;\n        }\n        return response;\n    }\n    /**\n     * Forces token refresh, even if unexpired tokens are currently cached.\n     * GCP access tokens are retrieved from authclient object/source credential.\n     * Then GCP access tokens are exchanged for downscoped access tokens via the\n     * token exchange endpoint.\n     * @return A promise that resolves with the fresh downscoped access token.\n     */\n    async refreshAccessTokenAsync() {\n        var _a;\n        // Retrieve GCP access token from source credential.\n        const subjectToken = (await this.authClient.getAccessToken()).token;\n        // Construct the STS credentials options.\n        const stsCredentialsOptions = {\n            grantType: STS_GRANT_TYPE,\n            requestedTokenType: STS_REQUEST_TOKEN_TYPE,\n            subjectToken: subjectToken,\n            subjectTokenType: STS_SUBJECT_TOKEN_TYPE,\n        };\n        // Exchange the source AuthClient access token for a Downscoped access\n        // token.\n        const stsResponse = await this.stsCredential.exchangeToken(stsCredentialsOptions, undefined, this.credentialAccessBoundary);\n        /**\n         * The STS endpoint will only return the expiration time for the downscoped\n         * access token if the original access token represents a service account.\n         * The downscoped token's expiration time will always match the source\n         * credential expiration. When no expires_in is returned, we can copy the\n         * source credential's expiration time.\n         */\n        const sourceCredExpireDate = ((_a = this.authClient.credentials) === null || _a === void 0 ? void 0 : _a.expiry_date) || null;\n        const expiryDate = stsResponse.expires_in\n            ? new Date().getTime() + stsResponse.expires_in * 1000\n            : sourceCredExpireDate;\n        // Save response in cached access token.\n        this.cachedDownscopedAccessToken = {\n            access_token: stsResponse.access_token,\n            expiry_date: expiryDate,\n            res: stsResponse.res,\n        };\n        // Save credentials.\n        this.credentials = {};\n        Object.assign(this.credentials, this.cachedDownscopedAccessToken);\n        delete this.credentials.res;\n        // Trigger tokens event to notify external listeners.\n        this.emit('tokens', {\n            refresh_token: null,\n            expiry_date: this.cachedDownscopedAccessToken.expiry_date,\n            access_token: this.cachedDownscopedAccessToken.access_token,\n            token_type: 'Bearer',\n            id_token: null,\n        });\n        // Return the cached access token.\n        return this.cachedDownscopedAccessToken;\n    }\n    /**\n     * Returns whether the provided credentials are expired or not.\n     * If there is no expiry time, assumes the token is not expired or expiring.\n     * @param downscopedAccessToken The credentials to check for expiration.\n     * @return Whether the credentials are expired or not.\n     */\n    isExpired(downscopedAccessToken) {\n        const now = new Date().getTime();\n        return downscopedAccessToken.expiry_date\n            ? now >=\n                downscopedAccessToken.expiry_date - this.eagerRefreshThresholdMillis\n            : false;\n    }\n}\nexports.DownscopedClient = DownscopedClient;\n//# sourceMappingURL=downscopedclient.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleAuth = exports.auth = void 0;\n// Copyright 2017 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nconst googleauth_1 = require(\"./auth/googleauth\");\nObject.defineProperty(exports, \"GoogleAuth\", { enumerable: true, get: function () { return googleauth_1.GoogleAuth; } });\nvar computeclient_1 = require(\"./auth/computeclient\");\nObject.defineProperty(exports, \"Compute\", { enumerable: true, get: function () { return computeclient_1.Compute; } });\nvar envDetect_1 = require(\"./auth/envDetect\");\nObject.defineProperty(exports, \"GCPEnv\", { enumerable: true, get: function () { return envDetect_1.GCPEnv; } });\nvar iam_1 = require(\"./auth/iam\");\nObject.defineProperty(exports, \"IAMAuth\", { enumerable: true, get: function () { return iam_1.IAMAuth; } });\nvar idtokenclient_1 = require(\"./auth/idtokenclient\");\nObject.defineProperty(exports, \"IdTokenClient\", { enumerable: true, get: function () { return idtokenclient_1.IdTokenClient; } });\nvar jwtaccess_1 = require(\"./auth/jwtaccess\");\nObject.defineProperty(exports, \"JWTAccess\", { enumerable: true, get: function () { return jwtaccess_1.JWTAccess; } });\nvar jwtclient_1 = require(\"./auth/jwtclient\");\nObject.defineProperty(exports, \"JWT\", { enumerable: true, get: function () { return jwtclient_1.JWT; } });\nvar impersonated_1 = require(\"./auth/impersonated\");\nObject.defineProperty(exports, \"Impersonated\", { enumerable: true, get: function () { return impersonated_1.Impersonated; } });\nvar oauth2client_1 = require(\"./auth/oauth2client\");\nObject.defineProperty(exports, \"CodeChallengeMethod\", { enumerable: true, get: function () { return oauth2client_1.CodeChallengeMethod; } });\nObject.defineProperty(exports, \"OAuth2Client\", { enumerable: true, get: function () { return oauth2client_1.OAuth2Client; } });\nvar loginticket_1 = require(\"./auth/loginticket\");\nObject.defineProperty(exports, \"LoginTicket\", { enumerable: true, get: function () { return loginticket_1.LoginTicket; } });\nvar refreshclient_1 = require(\"./auth/refreshclient\");\nObject.defineProperty(exports, \"UserRefreshClient\", { enumerable: true, get: function () { return refreshclient_1.UserRefreshClient; } });\nvar awsclient_1 = require(\"./auth/awsclient\");\nObject.defineProperty(exports, \"AwsClient\", { enumerable: true, get: function () { return awsclient_1.AwsClient; } });\nvar identitypoolclient_1 = require(\"./auth/identitypoolclient\");\nObject.defineProperty(exports, \"IdentityPoolClient\", { enumerable: true, get: function () { return identitypoolclient_1.IdentityPoolClient; } });\nvar externalclient_1 = require(\"./auth/externalclient\");\nObject.defineProperty(exports, \"ExternalAccountClient\", { enumerable: true, get: function () { return externalclient_1.ExternalAccountClient; } });\nvar baseexternalclient_1 = require(\"./auth/baseexternalclient\");\nObject.defineProperty(exports, \"BaseExternalAccountClient\", { enumerable: true, get: function () { return baseexternalclient_1.BaseExternalAccountClient; } });\nvar downscopedclient_1 = require(\"./auth/downscopedclient\");\nObject.defineProperty(exports, \"DownscopedClient\", { enumerable: true, get: function () { return downscopedclient_1.DownscopedClient; } });\nvar transporters_1 = require(\"./transporters\");\nObject.defineProperty(exports, \"DefaultTransporter\", { enumerable: true, get: function () { return transporters_1.DefaultTransporter; } });\nconst auth = new googleauth_1.GoogleAuth();\nexports.auth = auth;\n//# sourceMappingURL=index.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAPI = void 0;\nfunction getAPI(api, options, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nversions, context) {\n    let version;\n    if (typeof options === 'string') {\n        version = options;\n        options = {};\n    }\n    else if (typeof options === 'object') {\n        version = options.version;\n        delete options.version;\n    }\n    else {\n        throw new Error('Argument error: Accepts only string or object');\n    }\n    try {\n        const ctr = versions[version];\n        const ep = new ctr(options, context);\n        return Object.freeze(ep);\n    }\n    catch (e) {\n        throw new Error(`Unable to load endpoint ${api}(\"${version}\"): ${e.message}`);\n    }\n}\nexports.getAPI = getAPI;\n//# sourceMappingURL=apiIndex.js.map", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "module.exports = require('util').inspect;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar match = String.prototype.match;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nvar inspectCustom = require('./util.inspect').custom;\nvar inspectSymbol = inspectCustom && isSymbol(inspectCustom) ? inspectCustom : null;\nvar toStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag !== 'undefined' ? Symbol.toStringTag : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('options \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        return String(obj);\n    }\n    if (typeof obj === 'bigint') {\n        return String(obj) + 'n';\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = seen.slice();\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function') {\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? String(obj).replace(/^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + String(obj.nodeName).toLowerCase();\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + String(obj.nodeName).toLowerCase() + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + xs.join(', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {\n            return obj[inspectSymbol]();\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        mapForEach.call(obj, function (value, key) {\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n        });\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        setForEach.call(obj, function (value) {\n            setParts.push(inspect(value, obj));\n        });\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? toStr(obj).slice(8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + [].concat(stringTag || [], protoTag || []).join(': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + ys.join(', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return String(s).replace(/\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = str.replace(/(['\\\\])/g, '\\\\$1').replace(/[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + n.toString(16).toUpperCase();\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = Array(opts.indent + 1).join(' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: Array(depth + 1).join(baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + xs.join(',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ((/[^\\w$]/).test(key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar split = String.prototype.split;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\n                var valuesArray = split.call(String(obj), ',');\n                var valuesJoined = '';\n                for (var i = 0; i < valuesArray.length; ++i) {\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\n                }\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\n            }\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "(function (root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        root.urltemplate = factory();\n    }\n}(this, function () {\n  /**\n   * @constructor\n   */\n  function UrlTemplate() {\n  }\n\n  /**\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n      if (!/%[0-9A-Fa-f]/.test(part)) {\n        part = encodeURI(part).replace(/%5B/g, '[').replace(/%5D/g, ']');\n      }\n      return part;\n    }).join('');\n  };\n\n  /**\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeUnreserved = function (str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n      return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} operator\n   * @param {string} value\n   * @param {string} key\n   * @return {string}\n   */\n  UrlTemplate.prototype.encodeValue = function (operator, value, key) {\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : this.encodeUnreserved(value);\n\n    if (key) {\n      return this.encodeUnreserved(key) + '=' + value;\n    } else {\n      return value;\n    }\n  };\n\n  /**\n   * @private\n   * @param {*} value\n   * @return {boolean}\n   */\n  UrlTemplate.prototype.isDefined = function (value) {\n    return value !== undefined && value !== null;\n  };\n\n  /**\n   * @private\n   * @param {string}\n   * @return {boolean}\n   */\n  UrlTemplate.prototype.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n  };\n\n  /**\n   * @private\n   * @param {Object} context\n   * @param {string} operator\n   * @param {string} key\n   * @param {string} modifier\n   */\n  UrlTemplate.prototype.getValues = function (context, operator, key, modifier) {\n    var value = context[key],\n        result = [];\n\n    if (this.isDefined(value) && value !== '') {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        value = value.toString();\n\n        if (modifier && modifier !== '*') {\n          value = value.substring(0, parseInt(modifier, 10));\n        }\n\n        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n      } else {\n        if (modifier === '*') {\n          if (Array.isArray(value)) {\n            value.filter(this.isDefined).forEach(function (value) {\n              result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n            }, this);\n          } else {\n            Object.keys(value).forEach(function (k) {\n              if (this.isDefined(value[k])) {\n                result.push(this.encodeValue(operator, value[k], k));\n              }\n            }, this);\n          }\n        } else {\n          var tmp = [];\n\n          if (Array.isArray(value)) {\n            value.filter(this.isDefined).forEach(function (value) {\n              tmp.push(this.encodeValue(operator, value));\n            }, this);\n          } else {\n            Object.keys(value).forEach(function (k) {\n              if (this.isDefined(value[k])) {\n                tmp.push(this.encodeUnreserved(k));\n                tmp.push(this.encodeValue(operator, value[k].toString()));\n              }\n            }, this);\n          }\n\n          if (this.isKeyOperator(operator)) {\n            result.push(this.encodeUnreserved(key) + '=' + tmp.join(','));\n          } else if (tmp.length !== 0) {\n            result.push(tmp.join(','));\n          }\n        }\n      }\n    } else {\n      if (operator === ';') {\n        if (this.isDefined(value)) {\n          result.push(this.encodeUnreserved(key));\n        }\n      } else if (value === '' && (operator === '&' || operator === '?')) {\n        result.push(this.encodeUnreserved(key) + '=');\n      } else if (value === '') {\n        result.push('');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} template\n   * @return {function(Object):string}\n   */\n  UrlTemplate.prototype.parse = function (template) {\n    var that = this;\n    var operators = ['+', '#', '.', '/', ';', '?', '&'];\n\n    return {\n      expand: function (context) {\n        return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n          if (expression) {\n            var operator = null,\n                values = [];\n\n            if (operators.indexOf(expression.charAt(0)) !== -1) {\n              operator = expression.charAt(0);\n              expression = expression.substr(1);\n            }\n\n            expression.split(/,/g).forEach(function (variable) {\n              var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n              values.push.apply(values, that.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n            });\n\n            if (operator && operator !== '+') {\n              var separator = ',';\n\n              if (operator === '?') {\n                separator = '&';\n              } else if (operator !== '#') {\n                separator = operator;\n              }\n              return (values.length !== 0 ? operator : '') + values.join(separator);\n            } else {\n              return values.join(',');\n            }\n          } else {\n            return that.encodeReserved(literal);\n          }\n        });\n      }\n    };\n  };\n\n  return new UrlTemplate();\n}));\n", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBrowser = void 0;\nfunction isBrowser() {\n    return typeof window !== 'undefined';\n}\nexports.isBrowser = isBrowser;\n//# sourceMappingURL=isbrowser.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.closeSession = exports.request = exports.sessions = void 0;\nconst http2 = require(\"http2\");\nconst zlib = require(\"zlib\");\nconst url_1 = require(\"url\");\nconst qs = require(\"qs\");\nconst extend = require(\"extend\");\nconst stream_1 = require(\"stream\");\nconst util = require(\"util\");\nconst process = require(\"process\");\nconst common_1 = require(\"gaxios/build/src/common\");\nconst { HTTP2_HEADER_CONTENT_ENCODING, HTTP2_HEADER_CONTENT_TYPE, HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_STATUS, } = http2.constants;\nconst DEBUG = !!process.env.HTTP2_DEBUG;\n/**\n * List of sessions current in use.\n * @private\n */\nexports.sessions = {};\n/**\n * Public method to make an http2 request.\n * @param config - Request options.\n */\nasync function request(config) {\n    const opts = extend(true, {}, config);\n    opts.validateStatus = opts.validateStatus || validateStatus;\n    opts.responseType = opts.responseType || 'json';\n    const url = new url_1.URL(opts.url);\n    // Check for an existing session to this host, or go create a new one.\n    const sessionData = _getClient(url.host);\n    // Since we're using this session, clear the timeout handle to ensure\n    // it stays in memory and connected for a while further.\n    if (sessionData.timeoutHandle !== undefined) {\n        clearTimeout(sessionData.timeoutHandle);\n    }\n    // Assemble the querystring based on config.params.  We're using the\n    // `qs` module to make life a little easier.\n    let pathWithQs = url.pathname;\n    if (config.params && Object.keys(config.params).length > 0) {\n        const q = qs.stringify(opts.params);\n        pathWithQs += `?${q}`;\n    }\n    // Assemble the headers based on basic HTTP2 primitives (path, method) and\n    // custom headers sent from the consumer.  Note: I am using `Object.assign`\n    // here making the assumption these objects are not deep.  If it turns out\n    // they are, we may need to use the `extend` npm module for deep cloning.\n    const headers = Object.assign({}, opts.headers, {\n        [HTTP2_HEADER_PATH]: pathWithQs,\n        [HTTP2_HEADER_METHOD]: config.method || 'GET',\n    });\n    // NOTE: This is working around an upstream bug in `apirequest.ts`. The\n    // request path assumes that the `content-type` header is going to be set in\n    // the underlying HTTP Client. This hack provides bug for bug compatability\n    // with this bug in gaxios:\n    // https://github.com/googleapis/gaxios/blob/main/src/gaxios.ts#L202\n    if (!headers[HTTP2_HEADER_CONTENT_TYPE]) {\n        if (opts.responseType !== 'text') {\n            headers[HTTP2_HEADER_CONTENT_TYPE] = 'application/json';\n        }\n    }\n    const res = {\n        config,\n        request: {},\n        headers: [],\n        status: 0,\n        data: {},\n        statusText: '',\n    };\n    const chunks = [];\n    const session = sessionData.session;\n    let req;\n    return new Promise((resolve, reject) => {\n        try {\n            req = session\n                .request(headers)\n                .on('response', headers => {\n                res.headers = headers;\n                res.status = Number(headers[HTTP2_HEADER_STATUS]);\n                let stream = req;\n                if (headers[HTTP2_HEADER_CONTENT_ENCODING] === 'gzip') {\n                    stream = req.pipe(zlib.createGunzip());\n                }\n                if (opts.responseType === 'stream') {\n                    res.data = stream;\n                    resolve(res);\n                    return;\n                }\n                stream\n                    .on('data', d => {\n                    chunks.push(d);\n                })\n                    .on('error', err => {\n                    reject(err);\n                    return;\n                })\n                    .on('end', () => {\n                    const buf = Buffer.concat(chunks);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    let data = buf;\n                    if (buf) {\n                        if (opts.responseType === 'json') {\n                            try {\n                                data = JSON.parse(buf.toString('utf8'));\n                            }\n                            catch (_a) {\n                                data = buf.toString('utf8');\n                            }\n                        }\n                        else if (opts.responseType === 'text') {\n                            data = buf.toString('utf8');\n                        }\n                        else if (opts.responseType === 'arraybuffer') {\n                            data = buf.buffer;\n                        }\n                        res.data = data;\n                    }\n                    if (!opts.validateStatus(res.status)) {\n                        let message = `Request failed with status code ${res.status}. `;\n                        if (res.data && typeof res.data === 'object') {\n                            const body = util.inspect(res.data, { depth: 5 });\n                            message = `${message}\\n'${body}`;\n                        }\n                        reject(new common_1.GaxiosError(message, opts, res));\n                    }\n                    resolve(res);\n                    return;\n                });\n            })\n                .on('error', e => {\n                reject(e);\n                return;\n            });\n        }\n        catch (e) {\n            closeSession(url);\n            reject(e);\n        }\n        res.request = req;\n        // If data was provided, write it to the request in the form of\n        // a stream, string data, or a basic object.\n        if (config.data) {\n            if (config.data instanceof stream_1.Stream) {\n                config.data.pipe(req);\n            }\n            else if (typeof config.data === 'string') {\n                const data = Buffer.from(config.data);\n                req.end(data);\n            }\n            else if (typeof config.data === 'object') {\n                const data = JSON.stringify(config.data);\n                req.end(data);\n            }\n        }\n        // Create a timeout so the Http2Session will be cleaned up after\n        // a period of non-use. 500 milliseconds was chosen because it's\n        // a nice round number, and I don't know what would be a better\n        // choice. Keeping this channel open will hold a file descriptor\n        // which will prevent the process from exiting.\n        sessionData.timeoutHandle = setTimeout(() => {\n            closeSession(url);\n        }, 500);\n    });\n}\nexports.request = request;\n/**\n * By default, throw for any non-2xx status code\n * @param status - status code from the HTTP response\n */\nfunction validateStatus(status) {\n    return status >= 200 && status < 300;\n}\n/**\n * Obtain an existing h2 session or go create a new one.\n * @param host - The hostname to which the session belongs.\n */\nfunction _getClient(host) {\n    if (!exports.sessions[host]) {\n        if (DEBUG) {\n            console.log(`Creating client for ${host}`);\n        }\n        const session = http2.connect(`https://${host}`);\n        session\n            .on('error', e => {\n            console.error(`*ERROR*: ${e}`);\n            delete exports.sessions[host];\n        })\n            .on('goaway', (errorCode, lastStreamId) => {\n            console.error(`*GOAWAY*: ${errorCode} : ${lastStreamId}`);\n            delete exports.sessions[host];\n        });\n        exports.sessions[host] = { session };\n    }\n    else {\n        if (DEBUG) {\n            console.log(`Used cached client for ${host}`);\n        }\n    }\n    return exports.sessions[host];\n}\nasync function closeSession(url) {\n    const sessionData = exports.sessions[url.host];\n    if (!sessionData) {\n        return;\n    }\n    const { session } = sessionData;\n    delete exports.sessions[url.host];\n    if (DEBUG) {\n        console.error(`Closing ${url.host}`);\n    }\n    session.close(() => {\n        if (DEBUG) {\n            console.error(`Closed ${url.host}`);\n        }\n    });\n    setTimeout(() => {\n        if (session && !session.destroyed) {\n            if (DEBUG) {\n                console.log(`Forcing close ${url.host}`);\n            }\n            if (session) {\n                session.destroy();\n            }\n        }\n    }, 1000);\n}\nexports.closeSession = closeSession;\n//# sourceMappingURL=http2.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAPIRequest = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst qs = require(\"qs\");\nconst stream = require(\"stream\");\nconst urlTemplate = require(\"url-template\");\nconst uuid = require(\"uuid\");\nconst extend = require(\"extend\");\nconst isbrowser_1 = require(\"./isbrowser\");\nconst h2 = require(\"./http2\");\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst pkg = require('../../package.json');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isReadableStream(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        typeof obj.pipe === 'function' &&\n        obj.readable !== false &&\n        typeof obj._read === 'function' &&\n        typeof obj._readableState === 'object');\n}\nfunction getMissingParams(params, required) {\n    const missing = new Array();\n    required.forEach(param => {\n        // Is the required param in the params object?\n        if (params[param] === undefined) {\n            missing.push(param);\n        }\n    });\n    // If there are any required params missing, return their names in array,\n    // otherwise return null\n    return missing.length > 0 ? missing : null;\n}\nfunction createAPIRequest(parameters, callback) {\n    if (callback) {\n        createAPIRequestAsync(parameters).then(r => callback(null, r), callback);\n    }\n    else {\n        return createAPIRequestAsync(parameters);\n    }\n}\nexports.createAPIRequest = createAPIRequest;\nasync function createAPIRequestAsync(parameters) {\n    var _a;\n    // Combine the GaxiosOptions options passed with this specific\n    // API call with the global options configured at the API Context\n    // level, or at the global level.\n    const options = extend(true, {}, // Ensure we don't leak settings upstream\n    ((_a = parameters.context.google) === null || _a === void 0 ? void 0 : _a._options) || {}, // Google level options\n    parameters.context._options || {}, // Per-API options\n    parameters.options // API call params\n    );\n    const params = extend(true, {}, // New base object\n    options.params, // Combined global/per-api params\n    parameters.params // API call params\n    );\n    options.userAgentDirectives = options.userAgentDirectives || [];\n    const media = params.media || {};\n    /**\n     * In a previous version of this API, the request body was stuffed in a field\n     * named `resource`.  This caused lots of problems, because it's not uncommon\n     * to have an actual named parameter required which is also named `resource`.\n     * This meant that users would have to use `resource_` in those cases, which\n     * pretty much nobody figures out on their own. The request body is now\n     * documented as being in the `requestBody` property, but we also need to keep\n     * using `resource` for reasons of back-compat. Cases that need to be covered\n     * here:\n     * - user provides just a `resource` with a request body\n     * - user provides both a `resource` and a `resource_`\n     * - user provides just a `requestBody`\n     * - user provides both a `requestBody` and a `resource`\n     */\n    let resource = params.requestBody;\n    if (!params.requestBody &&\n        params.resource &&\n        (!parameters.requiredParams.includes('resource') ||\n            typeof params.resource !== 'string')) {\n        resource = params.resource;\n        delete params.resource;\n    }\n    delete params.requestBody;\n    let authClient = params.auth || options.auth;\n    const defaultMime = typeof media.body === 'string' ? 'text/plain' : 'application/octet-stream';\n    delete params.media;\n    delete params.auth;\n    // Grab headers from user provided options\n    const headers = params.headers || {};\n    populateAPIHeader(headers);\n    delete params.headers;\n    // Un-alias parameters that were modified due to conflicts with reserved names\n    Object.keys(params).forEach(key => {\n        if (key.slice(-1) === '_') {\n            const newKey = key.slice(0, -1);\n            params[newKey] = params[key];\n            delete params[key];\n        }\n    });\n    // Check for missing required parameters in the API request\n    const missingParams = getMissingParams(params, parameters.requiredParams);\n    if (missingParams) {\n        // Some params are missing - stop further operations and inform the\n        // developer which required params are not included in the request\n        throw new Error('Missing required parameters: ' + missingParams.join(', '));\n    }\n    // Parse urls\n    if (options.url) {\n        options.url = urlTemplate.parse(options.url).expand(params);\n    }\n    if (parameters.mediaUrl) {\n        parameters.mediaUrl = urlTemplate.parse(parameters.mediaUrl).expand(params);\n    }\n    // Rewrite url if rootUrl is globally set\n    if (parameters.context._options.rootUrl !== undefined &&\n        options.url !== undefined) {\n        const originalUrl = new URL(options.url);\n        const path = originalUrl.href.substr(originalUrl.origin.length);\n        options.url = new URL(path, parameters.context._options.rootUrl).href;\n    }\n    // When forming the querystring, override the serializer so that array\n    // values are serialized like this:\n    // myParams: ['one', 'two'] ---> 'myParams=one&myParams=two'\n    // This serializer also encodes spaces in the querystring as `%20`,\n    // whereas the default serializer in gaxios encodes to a `+`.\n    options.paramsSerializer = params => {\n        return qs.stringify(params, { arrayFormat: 'repeat' });\n    };\n    // delete path params from the params object so they do not end up in query\n    parameters.pathParams.forEach(param => delete params[param]);\n    // if authClient is actually a string, use it as an API KEY\n    if (typeof authClient === 'string') {\n        params.key = params.key || authClient;\n        authClient = undefined;\n    }\n    function multipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        const rStream = new stream.PassThrough({\n            flush(callback) {\n                this.push('\\r\\n');\n                this.push(finale);\n                callback();\n            },\n        });\n        const pStream = new ProgressStream();\n        const isStream = isReadableStream(multipart[1].body);\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            rStream.push(preamble);\n            if (typeof part.body === 'string') {\n                rStream.push(part.body);\n                rStream.push('\\r\\n');\n            }\n            else {\n                // Gaxios does not natively support onUploadProgress in node.js.\n                // Pipe through the pStream first to read the number of bytes read\n                // for the purpose of tracking progress.\n                pStream.on('progress', bytesRead => {\n                    if (options.onUploadProgress) {\n                        options.onUploadProgress({ bytesRead });\n                    }\n                });\n                part.body.pipe(pStream).pipe(rStream);\n            }\n        }\n        if (!isStream) {\n            rStream.push(finale);\n            rStream.push(null);\n        }\n        options.data = rStream;\n    }\n    function browserMultipartUpload(multipart) {\n        const boundary = uuid.v4();\n        const finale = `--${boundary}--`;\n        headers['content-type'] = `multipart/related; boundary=${boundary}`;\n        let content = '';\n        for (const part of multipart) {\n            const preamble = `--${boundary}\\r\\ncontent-type: ${part['content-type']}\\r\\n\\r\\n`;\n            content += preamble;\n            if (typeof part.body === 'string') {\n                content += part.body;\n                content += '\\r\\n';\n            }\n        }\n        content += finale;\n        options.data = content;\n    }\n    if (parameters.mediaUrl && media.body) {\n        options.url = parameters.mediaUrl;\n        if (resource) {\n            params.uploadType = 'multipart';\n            const multipart = [\n                { 'content-type': 'application/json', body: JSON.stringify(resource) },\n                {\n                    'content-type': media.mimeType || (resource && resource.mimeType) || defaultMime,\n                    body: media.body,\n                },\n            ];\n            if (!isbrowser_1.isBrowser()) {\n                // gaxios doesn't support multipart/related uploads, so it has to\n                // be implemented here.\n                multipartUpload(multipart);\n            }\n            else {\n                browserMultipartUpload(multipart);\n            }\n        }\n        else {\n            params.uploadType = 'media';\n            Object.assign(headers, { 'content-type': media.mimeType || defaultMime });\n            options.data = media.body;\n        }\n    }\n    else {\n        options.data = resource || undefined;\n    }\n    options.headers = extend(true, options.headers || {}, headers);\n    options.params = params;\n    if (!isbrowser_1.isBrowser()) {\n        options.headers['Accept-Encoding'] = 'gzip';\n        options.userAgentDirectives.push({\n            product: 'google-api-nodejs-client',\n            version: pkg.version,\n            comment: 'gzip',\n        });\n        const userAgent = options.userAgentDirectives\n            .map(d => {\n            let line = `${d.product}/${d.version}`;\n            if (d.comment) {\n                line += ` (${d.comment})`;\n            }\n            return line;\n        })\n            .join(' ');\n        options.headers['User-Agent'] = userAgent;\n    }\n    // By default gaxios treats any 2xx as valid, and all non 2xx status\n    // codes as errors.  This is a problem for HTTP 304s when used along\n    // with an eTag.\n    if (!options.validateStatus) {\n        options.validateStatus = status => {\n            return (status >= 200 && status < 300) || status === 304;\n        };\n    }\n    // Retry by default\n    options.retry = options.retry === undefined ? true : options.retry;\n    delete options.auth; // is overridden by our auth code\n    // Perform the HTTP request.  NOTE: this function used to return a\n    // mikeal/request object. Since the transition to Axios, the method is\n    // now void.  This may be a source of confusion for users upgrading from\n    // version 24.0 -> 25.0 or up.\n    if (authClient && typeof authClient === 'object') {\n        if (options.http2) {\n            const authHeaders = await authClient.getRequestHeaders(options.url);\n            const mooOpts = Object.assign({}, options);\n            mooOpts.headers = Object.assign(mooOpts.headers, authHeaders);\n            return h2.request(mooOpts);\n        }\n        else {\n            return authClient.request(options);\n        }\n    }\n    else {\n        return new google_auth_library_1.DefaultTransporter().request(options);\n    }\n}\n/**\n * Basic Passthrough Stream that records the number of bytes read\n * every time the cursor is moved.\n */\nclass ProgressStream extends stream.Transform {\n    constructor() {\n        super(...arguments);\n        this.bytesRead = 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _transform(chunk, encoding, callback) {\n        this.bytesRead += chunk.length;\n        this.emit('progress', this.bytesRead);\n        this.push(chunk);\n        callback();\n    }\n}\nfunction populateAPIHeader(headers) {\n    // TODO: we should eventually think about adding browser support for this\n    // populating the gl-web header (web support should also be added to\n    // google-auth-library-nodejs).\n    if (!isbrowser_1.isBrowser()) {\n        headers['x-goog-api-client'] = `gdcl/${pkg.version} gl-node/${process.versions.node}`;\n    }\n}\n//# sourceMappingURL=apirequest.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthPlus = void 0;\nconst google_auth_library_1 = require(\"google-auth-library\");\nclass AuthPlus extends google_auth_library_1.GoogleAuth {\n    constructor() {\n        super(...arguments);\n        this.JWT = google_auth_library_1.JWT;\n        this.Compute = google_auth_library_1.Compute;\n        this.OAuth2 = google_auth_library_1.OAuth2Client;\n        this.GoogleAuth = google_auth_library_1.GoogleAuth;\n        this.AwsClient = google_auth_library_1.AwsClient;\n        this.IdentityPoolClient = google_auth_library_1.IdentityPoolClient;\n        this.ExternalAccountClient = google_auth_library_1.ExternalAccountClient;\n    }\n    /**\n     * Override getClient(), memoizing an instance of auth for\n     * subsequent calls to getProjectId().\n     */\n    async getClient(options) {\n        this._cachedAuth = new google_auth_library_1.GoogleAuth(options);\n        return this._cachedAuth.getClient();\n    }\n    getProjectId(callback) {\n        if (callback) {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId(callback)\n                : super.getProjectId(callback);\n        }\n        else {\n            return this._cachedAuth\n                ? this._cachedAuth.getProjectId()\n                : super.getProjectId();\n        }\n    }\n}\nexports.AuthPlus = AuthPlus;\n//# sourceMappingURL=authplus.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nconst apirequest_1 = require(\"./apirequest\");\nclass Endpoint {\n    constructor(options) {\n        this._options = options || {};\n    }\n    /**\n     * Given a schema, add methods and resources to a target.\n     *\n     * @param {object} target The target to which to apply the schema.\n     * @param {object} rootSchema The top-level schema, so we don't lose track of it\n     * during recursion.\n     * @param {object} schema The current schema from which to extract methods and\n     * resources.\n     * @param {object} context The context to add to each method.\n     */\n    applySchema(target, rootSchema, schema, context) {\n        this.applyMethodsFromSchema(target, rootSchema, schema, context);\n        if (schema.resources) {\n            for (const resourceName in schema.resources) {\n                if (Object.prototype.hasOwnProperty.call(schema.resources, resourceName)) {\n                    const resource = schema.resources[resourceName];\n                    if (!target[resourceName]) {\n                        target[resourceName] = {};\n                    }\n                    this.applySchema(target[resourceName], rootSchema, resource, context);\n                }\n            }\n        }\n    }\n    /**\n     * Given a schema, add methods to a target.\n     *\n     * @param {object} target The target to which to apply the methods.\n     * @param {object} rootSchema The top-level schema, so we don't lose track of it\n     * during recursion.\n     * @param {object} schema The current schema from which to extract methods.\n     * @param {object} context The context to add to each method.\n     */\n    applyMethodsFromSchema(target, rootSchema, schema, context) {\n        if (schema.methods) {\n            for (const name in schema.methods) {\n                if (Object.prototype.hasOwnProperty.call(schema.methods, name)) {\n                    const method = schema.methods[name];\n                    target[name] = this.makeMethod(rootSchema, method, context);\n                }\n            }\n        }\n    }\n    /**\n     * Given a method schema, add a method to a target.\n     *\n     * @param target The target to which to add the method.\n     * @param schema The top-level schema that contains the rootUrl, etc.\n     * @param method The method schema from which to generate the method.\n     * @param context The context to add to the method.\n     */\n    makeMethod(schema, method, context) {\n        return (paramsOrCallback, callback) => {\n            const params = typeof paramsOrCallback === 'function' ? {} : paramsOrCallback;\n            callback =\n                typeof paramsOrCallback === 'function'\n                    ? paramsOrCallback\n                    : callback;\n            const schemaUrl = buildurl(schema.rootUrl + schema.servicePath + method.path);\n            const parameters = {\n                options: {\n                    url: schemaUrl.substring(1, schemaUrl.length - 1),\n                    method: method.httpMethod,\n                },\n                params,\n                requiredParams: method.parameterOrder || [],\n                pathParams: this.getPathParams(method.parameters),\n                context,\n            };\n            if (method.mediaUpload &&\n                method.mediaUpload.protocols &&\n                method.mediaUpload.protocols.simple &&\n                method.mediaUpload.protocols.simple.path) {\n                const mediaUrl = buildurl(schema.rootUrl + method.mediaUpload.protocols.simple.path);\n                parameters.mediaUrl = mediaUrl.substring(1, mediaUrl.length - 1);\n            }\n            if (!callback) {\n                return apirequest_1.createAPIRequest(parameters);\n            }\n            apirequest_1.createAPIRequest(parameters, callback);\n            return;\n        };\n    }\n    getPathParams(params) {\n        const pathParams = new Array();\n        if (typeof params !== 'object') {\n            params = {};\n        }\n        Object.keys(params).forEach(key => {\n            if (params[key].location === 'path') {\n                pathParams.push(key);\n            }\n        });\n        return pathParams;\n    }\n}\nexports.Endpoint = Endpoint;\n/**\n * Build a string used to create a URL from the discovery doc provided URL.\n * replace double slashes with single slash (except in https://)\n * @private\n * @param  input URL to build from\n * @return Resulting built URL\n */\nfunction buildurl(input) {\n    return input ? `'${input}'`.replace(/([^:]\\/)\\/+/g, '$1') : '';\n}\n//# sourceMappingURL=endpoint.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Discovery = void 0;\nconst fs = require(\"fs\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst resolve = require(\"url\");\nconst util = require(\"util\");\nconst apirequest_1 = require(\"./apirequest\");\nconst endpoint_1 = require(\"./endpoint\");\nconst readFile = util.promisify(fs.readFile);\nclass Discovery {\n    /**\n     * Discovery for discovering API endpoints\n     *\n     * @param options Options for discovery\n     */\n    constructor(options) {\n        this.transporter = new google_auth_library_1.DefaultTransporter();\n        this.options = options || {};\n    }\n    /**\n     * Generate and Endpoint from an endpoint schema object.\n     *\n     * @param schema The schema from which to generate the Endpoint.\n     * @return A function that creates an endpoint.\n     */\n    makeEndpoint(schema) {\n        return (options) => {\n            const ep = new endpoint_1.Endpoint(options);\n            ep.applySchema(ep, schema, schema, ep);\n            return ep;\n        };\n    }\n    /**\n     * Log output of generator. Works just like console.log\n     */\n    log(...args) {\n        if (this.options && this.options.debug) {\n            console.log(...args);\n        }\n    }\n    /**\n     * Generate all APIs and return as in-memory object.\n     * @param discoveryUrl\n     */\n    async discoverAllAPIs(discoveryUrl) {\n        const headers = this.options.includePrivate\n            ? {}\n            : { 'X-User-Ip': '0.0.0.0' };\n        const res = await this.transporter.request({\n            url: discoveryUrl,\n            headers,\n        });\n        const items = res.data.items;\n        const apis = await Promise.all(items.map(async (api) => {\n            const endpointCreator = await this.discoverAPI(api.discoveryRestUrl);\n            return { api, endpointCreator };\n        }));\n        const versionIndex = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const apisIndex = {};\n        for (const set of apis) {\n            if (!apisIndex[set.api.name]) {\n                versionIndex[set.api.name] = {};\n                apisIndex[set.api.name] = (options) => {\n                    const type = typeof options;\n                    let version;\n                    if (type === 'string') {\n                        version = options;\n                        options = {};\n                    }\n                    else if (type === 'object') {\n                        version = options.version;\n                        delete options.version;\n                    }\n                    else {\n                        throw new Error('Argument error: Accepts only string or object');\n                    }\n                    try {\n                        const ep = set.endpointCreator(options, this);\n                        return Object.freeze(ep); // create new & freeze\n                    }\n                    catch (e) {\n                        throw new Error(util.format('Unable to load endpoint %s(\"%s\"): %s', set.api.name, version, e.message));\n                    }\n                };\n            }\n            versionIndex[set.api.name][set.api.version] = set.endpointCreator;\n        }\n        return apisIndex;\n    }\n    /**\n     * Generate API file given discovery URL\n     *\n     * @param apiDiscoveryUrl URL or filename of discovery doc for API\n     * @returns A promise that resolves with a function that creates the endpoint\n     */\n    async discoverAPI(apiDiscoveryUrl) {\n        if (typeof apiDiscoveryUrl === 'string') {\n            const parts = resolve.parse(apiDiscoveryUrl);\n            if (apiDiscoveryUrl && !parts.protocol) {\n                this.log('Reading from file ' + apiDiscoveryUrl);\n                const file = await readFile(apiDiscoveryUrl, { encoding: 'utf8' });\n                return this.makeEndpoint(JSON.parse(file));\n            }\n            else {\n                this.log('Requesting ' + apiDiscoveryUrl);\n                const res = await this.transporter.request({\n                    url: apiDiscoveryUrl,\n                });\n                return this.makeEndpoint(res.data);\n            }\n        }\n        else {\n            const options = apiDiscoveryUrl;\n            this.log('Requesting ' + options.url);\n            const url = options.url;\n            delete options.url;\n            const parameters = {\n                options: { url, method: 'GET' },\n                requiredParams: [],\n                pathParams: [],\n                params: options,\n                context: { google: { _options: {} }, _options: {} },\n            };\n            const res = await apirequest_1.createAPIRequest(parameters);\n            return this.makeEndpoint(res.data);\n        }\n    }\n}\nexports.Discovery = Discovery;\n//# sourceMappingURL=discovery.js.map", "\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar google_auth_library_1 = require(\"google-auth-library\");\nObject.defineProperty(exports, \"OAuth2Client\", { enumerable: true, get: function () { return google_auth_library_1.OAuth2Client; } });\nObject.defineProperty(exports, \"JWT\", { enumerable: true, get: function () { return google_auth_library_1.JWT; } });\nObject.defineProperty(exports, \"Compute\", { enumerable: true, get: function () { return google_auth_library_1.Compute; } });\nObject.defineProperty(exports, \"UserRefreshClient\", { enumerable: true, get: function () { return google_auth_library_1.UserRefreshClient; } });\nObject.defineProperty(exports, \"DefaultTransporter\", { enumerable: true, get: function () { return google_auth_library_1.DefaultTransporter; } });\nObject.defineProperty(exports, \"GoogleAuth\", { enumerable: true, get: function () { return google_auth_library_1.GoogleAuth; } });\nObject.defineProperty(exports, \"ExternalAccountClient\", { enumerable: true, get: function () { return google_auth_library_1.ExternalAccountClient; } });\nObject.defineProperty(exports, \"BaseExternalAccountClient\", { enumerable: true, get: function () { return google_auth_library_1.BaseExternalAccountClient; } });\nObject.defineProperty(exports, \"IdentityPoolClient\", { enumerable: true, get: function () { return google_auth_library_1.IdentityPoolClient; } });\nObject.defineProperty(exports, \"AwsClient\", { enumerable: true, get: function () { return google_auth_library_1.AwsClient; } });\nvar gaxios_1 = require(\"gaxios\");\nObject.defineProperty(exports, \"Gaxios\", { enumerable: true, get: function () { return gaxios_1.Gaxios; } });\nObject.defineProperty(exports, \"GaxiosError\", { enumerable: true, get: function () { return gaxios_1.GaxiosError; } });\nvar apiIndex_1 = require(\"./apiIndex\");\nObject.defineProperty(exports, \"getAPI\", { enumerable: true, get: function () { return apiIndex_1.getAPI; } });\nvar apirequest_1 = require(\"./apirequest\");\nObject.defineProperty(exports, \"createAPIRequest\", { enumerable: true, get: function () { return apirequest_1.createAPIRequest; } });\nvar authplus_1 = require(\"./authplus\");\nObject.defineProperty(exports, \"AuthPlus\", { enumerable: true, get: function () { return authplus_1.AuthPlus; } });\nvar discovery_1 = require(\"./discovery\");\nObject.defineProperty(exports, \"Discovery\", { enumerable: true, get: function () { return discovery_1.Discovery; } });\nvar endpoint_1 = require(\"./endpoint\");\nObject.defineProperty(exports, \"Endpoint\", { enumerable: true, get: function () { return endpoint_1.Endpoint; } });\n//# sourceMappingURL=index.js.map", null, null, "exports.convertDuration = (duration) => {\r\n  if (typeof duration !== 'string') {\r\n    return null;\r\n  }\r\n\r\n  const numberRegExp = '\\\\d+(?:[\\.,]\\\\d+)?';\r\n  const durationRegExpS = `(?:(${numberRegExp})S)?)?`;\r\n  const durationRegExpTM = `(?:(${numberRegExp})M)?`;\r\n  const durationRegExpH = `(?:T(?:(${numberRegExp})H)?`;\r\n  const durationRegExpD = `(?:(${numberRegExp})D)?`;\r\n  const durationRegExpM = `(?:(${numberRegExp})M)?`;\r\n  const durationRegExpY = `(?:(${numberRegExp})Y)?`;\r\n  const durationRegExp = new RegExp(`^P${durationRegExpY}${durationRegExpM}${durationRegExpD}${durationRegExpH}${durationRegExpTM}${durationRegExpS}$`);\r\n\r\n  const matchResult = duration.match(durationRegExp);\r\n\r\n  if (matchResult === null) {\r\n    return null;\r\n  }\r\n\r\n  let durationResult = {\r\n    year: undefined,\r\n    month: undefined,\r\n    day: undefined,\r\n    hour: undefined,\r\n    minute: undefined,\r\n    second: undefined,\r\n  };\r\n\r\n  for (let matchResultIndex = 0; matchResultIndex < matchResult.length; matchResultIndex++) {\r\n    let value = matchResult[matchResultIndex];\r\n\r\n    if (value !== undefined) {\r\n      value = Number(matchResult[matchResultIndex].replace(',', '.'));\r\n    }\r\n\r\n    switch (matchResultIndex) {\r\n      case 1:\r\n        durationResult.year = value;\r\n        break;\r\n      case 2:\r\n        durationResult.month = value;\r\n        break;\r\n      case 3:\r\n        durationResult.day = value;\r\n        break;\r\n      case 4:\r\n        durationResult.hour = value;\r\n        break;\r\n      case 5:\r\n        durationResult.minute = value;\r\n        break;\r\n      case 6:\r\n        durationResult.second = value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  let isAllUndefined = true;\r\n\r\n  Object.keys(durationResult).forEach((key) => {\r\n    if (durationResult[key] !== undefined) {\r\n      isAllUndefined = false;\r\n    }\r\n  });\r\n\r\n  if (isAllUndefined) {\r\n    return null;\r\n  }\r\n\r\n  return durationResult;\r\n};\r\n\r\nexports.convertToSecond = (duration) => {\r\n  const durationResult = exports.convertDuration(duration);\r\n\r\n  if (durationResult === null) {\r\n    return null;\r\n  }\r\n\r\n  let second = 0;\r\n\r\n  Object.keys(durationResult).forEach((key) => {\r\n    if (durationResult[key] !== undefined) {\r\n      switch (key) {\r\n        case 'year':\r\n          second += durationResult[key] * 365 * 24 * 60 * 60;\r\n          break;\r\n        case 'month':\r\n          second += durationResult[key] * 30 * 24 * 60 * 60;\r\n          break;\r\n        case 'day':\r\n          second += durationResult[key] * 24 * 60 * 60;\r\n          break;\r\n        case 'hour':\r\n          second += durationResult[key] * 60 * 60;\r\n          break;\r\n        case 'minute':\r\n          second += durationResult[key] * 60;\r\n          break;\r\n        case 'second':\r\n          second += durationResult[key];\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  });\r\n\r\n  return second;\r\n};\r\n\r\nexports.convertYouTubeDuration = (duration) => {\r\n  const durationResult = exports.convertDuration(duration);\r\n\r\n  if (durationResult === null) {\r\n    return null;\r\n  }\r\n\r\n  let hour = 0;\r\n  let minute = 0;\r\n  let second = 0;\r\n\r\n  if (durationResult.year !== undefined) {\r\n    hour += durationResult.year * 365 * 24;\r\n  }\r\n\r\n  if (durationResult.month !== undefined) {\r\n    hour += durationResult.month * 30 * 24;\r\n  }\r\n\r\n  if (durationResult.day !== undefined) {\r\n    hour += durationResult.day * 24;\r\n  }\r\n\r\n  if (durationResult.hour !== undefined) {\r\n    hour += durationResult.hour;\r\n  }\r\n\r\n  if (durationResult.minute !== undefined) {\r\n    minute += durationResult.minute;\r\n  }\r\n\r\n  if (durationResult.second !== undefined) {\r\n    second += durationResult.second;\r\n  }\r\n\r\n  minute += (hour - Math.floor(hour)) * 60;\r\n  hour = Math.floor(hour);\r\n\r\n  while (minute >= 60) {\r\n    hour += 1;\r\n    minute -= 60;\r\n  }\r\n\r\n  second += (minute - Math.floor(minute)) * 60;\r\n  minute = Math.floor(minute);\r\n\r\n  while (second >= 60) {\r\n    minute += 1;\r\n    second -= 60;\r\n  }\r\n\r\n  while (minute >= 60) {\r\n    hour += 1;\r\n    minute -= 60;\r\n  }\r\n\r\n  second = Math.round(second);\r\n\r\n  let hms = '';\r\n\r\n  if (hour !== 0) {\r\n    hms += `${hour.toString()}:`;\r\n  }\r\n\r\n  if (minute < 10 && hour !== 0) {\r\n    hms += `0${minute.toString()}:`;\r\n  } else {\r\n    hms += `${minute.toString()}:`;\r\n  }\r\n\r\n  if (second < 10) {\r\n    hms += `0${second.toString()}`;\r\n  } else {\r\n    hms += second.toString();\r\n  }\r\n\r\n  return hms;\r\n};\r\n", "/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it\u2019s part of a tag or an\n\t\t// unquoted attribute value. We\u2019re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer \u2264 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// \u201COtherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.\u201D\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(codePoint) {\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t};\n\n\tvar decEscape = function(codePoint) {\n\t\treturn '&#' + codePoint + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n\t\tvar escapeBmpSymbol = function(symbol) {\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n\t\t};\n\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn escapeBmpSymbol(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they\u2019re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn escapeCodePoint(codePoint);\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false,\n\t\t'decimal' : false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar decDigits;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\n\t\t\tif ($1) {\n\t\t\t\treference = $1;\n\t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n\t\t\t\treturn decodeMap[reference];\n\t\t\t}\n\n\t\t\tif ($2) {\n\t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n\t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t\t// followed by `=` in an attribute context.\n\t\t\t\treference = $2;\n\t\t\t\tnext = $3;\n\t\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t} else {\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($4) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tdecDigits = $4;\n\t\t\t\tsemicolon = $5;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\tif ($6) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $6;\n\t\t\t\tsemicolon = $7;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\n\t\t\t// If we\u2019re still here, `if ($7)` is implied; it\u2019s an ambiguous\n\t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n\t\t\tif (strict) {\n\t\t\t\tparseError(\n\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn $0;\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '1.2.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n", "import { LaunchProps } from \"@raycast/api\";\nimport { SearchChannelList } from \"./components/channel_search\";\n\nexport default function SearchChannel(props: LaunchProps<{ arguments: { query?: string } }>): JSX.Element {\n  return <SearchChannelList searchQuery={props.arguments.query} />;\n}\n", "import { Action, ActionPanel, Icon, Color, getPreferenceValues, showToast, Toast } from \"@raycast/api\";\nimport { useState, useEffect } from \"react\";\nimport { Preferences } from \"../lib/types\";\nimport { getErrorMessage } from \"../lib/utils\";\nimport { Channel, searchChannels, getChannels, useRefresher } from \"../lib/youtubeapi\";\nimport { ChannelItem } from \"./channel\";\nimport { ListOrGrid, ListOrGridEmptyView, ListOrGridSection } from \"./listgrid\";\nimport { getPinnedChannels, getRecentChannels } from \"./recent_channels\";\n\nexport function SearchChannelList({ searchQuery }: { searchQuery?: string | undefined }) {\n  const { griditemsize, showRecentChannels } = getPreferenceValues<Preferences>();\n  const [searchText, setSearchText] = useState<string>(searchQuery || \"\");\n  const { data, error, isLoading } = useRefresher<Channel[] | undefined>(async () => {\n    if (searchText) {\n      return await searchChannels(searchText);\n    }\n    return undefined;\n  }, [searchText]);\n  if (error) {\n    showToast(Toast.Style.Failure, \"Could not search channels\", getErrorMessage(error));\n  }\n  const [loading, setLoading] = useState<boolean>(true);\n  const [pinnedChannels, setPinnedChannels] = useState<Channel[]>([]);\n  const [recentChannels, setRecentChannels] = useState<Channel[]>([]);\n  const [state, setState] = useState<boolean>(false);\n  const refresh = () => setState(!state);\n\n  useEffect(() => {\n    (async () => {\n      setPinnedChannels(await getChannels(getPinnedChannels()));\n      setRecentChannels(await getChannels(getRecentChannels()));\n      setLoading(false);\n    })();\n  }, [state]);\n\n  return data ? (\n    <ListOrGrid isLoading={isLoading} columns={griditemsize} onSearchTextChange={setSearchText} throttle={true}>\n      {data.map((c) => (\n        <ChannelItem key={c.id} channel={c} refresh={refresh} />\n      ))}\n    </ListOrGrid>\n  ) : !loading ? (\n    <ListOrGrid isLoading={isLoading} columns={griditemsize} onSearchTextChange={setSearchText} throttle={true}>\n      {recentChannels.length === 0 && pinnedChannels.length === 0 && (\n        <ListOrGridEmptyView title=\"Search Channels\" icon=\"../assets/youtube.svg\" />\n      )}\n      <ListOrGridSection title=\"Pinned Channels\">\n        {pinnedChannels.map((c: Channel) => (\n          <ChannelItem key={c.id} channel={c} refresh={refresh} pinned />\n        ))}\n      </ListOrGridSection>\n      {showRecentChannels && (\n        <ListOrGridSection title=\"Recent Channels\">\n          {recentChannels.map((c: Channel) => (\n            <ChannelItem key={c.id} channel={c} refresh={refresh} recent />\n          ))}\n        </ListOrGridSection>\n      )}\n    </ListOrGrid>\n  ) : (\n    <ListOrGrid isLoading={true} />\n  );\n}\n", "import TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en.json\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nTimeAgo.addDefaultLocale(en);\nconst timeAgo = new TimeAgo(\"en-US\");\n\nexport function getErrorMessage(error: unknown): string {\n  if (error instanceof Error) {\n    return error.message;\n  } else if (typeof error === \"string\") {\n    return error;\n  } else {\n    return \"unknown error\";\n  }\n}\n\nconst fmt = new Intl.NumberFormat(\"en\", { notation: \"compact\" });\n\nexport function compactNumberFormat(num: number): string {\n  return fmt.format(num);\n}\n\nexport function formatDateShort(input: Date | string) {\n  const date = typeof input === \"string\" ? new Date(input) : input;\n  return timeAgo.format(date, \"twitter\") as string;\n}\n\nexport function formatDate(input: Date | string) {\n  const date = typeof input === \"string\" ? new Date(input) : input;\n  return timeAgo.format(date) as string;\n}\n\nexport function getUuid(): string {\n  return uuidv4();\n}\n", "import { getPreferenceValues } from \"@raycast/api\";\nimport { useEffect, useState } from \"react\";\nimport { getErrorMessage } from \"./utils\";\nimport { youtube, youtube_v3 } from \"@googleapis/youtube\";\nimport { GaxiosResponse } from \"googleapis-common\";\nimport { convertYouTubeDuration } from \"duration-iso-8601\";\nimport { Preferences } from \"./types\";\n\nfunction createClient(): youtube_v3.Youtube {\n  const { apikey } = getPreferenceValues<Preferences>();\n  return youtube({ version: \"v3\", auth: apikey });\n}\n\nexport const youtubeClient = createClient();\n\nconst maxPageResults = 100;\n\nexport enum SearchType {\n  channel = \"channel\",\n  video = \"video\",\n}\n\nexport interface Fetcher {\n  updateInline: () => Promise<void>;\n  refresh: () => Promise<void>;\n}\n\nexport function useRefresher<T>(\n  fn: (updateInline: boolean) => Promise<T>,\n  deps?: React.DependencyList | undefined\n): {\n  data: T | undefined;\n  error?: string;\n  isLoading: boolean;\n  fetcher: Fetcher;\n} {\n  const [data, setData] = useState<T>();\n  const [error, setError] = useState<string>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [timestamp, setTimestamp] = useState<Date>(new Date());\n  const depsAll = [timestamp];\n  if (deps) {\n    for (const d of deps) {\n      depsAll.push(d as any);\n    }\n  }\n  let cancel = false;\n\n  const fetcher: Fetcher = {\n    updateInline: async () => {\n      await fetchData(true);\n    },\n    refresh: async () => {\n      setTimestamp(new Date());\n    },\n  };\n\n  async function fetchData(updateInline = false) {\n    if (cancel) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError(undefined);\n\n    try {\n      const data = await fn(updateInline);\n      if (!cancel) {\n        setData(data);\n      }\n    } catch (e) {\n      if (!cancel) {\n        setError(getErrorMessage(e));\n      }\n    } finally {\n      if (!cancel) {\n        setIsLoading(false);\n      }\n    }\n  }\n  useEffect(() => {\n    fetchData();\n\n    return () => {\n      cancel = true;\n    };\n  }, depsAll);\n\n  return { data, error, isLoading, fetcher };\n}\n\nexport interface ChannelRelatedPlaylists {\n  uploads?: string;\n}\n\nexport interface VideoStatistics {\n  commentCount: string;\n  dislikeCount: string;\n  favoriteCount: string;\n  likeCount: string;\n  viewCount: string;\n}\n\nexport interface ChannelStatistics {\n  commentCount: string;\n  subscriberCount: string;\n  videoCount: string;\n  viewCount: string;\n}\n\nexport interface Thumbnail {\n  url?: string;\n}\n\nexport interface Thumbnails {\n  default?: Thumbnail;\n  high?: Thumbnail;\n}\n\nexport interface Channel {\n  id: string;\n  title: string;\n  description?: string;\n  publishedAt: string;\n  thumbnails: Thumbnails;\n  statistics?: ChannelStatistics;\n  relatedPlaylists?: ChannelRelatedPlaylists;\n}\n\nexport interface Video {\n  id: string;\n  title: string;\n  description?: string;\n  duration?: string | undefined;\n  publishedAt: string;\n  thumbnails: Thumbnails;\n  statistics?: VideoStatistics;\n  channelId: string;\n  channelTitle: string;\n}\n\nfunction dataToStatistics(statistics?: youtube_v3.Schema$VideoStatistics | undefined): VideoStatistics | undefined {\n  const si = statistics;\n  if (!si) {\n    return undefined;\n  }\n  const result: VideoStatistics = {\n    commentCount: si.commentCount || \"0\",\n    dislikeCount: si.dislikeCount || \"0\",\n    favoriteCount: si.favoriteCount || \"0\",\n    likeCount: si.likeCount || \"0\",\n    viewCount: si.viewCount || \"0\",\n  };\n  return result;\n}\n\nasync function fetchAndInjectVideoStats(videos: Video[]) {\n  const videoIds: string[] = videos.map((v) => v.id);\n  if (videoIds) {\n    const statsData = await youtubeClient.videos.list({\n      id: videoIds,\n      part: [\"statistics\", \"contentDetails\"],\n      maxResults: videoIds.length,\n    });\n    const statsItems = statsData.data.items;\n    if (statsItems) {\n      for (const s of statsItems) {\n        const si = s.statistics;\n        if (si) {\n          const stats = dataToStatistics(si);\n          if (s.id) {\n            const el = videos.find((x) => x.id === s.id);\n            if (el) {\n              el.statistics = stats;\n              el.duration = convertYouTubeDuration(s.contentDetails?.duration);\n            }\n          }\n        }\n      }\n    } else {\n      throw Error(\"could not fetch stats for videos\");\n    }\n  }\n}\n\nasync function search(\n  query: string,\n  type: SearchType,\n  channedId?: string | undefined\n): Promise<GaxiosResponse<youtube_v3.Schema$SearchListResponse>> {\n  const data = await youtubeClient.search.list({\n    q: query,\n    part: [\"id\", \"snippet\"],\n    type: [type],\n    maxResults: maxPageResults,\n    channelId: channedId,\n  });\n  return data;\n}\n\nexport async function searchVideos(query: string, channedId?: string | undefined): Promise<Video[]> {\n  const data = await search(query, SearchType.video, channedId);\n  const items = data?.data.items;\n  const result: Video[] = [];\n  if (items) {\n    for (const r of items) {\n      const vid = r.id?.videoId;\n      if (vid) {\n        const v: Video = {\n          id: vid,\n          title: r.snippet?.title || \"?\",\n          description: r.snippet?.description || undefined,\n          publishedAt: r.snippet?.publishedAt || \"?\",\n          channelId: r.snippet?.channelId || \"\",\n          channelTitle: r.snippet?.channelTitle || \"?\",\n          thumbnails: {\n            default: {\n              url: r.snippet?.thumbnails?.default?.url || undefined,\n            },\n            high: {\n              url: r.snippet?.thumbnails?.high?.url || undefined,\n            },\n          },\n        };\n        result.push(v);\n      }\n    }\n  }\n  await fetchAndInjectVideoStats(result);\n  return result;\n}\n\nexport async function getVideos(videoIds: string[]): Promise<Video[]> {\n  if (videoIds.length > 0) {\n    const data = await youtubeClient.videos.list({\n      id: videoIds,\n      part: [\"id\", \"snippet\"],\n      maxResults: videoIds.length,\n    });\n    const result =\n      data?.data.items?.map(\n        (r) =>\n          ({\n            id: r.id,\n            title: r.snippet?.title || \"?\",\n            description: r.snippet?.description || undefined,\n            publishedAt: r.snippet?.publishedAt || \"?\",\n            channelId: r.snippet?.channelId || \"\",\n            channelTitle: r.snippet?.channelTitle || \"?\",\n            thumbnails: {\n              default: {\n                url: r.snippet?.thumbnails?.default?.url || undefined,\n              },\n              high: {\n                url: r.snippet?.thumbnails?.high?.url || undefined,\n              },\n            },\n          } as Video)\n      ) || [];\n    await fetchAndInjectVideoStats(result);\n    return result;\n  }\n  return [];\n}\n\nexport async function searchChannels(query: string): Promise<Channel[]> {\n  const data = await search(query, SearchType.channel);\n  const items = data?.data.items;\n  const channelIds: string[] = [];\n  const result: Channel[] = [];\n  if (items) {\n    for (const r of items) {\n      const cid = r.id?.channelId;\n      if (cid) {\n        channelIds.push(cid);\n        const v: Channel = {\n          id: cid,\n          title: r.snippet?.channelTitle || \"?\",\n          description: r.snippet?.description || undefined,\n          publishedAt: r.snippet?.publishedAt || \"?\",\n          thumbnails: {\n            default: {\n              url: r.snippet?.thumbnails?.default?.url || undefined,\n            },\n            high: {\n              url: r.snippet?.thumbnails?.high?.url || undefined,\n            },\n          },\n        };\n        result.push(v);\n      }\n    }\n  }\n  if (channelIds) {\n    // get stats\n    const statsData = await youtubeClient.channels.list({\n      id: channelIds,\n      part: [\"statistics\", \"contentDetails\"],\n      maxResults: channelIds.length,\n    });\n    const statsItems = statsData.data.items;\n    if (statsItems) {\n      for (const s of statsItems) {\n        const si = s.statistics;\n        if (si) {\n          const stats: ChannelStatistics = {\n            commentCount: si.commentCount || \"0\",\n            subscriberCount: si.subscriberCount || \"0\",\n            videoCount: si.videoCount || \"0\",\n            viewCount: si.viewCount || \"0\",\n          };\n          if (s.id) {\n            const el = result.find((x) => x.id === s.id);\n            if (el) {\n              el.statistics = stats;\n              const rps = s.contentDetails?.relatedPlaylists;\n              if (rps) {\n                el.relatedPlaylists = {\n                  uploads: rps.uploads,\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport async function getChannel(channelId: string): Promise<Channel | undefined> {\n  let result: Channel | undefined;\n  if (channelId) {\n    const data = await youtubeClient.channels.list({\n      id: [channelId],\n      part: [\"statistics\", \"snippet\", \"contentDetails\"],\n      maxResults: 1,\n    });\n    const items = data.data.items;\n    if (items && items.length > 0) {\n      const item = items[0];\n      const sn = item.snippet;\n      if (!sn) {\n        throw Error(`Could not find channel ${channelId}`);\n      }\n      result = {\n        id: channelId,\n        title: sn.title || \"?\",\n        description: sn.description || undefined,\n        publishedAt: sn.publishedAt || \"?\",\n        thumbnails: {\n          default: {\n            url: sn.thumbnails?.default?.url || undefined,\n          },\n          high: {\n            url: sn.thumbnails?.high?.url || undefined,\n          },\n        },\n      };\n      const sd = item.statistics;\n      if (!sd) {\n        throw Error(`Could not get stats of channel ${channelId}`);\n      }\n      result.statistics = {\n        commentCount: sd.commentCount || \"0\",\n        subscriberCount: sd.subscriberCount || \"0\",\n        videoCount: sd.videoCount || \"0\",\n        viewCount: sd.viewCount || \"0\",\n      };\n      const rps = item.contentDetails?.relatedPlaylists;\n      if (rps) {\n        result.relatedPlaylists = {\n          uploads: rps.uploads,\n        };\n      }\n    }\n  }\n  return result;\n}\n\nexport async function getChannels(channelIds: string[]): Promise<Channel[]> {\n  return (await Promise.all(channelIds.map((id) => getChannel(id)))).filter((x) => x !== undefined) as Channel[];\n}\n\nexport async function getPlaylistVideos(playlistId: string): Promise<Video[] | undefined> {\n  let result: Video[] | undefined;\n\n  if (playlistId) {\n    const data = await youtubeClient.playlistItems.list({\n      playlistId: playlistId,\n      part: [\"snippet\", \"contentDetails\"],\n      maxResults: maxPageResults,\n    });\n    const items = data.data.items;\n    if (items) {\n      result = [];\n      for (const item of items) {\n        const sn = item.snippet;\n        if (!sn) {\n          throw Error(`Could not get snippet of playlist ${playlistId}`);\n        }\n        const vid = item.contentDetails?.videoId;\n        const v: Video = {\n          id: vid || \"\",\n          title: sn.title || \"?\",\n          description: sn.description || undefined,\n          publishedAt: sn.publishedAt || \"?\",\n          channelId: sn.channelId || \"\",\n          channelTitle: sn.channelTitle || \"?\",\n          thumbnails: {\n            default: {\n              url: sn.thumbnails?.default?.url || undefined,\n            },\n            high: {\n              url: sn.thumbnails?.high?.url || undefined,\n            },\n          },\n        };\n        result.push(v);\n      }\n      await fetchAndInjectVideoStats(result);\n    }\n  }\n  return result;\n}\n\nexport async function getPopularVideos(): Promise<Video[] | undefined> {\n  let result: Video[] | undefined;\n  const data = await youtubeClient.videos.list({\n    chart: \"mostPopular\",\n    part: [\"snippet\", \"contentDetails\", \"statistics\"],\n    maxResults: maxPageResults,\n  });\n  const items = data.data.items;\n  if (items && items.length > 0) {\n    result = [];\n    for (const item of items) {\n      const sn = item.snippet;\n      if (sn) {\n        const v: Video = {\n          id: item.id || \"\",\n          title: sn.title || \"?\",\n          description: sn.description || undefined,\n          duration: convertYouTubeDuration(item.contentDetails?.duration),\n          publishedAt: sn.publishedAt || \"?\",\n          thumbnails: {\n            default: {\n              url: sn.thumbnails?.default?.url || undefined,\n            },\n            high: {\n              url: sn.thumbnails?.high?.url || undefined,\n            },\n          },\n          channelId: sn.channelId || \"\",\n          channelTitle: sn.channelTitle || \"?\",\n          statistics: dataToStatistics(item.statistics),\n        };\n        result.push(v);\n      }\n    }\n  }\n  return result;\n}\n", "import {\n  ActionPanel,\n  Color,\n  Detail,\n  Icon,\n  Image,\n  List,\n  Grid,\n  Action,\n  showToast,\n  Toast,\n  getPreferenceValues,\n} from \"@raycast/api\";\nimport React from \"react\";\nimport { compactNumberFormat, formatDate, getErrorMessage } from \"../lib/utils\";\nimport { Channel, getChannel, useRefresher } from \"../lib/youtubeapi\";\nimport { OpenChannelInBrowser, SearchChannelVideosAction, ShowRecentPlaylistVideosAction } from \"./actions\";\nimport { addRecentChannel, PinChannel, PinnedChannelActions, RecentChannelActions } from \"./recent_channels\";\nimport he from \"he\";\nimport { ViewLayout, PrimaryAction, Preferences } from \"../lib/types\";\n\nexport function ChannelItemDetail(props: { channel: Channel; isLoading?: boolean | undefined }): JSX.Element {\n  const channel = props.channel;\n  let statistics;\n  let mdParts = [];\n  if (channel) {\n    statistics = channel.statistics;\n    const desc = channel.description || \"No description\";\n    const title = channel.title;\n    const thumbnailUrl = channel.thumbnails?.default?.url || undefined;\n    mdParts = [`# ${title}`];\n    if (thumbnailUrl) {\n      mdParts.push(`![thumbnail](${thumbnailUrl})`);\n    }\n    mdParts.push(`\\n${desc}`);\n  } else {\n    mdParts = [\"Error getting channel info\"];\n  }\n  const md = mdParts.join(\"\\n\\n\");\n  return (\n    <Detail\n      isLoading={props.isLoading}\n      markdown={md}\n      metadata={\n        channel && (\n          <Detail.Metadata>\n            {statistics && (\n              <Detail.Metadata.Label\n                title=\"Subscribers\"\n                text={compactNumberFormat(parseInt(statistics.subscriberCount))}\n              />\n            )}\n            <Detail.Metadata.Label title=\"Published\" text={formatDate(channel.publishedAt)} />\n            <Detail.Metadata.Separator />\n            {statistics && (\n              <React.Fragment>\n                <Detail.Metadata.Label\n                  title=\"Number of Videos\"\n                  text={compactNumberFormat(parseInt(statistics.videoCount))}\n                />\n                <Detail.Metadata.Label title=\"View Count\" text={compactNumberFormat(parseInt(statistics.viewCount))} />\n              </React.Fragment>\n            )}\n            <Detail.Metadata.Separator />\n            <Detail.Metadata.Link\n              title=\"Open Channel in Browser\"\n              target={`https://youtube.com/channel/${channel.id}`}\n              text={channel.title}\n            />\n          </Detail.Metadata>\n        )\n      }\n      actions={\n        <ActionPanel>\n          <ShowRecentPlaylistVideosAction\n            channelId={channel.id}\n            title=\"Show Recent Channel Videos\"\n            playlistId={channel?.relatedPlaylists?.uploads}\n          />\n          <SearchChannelVideosAction channelId={channel.id} />\n          <OpenChannelInBrowser channelId={channel.id} />\n        </ActionPanel>\n      }\n    />\n  );\n}\n\ninterface ChannelItemProps {\n  channel: Channel;\n  refresh?: () => void;\n  pinned?: boolean;\n  recent?: boolean;\n}\n\nexport function ChannelItem(props: ChannelItemProps): JSX.Element {\n  const { view, primaryaction } = getPreferenceValues<Preferences>();\n  const { channel, refresh } = props;\n  const channelId = channel.id;\n  const title = he.decode(channel.title);\n  let parts: string[] = [];\n  if (channel.statistics) {\n    parts = [\n      `${compactNumberFormat(parseInt(channel.statistics.subscriberCount))} subs \u00B7 ${compactNumberFormat(\n        parseInt(channel.statistics.viewCount)\n      )} views`,\n    ];\n  }\n  const thumbnail = channel.thumbnails?.high?.url || \"\";\n\n  const Actions = (): JSX.Element => {\n    const showDetail = (\n      <Action.Push\n        title=\"Show Details\"\n        target={<ChannelItemDetail {...props} />}\n        icon={{ source: Icon.List, tintColor: Color.PrimaryText }}\n        onPush={() => {\n          addRecentChannel(channel.id);\n          if (refresh) refresh();\n        }}\n      />\n    );\n    const openBrowser = <OpenChannelInBrowser channelId={channel.id} refresh={refresh} />;\n    return (\n      <ActionPanel>\n        <ActionPanel.Section>\n          {primaryaction === PrimaryAction.OpenInBrowser ? (\n            <React.Fragment>\n              {openBrowser}\n              {showDetail}\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {showDetail}\n              {openBrowser}\n            </React.Fragment>\n          )}\n        </ActionPanel.Section>\n        <ActionPanel.Section>\n          <SearchChannelVideosAction channelId={channel.id} refresh={refresh} />\n          <ShowRecentPlaylistVideosAction\n            channelId={channel.id}\n            refresh={refresh}\n            title=\"Show Recent Channel Videos\"\n            playlistId={channel.relatedPlaylists?.uploads}\n          />\n        </ActionPanel.Section>\n        {props.recent && <RecentChannelActions channelId={channel.id} refresh={refresh} />}\n        {props.pinned ? (\n          <PinnedChannelActions channelId={channel.id} refresh={refresh} />\n        ) : (\n          <PinChannel channelId={channel.id} refresh={refresh} />\n        )}\n      </ActionPanel>\n    );\n  };\n\n  return view === ViewLayout.List ? (\n    <List.Item\n      key={channelId}\n      title={title}\n      icon={{ source: thumbnail, mask: Image.Mask.Circle }}\n      accessories={[{ text: parts.join(\" \") }]}\n      actions={<Actions />}\n    />\n  ) : (\n    <Grid.Item\n      key={channelId}\n      title={title}\n      content={{ source: thumbnail, mask: Image.Mask.Circle }}\n      subtitle={parts.join(\" \")}\n      actions={<Actions />}\n    />\n  );\n}\n\nexport function ChannelItemDetailFetched(props: { channelId: string }): JSX.Element | null {\n  const channelId = props.channelId;\n  const { data, error, isLoading } = useRefresher<Channel | undefined>(async () => {\n    if (channelId) {\n      return await getChannel(channelId);\n    }\n    return undefined;\n  }, [channelId]);\n  if (error) {\n    showToast(Toast.Style.Failure, \"Error fetching channel info\", getErrorMessage(error));\n  }\n  return data ? <ChannelItemDetail channel={data} isLoading={isLoading} /> : null;\n}\n", "import { Color, Icon, Action } from \"@raycast/api\";\nimport { PlaylistList } from \"./playlist\";\nimport { SearchVideoList } from \"./video_search\";\nimport { addRecentChannel } from \"./recent_channels\";\n\nexport interface ChannelActionProps {\n  channelId: string;\n  refresh?: () => void;\n}\n\nexport function OpenChannelInBrowser({ channelId, refresh }: ChannelActionProps) {\n  return (\n    <Action.OpenInBrowser\n      title=\"Open Channel in Browser\"\n      url={`https://youtube.com/channel/${channelId}`}\n      shortcut={{ modifiers: [\"cmd\"], key: \"b\" }}\n      onOpen={() => {\n        addRecentChannel(channelId);\n        if (refresh) refresh();\n      }}\n    />\n  );\n}\n\nexport function SearchChannelVideosAction({ channelId, refresh }: ChannelActionProps) {\n  return (\n    <Action.Push\n      title=\"Search Channel Videos\"\n      target={<SearchVideoList channelId={channelId} />}\n      shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"s\" }}\n      icon={{ source: Icon.MagnifyingGlass, tintColor: Color.PrimaryText }}\n      onPush={() => {\n        addRecentChannel(channelId);\n        if (refresh) refresh();\n      }}\n    />\n  );\n}\n\nexport function ShowRecentPlaylistVideosAction(props: ChannelActionProps & { playlistId?: string; title?: string }) {\n  if (props.playlistId) {\n    const title = props.title ? props.title : \"Show Playlist Videos\";\n    return (\n      <Action.Push\n        title={title}\n        target={<PlaylistList playlistId={props.playlistId} />}\n        shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"l\" }}\n        icon={{ source: Icon.Bubble, tintColor: Color.PrimaryText }}\n        onPush={() => {\n          addRecentChannel(props.channelId);\n          if (props.refresh) props.refresh();\n        }}\n      />\n    );\n  }\n  return null;\n}\n", "import { getPreferenceValues, showToast, Toast } from \"@raycast/api\";\nimport { getErrorMessage } from \"../lib/utils\";\nimport { getPlaylistVideos, useRefresher, Video } from \"../lib/youtubeapi\";\nimport { VideoItem } from \"./video\";\nimport { ListOrGrid } from \"./listgrid\";\nimport { Preferences } from \"../lib/types\";\n\nexport function PlaylistList(props: { playlistId: string }) {\n  const { griditemsize } = getPreferenceValues<Preferences>();\n  const playlistId = props.playlistId;\n  const { data, error, isLoading } = useRefresher<Video[] | undefined>(async () => {\n    return await getPlaylistVideos(playlistId);\n  }, []);\n  if (error) {\n    showToast(Toast.Style.Failure, \"Could Not Fetch Playlist videos\", getErrorMessage(error));\n  }\n  return (\n    <ListOrGrid isLoading={isLoading} columns={griditemsize} aspectRatio={\"4/3\"}>\n      {data?.map((v) => (\n        <VideoItem key={v.id} video={v} />\n      ))}\n    </ListOrGrid>\n  );\n}\n", "import { Action, ActionPanel, Color, Detail, Icon, List, Grid, showHUD, getPreferenceValues } from \"@raycast/api\";\nimport React from \"react\";\nimport { compactNumberFormat, formatDate } from \"../lib/utils\";\nimport { Video } from \"../lib/youtubeapi\";\nimport { OpenChannelInBrowser } from \"./actions\";\nimport { ChannelItemDetailFetched } from \"./channel\";\nimport { addRecentVideo, PinnedVideoActions, PinVideo, RecentVideoActions } from \"./recent_videos\";\nimport fs from \"fs\";\nimport he from \"he\";\nimport { ViewLayout, PrimaryAction, Preferences } from \"../lib/types\";\n\nexport interface VideoActionProps {\n  video: Video;\n  refresh?: () => void;\n}\n\nfunction videoUrl(videoId: string) {\n  return `https://youtube.com/watch?v=${videoId}`;\n}\n\nfunction CopyVideoUrlAction({ video, refresh }: VideoActionProps) {\n  return (\n    <Action.CopyToClipboard\n      title=\"Copy Video URL\"\n      content={videoUrl(video.id)}\n      shortcut={{ modifiers: [\"cmd\", \"opt\"], key: \"c\" }}\n      onCopy={() => {\n        addRecentVideo(video.id);\n        if (refresh) refresh();\n      }}\n    />\n  );\n}\n\nfunction OpenVideoInBrowser({ video }: VideoActionProps) {\n  return (\n    <Action.OpenInBrowser\n      title=\"Open Video in Browser\"\n      url={videoUrl(video.id)}\n      onOpen={() => addRecentVideo(video.id)}\n    />\n  );\n}\n\nfunction OpenWithIINAAction({ video, refresh }: VideoActionProps): JSX.Element | null {\n  const appPath = \"/Applications/IINA.app\";\n  if (fs.existsSync(appPath)) {\n    return (\n      <Action.Open\n        title=\"Open with IINA\"\n        target={videoUrl(video.id)}\n        application=\"IINA\"\n        icon={{ fileIcon: appPath }}\n        shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"i\" }}\n        onOpen={() => {\n          showHUD(\"Open IINA\");\n          () => addRecentVideo(video.id);\n          if (refresh) refresh();\n        }}\n      />\n    );\n  }\n  return null;\n}\n\nfunction ShowVideoDetails(props: VideoActionProps) {\n  const { video, refresh } = props;\n  return (\n    <Action.Push\n      title=\"Show Details\"\n      target={<VideoItemDetail {...props} />}\n      icon={{ source: Icon.List, tintColor: Color.PrimaryText }}\n      onPush={() => {\n        addRecentVideo(video.id);\n        if (refresh) refresh();\n      }}\n    />\n  );\n}\n\nfunction ShowChannelAction(props: { channelId: string }) {\n  return (\n    <Action.Push\n      title=\"Show Channel\"\n      target={<ChannelItemDetailFetched {...props} />}\n      icon={{ source: Icon.Person, tintColor: Color.PrimaryText }}\n      shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"c\" }}\n    />\n  );\n}\n\nexport function VideoItemDetail(props: VideoActionProps): JSX.Element {\n  const { video } = props;\n  const statistics = video.statistics;\n  const desc = video.description || \"No description\";\n  const title = video.title;\n  const thumbnailUrl = video.thumbnails?.high?.url || undefined;\n  const thumbnailMd = (thumbnailUrl ? `![thumbnail](${thumbnailUrl})` : \"\") + \"\\n\\n\";\n  const channel = video.channelTitle;\n  const md = `# ${title}\\n\\n${thumbnailMd}${desc}\\n\\n`;\n  return (\n    <Detail\n      markdown={md}\n      metadata={\n        <Detail.Metadata>\n          <Detail.Metadata.Label title=\"Channel\" text={channel} />\n          <Detail.Metadata.Label title=\"Published\" text={formatDate(video.publishedAt)} />\n          <Detail.Metadata.Separator />\n          {statistics && (\n            <React.Fragment>\n              <Detail.Metadata.Label title=\"Views\" text={compactNumberFormat(parseInt(statistics.viewCount))} />\n              <Detail.Metadata.Label title=\"Likes\" text={compactNumberFormat(parseInt(statistics.likeCount))} />\n              <Detail.Metadata.Label title=\"Comments\" text={compactNumberFormat(parseInt(statistics.commentCount))} />\n            </React.Fragment>\n          )}\n          <Detail.Metadata.Separator />\n          <Detail.Metadata.Link\n            title=\"Open Video in Browser\"\n            target={`https://youtube.com/watch?v=${video.id}`}\n            text={\"Watch\"}\n          />\n        </Detail.Metadata>\n      }\n      actions={\n        <ActionPanel>\n          <ActionPanel.Section>\n            <OpenVideoInBrowser {...props} />\n            <ShowChannelAction channelId={video.channelId} />\n          </ActionPanel.Section>\n          <ActionPanel.Section>\n            <OpenChannelInBrowser channelId={video.channelId} />\n            <CopyVideoUrlAction {...props} />\n            <OpenWithIINAAction {...props} />\n          </ActionPanel.Section>\n        </ActionPanel>\n      }\n    />\n  );\n}\n\ninterface VideoItemProps {\n  video: Video;\n  refresh?: () => void;\n  pinned?: boolean;\n  recent?: boolean;\n}\n\nexport function VideoItem(props: VideoItemProps): JSX.Element {\n  const { view, primaryaction } = getPreferenceValues<Preferences>();\n  const { video } = props;\n  let parts: string[] = [];\n  if (video.statistics) {\n    parts = [`${compactNumberFormat(parseInt(video.statistics.viewCount))} views \u00B7 ${formatDate(video.publishedAt)}`];\n  }\n  const thumbnail = video.thumbnails?.high?.url || \"\";\n  const title = he.decode(video.title);\n\n  const Actions = (): JSX.Element => {\n    const showDetail = <ShowVideoDetails {...props} />;\n    const openBrowser = <OpenVideoInBrowser {...props} />;\n    return (\n      <ActionPanel>\n        <ActionPanel.Section>\n          {primaryaction === PrimaryAction.OpenInBrowser ? (\n            <React.Fragment>\n              {openBrowser}\n              {showDetail}\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              {showDetail}\n              {openBrowser}\n            </React.Fragment>\n          )}\n        </ActionPanel.Section>\n        <ActionPanel.Section>\n          <ShowChannelAction channelId={video.channelId} />\n          <CopyVideoUrlAction {...props} />\n          <OpenWithIINAAction {...props} />\n        </ActionPanel.Section>\n        {props.recent && <RecentVideoActions {...props} />}\n        {props.pinned ? <PinnedVideoActions {...props} /> : <PinVideo {...props} />}\n      </ActionPanel>\n    );\n  };\n\n  return view === ViewLayout.List ? (\n    <List.Item\n      key={video.id}\n      title={title}\n      accessories={[{ text: parts.join(\" \") }]}\n      icon={{ source: thumbnail }}\n      actions={<Actions />}\n    />\n  ) : (\n    <Grid.Item\n      key={video.id}\n      title={title}\n      subtitle={parts.join(\" \")}\n      content={{ source: thumbnail }}\n      actions={<Actions />}\n    />\n  );\n}\n", "import { Action, ActionPanel, Icon, Color, showToast, Toast, Cache, getPreferenceValues } from \"@raycast/api\";\nimport { VideoActionProps } from \"./video\";\nimport { Preferences } from \"../lib/types\";\n\nconst { griditemsize } = getPreferenceValues<Preferences>();\n\nconst cache = new Cache();\n\nexport const getRecentVideos = () => getCachedVideos(\"recent-videos\");\nexport const getPinnedVideos = () => getCachedVideos(\"pinned-videos\");\n\nconst getCachedVideos = (key: string): string[] => {\n  const videos = cache.get(key);\n  return videos ? JSON.parse(videos) : [];\n};\n\nexport const addRecentVideo = (videoId: string) => {\n  removePinnedVideo(videoId);\n  const recent = getRecentVideos().filter((id) => id !== videoId);\n  recent.unshift(videoId);\n  recent.splice(griditemsize * 2);\n  cache.set(\"recent-videos\", JSON.stringify(recent));\n};\n\nexport const addPinnedVideo = (videoId: string) => {\n  removeRecentVideo(videoId);\n  const pinned = getPinnedVideos().filter((id) => id !== videoId);\n  pinned.unshift(videoId);\n  cache.set(\"pinned-videos\", JSON.stringify(pinned));\n};\n\nconst removeVideo = (key: string, id: string) => {\n  const videos = getCachedVideos(key);\n  cache.set(key, JSON.stringify(videos.filter((v) => v !== id)));\n};\n\nconst removeRecentVideo = (id: string) => removeVideo(\"recent-videos\", id);\nconst clearRecentVideos = () => cache.remove(\"recent-videos\");\nconst removePinnedVideo = (id: string) => removeVideo(\"pinned-videos\", id);\nconst clearPinnedVideos = () => cache.remove(\"pinned-videos\");\n\nexport const PinVideo = ({ video, refresh }: VideoActionProps): JSX.Element => {\n  return (\n    <Action\n      title=\"Pin Video\"\n      icon={{ source: Icon.Pin, tintColor: Color.PrimaryText }}\n      shortcut={{ modifiers: [\"cmd\"], key: \"p\" }}\n      onAction={() => {\n        addPinnedVideo(video.id);\n        showToast(Toast.Style.Success, \"Pinned Video\");\n        if (refresh) refresh();\n      }}\n    />\n  );\n};\n\nexport const PinnedVideoActions = ({ video, refresh }: VideoActionProps) => (\n  <ActionPanel.Section>\n    <Action\n      title=\"Remove From Pinned Videos\"\n      onAction={() => {\n        removePinnedVideo(video.id);\n        showToast(Toast.Style.Success, \"Removed From Pinned Videos\");\n        if (refresh) refresh();\n      }}\n      icon={{ source: Icon.XMarkCircle, tintColor: Color.PrimaryText }}\n      shortcut={{ modifiers: [\"cmd\"], key: \"r\" }}\n    />\n    <Action\n      title=\"Clear All Pinned Videos\"\n      onAction={() => {\n        clearPinnedVideos();\n        showToast(Toast.Style.Success, \"Cleared All Pinned Videos\");\n        if (refresh) refresh();\n      }}\n      icon={{ source: Icon.Trash, tintColor: Color.Red }}\n      shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"r\" }}\n    />\n  </ActionPanel.Section>\n);\n\nexport const RecentVideoActions = ({ video, refresh }: VideoActionProps) => {\n  return (\n    <ActionPanel.Section>\n      <PinVideo video={video} refresh={refresh} />\n      <Action\n        title=\"Remove From Recent Videos\"\n        onAction={() => {\n          removeRecentVideo(video.id);\n          showToast(Toast.Style.Success, \"Removed From Recent Videos\");\n          if (refresh) refresh();\n        }}\n        icon={{ source: Icon.XMarkCircle, tintColor: Color.PrimaryText }}\n        shortcut={{ modifiers: [\"cmd\"], key: \"r\" }}\n      />\n      <Action\n        title=\"Clear All Recent Videos\"\n        onAction={() => {\n          clearRecentVideos();\n          showToast(Toast.Style.Success, \"Cleared All Recent Videos\");\n          if (refresh) refresh();\n        }}\n        icon={{ source: Icon.Trash, tintColor: Color.Red }}\n        shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"r\" }}\n      />\n    </ActionPanel.Section>\n  );\n};\n", "import { List, Grid, getPreferenceValues } from \"@raycast/api\";\nimport { Preferences } from \"../lib/types\";\n\nconst { view } = getPreferenceValues<Preferences>();\n\ntype ListOrGridProps = List.Props | Grid.Props;\nexport function ListOrGrid<T>(props: ListOrGridProps, context?: T) {\n  return view === \"list\" ? List(props, context) : Grid(props, context);\n}\n\ntype ListOrGridSectionProps = List.Section.Props | Grid.Section.Props;\nexport function ListOrGridSection<T>(props: ListOrGridSectionProps, context?: T) {\n  return view === \"list\" ? List.Section(props, context) : Grid.Section(props, context);\n}\n\ntype ListOrGridEmptyViewProps = List.EmptyView.Props | Grid.EmptyView.Props;\nexport function ListOrGridEmptyView<T>(props: ListOrGridEmptyViewProps, context?: T) {\n  return view === \"list\" ? List.EmptyView(props, context) : Grid.EmptyView(props, context);\n}\n", "import { getPreferenceValues, showToast, Toast } from \"@raycast/api\";\nimport { useState, useEffect } from \"react\";\nimport { getErrorMessage } from \"../lib/utils\";\nimport { searchVideos, getVideos, useRefresher, Video } from \"../lib/youtubeapi\";\nimport { VideoItem } from \"./video\";\nimport { ListOrGrid, ListOrGridEmptyView, ListOrGridSection } from \"./listgrid\";\nimport { getPinnedVideos, getRecentVideos } from \"./recent_videos\";\nimport { Preferences } from \"../lib/types\";\n\nexport function SearchVideoList({ channelId, searchQuery }: { channelId?: string; searchQuery?: string | undefined }) {\n  const { griditemsize, showRecentVideos } = getPreferenceValues<Preferences>();\n  const [searchText, setSearchText] = useState<string>(searchQuery || \"\");\n  const { data, error, isLoading } = useRefresher<Video[] | undefined>(\n    async () => (searchText ? await searchVideos(searchText, channelId) : undefined),\n    [searchText]\n  );\n  if (error) {\n    showToast(Toast.Style.Failure, \"Could Not Search Videos\", getErrorMessage(error));\n  }\n  const [loading, setLoading] = useState<boolean>(true);\n  const [pinnedVideos, setPinnedVideos] = useState<Video[]>([]);\n  const [recentVideos, setRecentVideos] = useState<Video[]>([]);\n  const [state, setState] = useState<boolean>(false);\n  const refresh = () => setState(!state);\n\n  useEffect(() => {\n    (async () => {\n      const pinnedVideos = await getVideos(getPinnedVideos());\n      setPinnedVideos(pinnedVideos.filter((v) => !channelId || v.channelId === channelId));\n      const recentVideos = await getVideos(getRecentVideos());\n      setRecentVideos(recentVideos.filter((v) => !channelId || v.channelId === channelId));\n      setLoading(false);\n    })();\n  }, [state]);\n\n  return data ? (\n    <ListOrGrid\n      isLoading={isLoading}\n      columns={griditemsize}\n      aspectRatio={\"4/3\"}\n      onSearchTextChange={setSearchText}\n      throttle={true}\n    >\n      {data.map((v) => (\n        <VideoItem key={v.id} video={v} refresh={refresh} />\n      ))}\n    </ListOrGrid>\n  ) : !loading ? (\n    <ListOrGrid\n      isLoading={isLoading}\n      columns={griditemsize}\n      aspectRatio={\"4/3\"}\n      onSearchTextChange={setSearchText}\n      throttle={true}\n    >\n      {recentVideos.length === 0 && pinnedVideos.length === 0 && (\n        <ListOrGridEmptyView title=\"Search Videos\" icon=\"../assets/youtube.svg\" />\n      )}\n      <ListOrGridSection title=\"Pinned Videos\">\n        {pinnedVideos.map((v: Video) => (\n          <VideoItem key={v.id} video={v} refresh={refresh} pinned />\n        ))}\n      </ListOrGridSection>\n      {showRecentVideos && (\n        <ListOrGridSection title=\"Recent Videos\">\n          {recentVideos.map((v: Video) => (\n            <VideoItem key={v.id} video={v} refresh={refresh} recent />\n          ))}\n        </ListOrGridSection>\n      )}\n    </ListOrGrid>\n  ) : (\n    <ListOrGrid isLoading={true} />\n  );\n}\n", "import { Action, ActionPanel, Icon, Color, Toast, showToast, Cache, getPreferenceValues } from \"@raycast/api\";\nimport { ChannelActionProps } from \"./actions\";\nimport { Preferences } from \"../lib/types\";\n\nconst { griditemsize } = getPreferenceValues<Preferences>();\n\nconst cache = new Cache();\n\nexport const getRecentChannels = () => getCachedChannels(\"recent-channels\");\nexport const getPinnedChannels = () => getCachedChannels(\"pinned-channels\");\n\nconst getCachedChannels = (key: string): string[] => {\n  const channels = cache.get(key);\n  return channels ? JSON.parse(channels) : [];\n};\n\nexport const addRecentChannel = (channelId: string) => {\n  removePinnedChannel(channelId);\n  const recent = getRecentChannels().filter((id) => id !== channelId);\n  recent.unshift(channelId);\n  recent.splice(griditemsize * 2);\n  cache.set(\"recent-channels\", JSON.stringify(recent));\n};\n\nconst addPinnedChannel = (channelId: string) => {\n  removeRecentChannel(channelId);\n  const pinned = getPinnedChannels().filter((id) => id !== channelId);\n  pinned.unshift(channelId);\n  cache.set(\"pinned-channels\", JSON.stringify(pinned));\n};\n\nconst removeChannel = (key: string, id: string) => {\n  const channels = getCachedChannels(key);\n  cache.set(key, JSON.stringify(channels.filter((c) => c !== id)));\n};\n\nconst removeRecentChannel = (id: string) => removeChannel(\"recent-channels\", id);\nconst clearRecentChannels = () => cache.remove(\"recent-channels\");\nconst removePinnedChannel = (id: string) => removeChannel(\"pinned-channels\", id);\nconst clearPinnedChannels = () => cache.remove(\"pinned-channels\");\n\nexport const PinChannel = ({ channelId, refresh }: ChannelActionProps): JSX.Element => {\n  return (\n    <Action\n      title=\"Pin Channel\"\n      icon={{ source: Icon.Pin, tintColor: Color.PrimaryText }}\n      shortcut={{ modifiers: [\"cmd\"], key: \"p\" }}\n      onAction={() => {\n        addPinnedChannel(channelId);\n        showToast(Toast.Style.Success, \"Pinned Channel\");\n        if (refresh) refresh();\n      }}\n    />\n  );\n};\n\nexport const PinnedChannelActions = ({ channelId, refresh }: ChannelActionProps) => (\n  <ActionPanel.Section>\n    <Action\n      title=\"Remove From Pinned Channels\"\n      onAction={() => {\n        removePinnedChannel(channelId);\n        showToast(Toast.Style.Success, \"Removed From Pinned Channels\");\n        if (refresh) refresh();\n      }}\n      icon={{ source: Icon.XMarkCircle, tintColor: Color.PrimaryText }}\n      shortcut={{ modifiers: [\"cmd\"], key: \"r\" }}\n    />\n    <Action\n      title=\"Clear All Pinned Channels\"\n      onAction={() => {\n        clearPinnedChannels();\n        showToast(Toast.Style.Success, \"Cleared All Pinned Channels\");\n        if (refresh) refresh();\n      }}\n      icon={{ source: Icon.Trash, tintColor: Color.Red }}\n      shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"r\" }}\n    />\n  </ActionPanel.Section>\n);\n\nexport const RecentChannelActions = ({ channelId, refresh }: ChannelActionProps) => {\n  return (\n    <ActionPanel.Section>\n      <PinChannel channelId={channelId} refresh={refresh} />\n      <Action\n        title=\"Remove From Recent Channels\"\n        onAction={() => {\n          removeRecentChannel(channelId);\n          showToast(Toast.Style.Success, \"Removed From Recent Channels\");\n          if (refresh) refresh();\n        }}\n        icon={{ source: Icon.XMarkCircle, tintColor: Color.PrimaryText }}\n        shortcut={{ modifiers: [\"cmd\"], key: \"r\" }}\n      />\n      <Action\n        title=\"Clear All Recent Channels\"\n        onAction={() => {\n          clearRecentChannels();\n          showToast(Toast.Style.Success, \"Cleared All Recent Channels\");\n          if (refresh) refresh();\n        }}\n        icon={{ source: Icon.Trash, tintColor: Color.Red }}\n        shortcut={{ modifiers: [\"cmd\", \"shift\"], key: \"r\" }}\n      />\n    </ActionPanel.Section>\n  );\n};\n"],
  "mappings": "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S,SAAS,SAAS,SAAS,QAAQ,SAAS,SAAS,SAAS,QAAQ,eAAe,SAAS,SAAS,OAAO,SAAS,QAAQ,SAAS,QAAQ,OAAO,SAAS,OAAO,OAAO,EAAI,SAAS,OAAO,QAAQ,OAAO,MAAM,SAAS,OAAO,OAAO,OAAO,OAAO,OAAO,SAAS,SAAS,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,OAAO,SAAS,SAAS,SAAS,SAAS,OAAO,OAAO,OAAO,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,MAAM,YAAe,OAAO,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAO,SAAS,OAAO,SAAS,SAAS,SAAS,YAAe,MAAM,SAAS,KAAK,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,SAAS,KAAK,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,MAAM,OAAO,MAAM,SAAS,KAAK,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAO,OAAO,OAAO,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,GAAK,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,SAAS,YAAe,MAAM,OAAS,UAAU,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,SAAS,KAAK,YAAe,OAAO,OAAS,OAAO,OAAS,KAAK,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,QAAQ,OAAS,QAAQ,SAAS,QAAQ,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,OAAS,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,SAAS,SAAS,OAAS,MAAM,OAAS,MAAM,YAAe,OAAO,YAAe,MAAM,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,OAAO,OAAS,SAAS,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,OAAS,OAAO,OAAS,KAAK,OAAS,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,SAAS,KAAK,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,SAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAS,SAAS,OAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,OAAS,QAAQ,OAAS,QAAQ,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,YAAe,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAO,SAAS,OAAO,SAAS,OAAS,QAAQ,OAAS,QAAQ,OAAO,OAAO,OAAS,OAAO,YAAe,OAAO,YAAe,MAAM,YAAe,OAAO,OAAS,MAAM,OAAS,OAAO,YAAe,OAAO,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAO,QAAQ,OAAO,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,SAAS,QAAQ,OAAS,UAAU,OAAS,SAAS,OAAS,SAAS,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,SAAS,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,SAAS,OAAS,QAAQ,OAAS,SAAS,OAAS,SAAS,OAAS,KAAK,OAAO,QAAQ,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,KAAK,OAAS,UAAU,OAAS,UAAU,OAAS,KAAK,OAAS,MAAM,OAAS,KAAK,OAAS,MAAM,OAAS,OAAO,OAAS,MAAM,OAAS,QAAQ,OAAS,QAAQ,OAAS,SAAS,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,UAAU,OAAS,OAAO,OAAS,MAAM,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,QAAQ,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,OAAO,OAAS,QAAQ,OAAS,QAAQ,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAAM,OAAS,OAAO,OAAS,OAAO,OAAS,MAAM,OAAS,MAA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",
  "names": ["defaultLocale", "localesData", "lowercaseLocaleLookup", "getDefaultLocale", "setDefaultLocale", "locale", "getLocaleData", "addLocaleData", "localeData", "Error", "toLowerCase", "resolveLocale", "_LocaleDataStore", "resolveLocale", "locale", "options", "localeMatcher", "resolveLocaleLookup", "RangeError", "resolvedLocale", "parts", "split", "length", "pop", "join", "$", "af", "n", "am", "ar", "s", "String", "split", "t0", "Number", "n100", "slice", "ast", "v0", "be", "n10", "br", "n1000000", "bs", "i", "f", "i10", "i100", "f10", "f100", "ceb", "cs", "cy", "da", "dsb", "dz", "ff", "fr", "i1000000", "ga", "gd", "he", "is", "ksh", "lt", "lv", "v", "length", "mk", "mt", "pa", "pl", "pt", "ro", "ru", "se", "si", "sl", "as", "az", "bg", "bn", "ca", "ce", "chr", "de", "ee", "el", "en", "es", "et", "eu", "fa", "fi", "fil", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hr", "hsb", "hu", "hy", "ia", "id", "ig", "it", "ja", "jgo", "jv", "ka", "kea", "kk", "kl", "km", "kn", "ko", "ku", "ky", "lb", "lkt", "lo", "ml", "mn", "mr", "ms", "my", "nb", "ne", "nl", "nn", "no", "or", "pcm", "ps", "rm", "sah", "sd", "sk", "so", "sq", "sr", "su", "sv", "sw", "ta", "te", "th", "ti", "tk", "to", "tr", "ug", "uk", "ur", "uz", "vi", "wae", "wo", "yi", "yo", "yue", "zh", "zu", "getPluralRulesLocale", "locale", "getLanguageFromLanguageTag", "LANGUAGE_REG_EXP", "languageTag", "match", "TypeError", "_PluralRuleFunctions", "_interopRequireDefault", "_getPluralRulesLocale", "PluralRules", "locale", "options", "_classCallCheck", "locales", "supportedLocalesOf", "length", "RangeError", "type", "$", "PluralRuleFunctions", "number", "filter", "_LocaleDataStore", "_resolveLocale", "_interopRequireDefault", "_PluralRules", "UNITS", "NUMERIC_VALUES", "STYLE_VALUES", "LOCALE_MATCHER_VALUES", "RelativeTimeFormat", "locales", "options", "_classCallCheck", "_defineProperty", "numeric", "style", "styleFallback", "localeMatcher", "undefined", "indexOf", "RangeError", "push", "locale", "supportedLocalesOf", "Error", "PluralRules", "length", "pluralRules", "console", "warn", "Intl", "NumberFormat", "numberFormat", "numberingSystem", "resolvedOptions", "styles", "Object", "keys", "_arr", "_i", "_parseFormatArgs", "parseFormatArgs", "arguments", "_parseFormatArgs2", "_slicedToArray", "number", "unit", "getRule", "replace", "formatNumber", "Math", "abs", "_parseFormatArgs3", "_parseFormatArgs4", "rule", "valueIndex", "type", "value", "parts", "slice", "concat", "formatNumberToParts", "map", "part", "_objectSpread", "unitMessages", "message", "current", "pluralizedMessages", "isNegative", "quantifier", "select", "other", "format", "String", "formatToParts", "Array", "isArray", "TypeError", "filter", "addLocale", "addLocaleData", "setDefaultLocale", "getDefaultLocale", "UNIT_ERROR", "parseUnit", "_typeof", "NUMBER_ERROR", "parseNumber", "Number", "isFinite", "isNegativeZero", "args", "require_index_commonjs", "__commonJSMin", "exports", "module", "Cache", "cache", "_len", "keys", "_key", "_i", "key", "_typeof", "_len2", "_key2", "value", "pop", "lastKey", "_i2", "chooseLocale", "locales", "isLocaleDataAvailable", "_iterator", "_isArray", "_i", "_ref", "locale", "parts", "split", "length", "pop", "join", "Error", "intlDateTimeFormatSupportedLocale", "intlDateTimeFormatSupported", "Intl", "DateTimeFormat", "supportedLocalesOf", "isIntlAvailable", "_typeof", "minute", "hour", "day", "week", "month", "year", "getSecondsInUnit", "unit", "_units", "getStepDenominator", "step", "factor", "undefined", "unit", "formatAs", "getRoundFunction", "round", "Math", "floor", "getDiffRatioToNextRoundedNumber", "_units", "_round", "getStepMinTime", "step", "_ref", "prevStep", "timestamp", "now", "future", "round", "minTime", "id", "unit", "undefined", "threshold", "_typeof", "default", "getMinTimeForUnit", "toUnit", "fromUnit", "formatAs", "test", "console", "warn", "JSON", "stringify", "_ref2", "toUnitAmount", "fromUnitAmount", "_getStepDenominator", "_interopRequireDefault", "_getStepMinTime", "_round", "getStep", "steps", "secondsPassed", "_ref", "now", "future", "round", "units", "getNextStep", "filterStepsByUnits", "step", "_getStep", "prevStep", "indexOf", "nextStep", "undefined", "_ref2", "length", "i", "getStepIndex", "granularity", "secondsPassedGranular", "Math", "abs", "options", "minTime", "_objectSpread", "timestamp", "filter", "_ref3", "unit", "formatAs", "_units", "_round", "getTimeToNextUpdateForUnit", "unit", "timestamp", "_ref", "now", "round", "unitDenominator", "future", "preciseAmount", "Math", "abs", "roundedAmount", "getDiffToPreviousRoundedNumber", "getDiffToNextRoundedNumber", "_getTimeToNextUpdateForUnit2", "_interopRequireDefault", "_getStepMinTime", "_round", "YEAR", "INFINITY", "getTimeToNextUpdate", "date", "step", "_ref", "prevStep", "nextStep", "now", "future", "round", "timestamp", "getTime", "getTimeToNextUpdateForUnit", "unit", "timeToStepChange", "getTimeToStepChange", "undefined", "timeToNextUpdate", "getRoundFunction", "formatAs", "Math", "min", "getStepChangesAt", "currentOrNextStep", "_ref2", "minTime", "_ref3", "stepChangesAt", "localesData", "getLocaleData", "locale", "addLocaleData", "localeData", "Error", "formatAs", "_round", "_interopRequireDefault", "steps", "round", "labels", "_round", "_interopRequireDefault", "round", "steps", "filter", "step", "formatAs", "_units", "factor", "unit", "threshold", "threshold_for_now", "minute", "granularity", "hour", "threshold_for_minute", "day", "week", "month", "year", "_approximate", "_interopRequireDefault", "gradation", "approximate", "flavour", "units", "_approximate", "_interopRequireDefault", "gradation", "approximate", "flavour", "units", "getDate", "value", "Date", "_approximate", "_interopRequireDefault", "_round", "_units", "_helpers", "_default", "step_", "step", "_objectSpread", "minTime", "undefined", "_typeof", "_arr", "Object", "keys", "_i", "key", "threshold", "default", "formatAs", "unit", "_renameLegacyProperties", "_interopRequireDefault", "_default", "style_", "style", "_objectSpread", "steps", "gradation", "map", "renameLegacyProperties", "labels", "flavour", "_steps", "_locale", "_renameLegacyProperties", "_interopRequireDefault", "steps", "formatAs", "formatters", "monthAndDay", "minTime", "timestamp", "_ref", "future", "getMinTimeForUnit", "format", "value", "locale", "dayMonth", "Intl", "DateTimeFormat", "month", "day", "yearMonthAndDay", "_ref2", "maxFittingNow", "Date", "getFullYear", "getTime", "minFittingNow", "dayMonthYear", "year", "push", "labels", "_twitter", "_interopRequireDefault", "twitter", "steps", "formatAs", "concat", "_twitter", "_interopRequireDefault", "twitter", "steps", "filter", "step", "formatAs", "_twitterMinute", "_interopRequireDefault", "twitterMinute", "steps", "formatAs", "concat", "_units", "_twitter", "_interopRequireDefault", "twitter", "steps", "filter", "step", "formatAs", "map", "_objectSpread", "minTime", "minute", "steps", "formatAs", "labels", "_mini", "_interopRequireDefault", "mini", "steps", "formatAs", "concat", "_mini", "_interopRequireDefault", "mini", "steps", "filter", "step", "formatAs", "_miniMinute", "_interopRequireDefault", "miniMinute", "steps", "formatAs", "concat", "_round", "_interopRequireDefault", "_roundMinute", "_approximate", "_approximateTime", "_twitter", "_twitterNow", "_twitterMinute", "_twitterMinuteNow", "_twitterFirstMinute", "_mini", "_miniNow", "_miniMinute", "_miniMinuteNow", "getStyleByName", "style", "round", "roundMinute", "approximate", "approximateTime", "mini", "miniNow", "miniMinute", "miniMinuteNow", "twitter", "twitterNow", "twitterMinute", "twitterMinuteNow", "twitterFirstMinute", "_relativeTimeFormat", "_interopRequireDefault", "_cache", "_locale", "_getStep3", "_getStepDenominator", "_getTimeToNextUpdate", "_LocaleDataStore", "_roundMinute", "_getStyleByName", "_round", "TimeAgo", "locales", "_ref", "polyfill", "_classCallCheck", "locale", "concat", "getDefaultLocale", "getLocaleData", "Intl", "NumberFormat", "numberFormat", "IntlRelativeTimeFormat", "RelativeTimeFormat", "IntlPluralRules", "PluralRules", "RelativeTimeFormatPolyfill", "relativeTimeFormatCache", "Cache", "pluralRulesCache", "input", "style", "options", "isStyle", "undefined", "defaultStyle", "timestamp", "getTimestamp", "_this$getLabels", "getLabels", "flavour", "labels", "labelsType", "now", "Date", "secondsPassed", "future", "nowLabel", "getNowLabel", "long", "custom", "date", "time", "elapsed", "units", "getTimeIntervalMeasurementUnits", "round", "_getStep", "gradation", "steps", "getNextStep", "_getStep2", "_slicedToArray", "prevStep", "step", "nextStep", "formattedDate", "formatDateForStep", "getTimeToNextUpdate", "timeToNextUpdate", "_this", "_ref2", "format", "formatAs", "unit", "value", "formatValue", "Error", "JSON", "stringify", "amount", "Math", "abs", "granularity", "valueForFormatting", "sign", "getFormatter", "_ref3", "getFormattingRule", "replace", "formatNumber", "formattingRules", "_ref4", "pastOrFuture", "quantifierRules", "quantifier", "getPluralRules", "select", "other", "number", "String", "get", "put", "map", "localeData", "_iterator", "_isArray", "_i2", "_ref5", "_labelsType", "defaultLocale", "setDefaultLocale", "addDefaultLocale", "defaultLocaleHasBeenSpecified", "console", "error", "addLocale", "addLabels", "name", "constructor", "isMockedDate", "getTime", "_typeof", "object", "allowedUnits", "Object", "keys", "push", "filter", "indexOf", "nowLabels", "longLabels", "past", "second", "current", "OBJECT_CONSTRUCTOR", "isObject", "variable", "isStyleObject", "Array", "isArray", "require_index_commonjs", "__commonJSMin", "exports", "module", "locale", "require_rng", "__commonJSMin", "exports", "rng", "_crypto", "_interopRequireDefault", "obj", "rnds8Pool", "poolPtr", "require_regex", "__commonJSMin", "exports", "_default", "require_validate", "__commonJSMin", "exports", "_regex", "_interopRequireDefault", "obj", "validate", "uuid", "_default", "require_stringify", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "byteToHex", "i", "stringify", "arr", "offset", "uuid", "_default", "require_v1", "__commonJSMin", "exports", "_rng", "_interopRequireDefault", "_stringify", "obj", "_nodeId", "_clockseq", "_lastMSecs", "_lastNSecs", "v1", "options", "buf", "offset", "i", "b", "node", "clockseq", "seedBytes", "msecs", "nsecs", "dt", "tl", "tmh", "n", "_default", "require_parse", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "parse", "uuid", "v", "arr", "_default", "require_v35", "__commonJSMin", "exports", "_default", "_stringify", "_interopRequireDefault", "_parse", "obj", "stringToBytes", "str", "bytes", "i", "DNS", "URL", "name", "version", "hashfunc", "generateUUID", "value", "namespace", "buf", "offset", "require_md5", "__commonJSMin", "exports", "_crypto", "_interopRequireDefault", "obj", "md5", "bytes", "_default", "require_v3", "__commonJSMin", "exports", "_v", "_interopRequireDefault", "_md", "obj", "v3", "_default", "require_v4", "__commonJSMin", "exports", "_rng", "_interopRequireDefault", "_stringify", "obj", "v4", "options", "buf", "offset", "rnds", "_default", "require_sha1", "__commonJSMin", "exports", "_crypto", "_interopRequireDefault", "obj", "sha1", "bytes", "_default", "require_v5", "__commonJSMin", "exports", "_v", "_interopRequireDefault", "_sha", "obj", "v5", "_default", "require_nil", "__commonJSMin", "exports", "_default", "require_version", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "version", "uuid", "_default", "require_dist", "__commonJSMin", "exports", "_v", "_v2", "_v3", "_v4", "_nil", "_version", "_validate", "_stringify", "_parse", "_interopRequireDefault", "obj", "require_extend", "__commonJSMin", "exports", "module", "hasOwn", "toStr", "defineProperty", "gOPD", "isArray", "arr", "isPlainObject", "obj", "hasOwnConstructor", "hasIsPrototypeOf", "key", "setProperty", "target", "options", "getProperty", "name", "extend", "src", "copy", "copyIsArray", "clone", "i", "length", "deep", "require_lib", "__commonJSMin", "exports", "module", "conversions", "sign", "x", "evenRound", "createNumberConversion", "bitLength", "typeOpts", "lowerBound", "upperBound", "moduloVal", "moduloBound", "V", "opts", "val", "c", "S", "n", "U", "d", "a", "b", "require_utils", "__commonJSMin", "exports", "module", "target", "source", "keys", "impl", "wrapper", "require_tr46", "__commonJSMin", "exports", "module", "punycode", "mappingTable", "PROCESSING_OPTIONS", "normalize", "str", "s", "findStatus", "val", "start", "end", "mid", "target", "regexAstralSymbols", "countSymbols", "string", "mapChars", "domain_name", "useSTD3", "processing_option", "hasError", "processed", "len", "i", "codePoint", "status", "combiningMarksRegex", "validateLabel", "label", "error", "processing", "result", "labels", "validation", "verifyDnsLength", "l", "total", "require_url_state_machine", "__commonJSMin", "exports", "module", "punycode", "tr46", "specialSchemes", "failure", "countSymbols", "str", "at", "input", "idx", "c", "isASCIIDigit", "isASCIIAlpha", "isASCIIAlphanumeric", "isASCIIHex", "isSingleDot", "buffer", "isDoubleDot", "isWindowsDriveLetterCodePoints", "cp1", "cp2", "isWindowsDriveLetterString", "string", "isNormalizedWindowsDriveLetterString", "containsForbiddenHostCodePoint", "containsForbiddenHostCodePointExcludingPercent", "isSpecialScheme", "scheme", "isSpecial", "url", "defaultPort", "percentEncode", "hex", "utf8PercentEncode", "buf", "i", "utf8PercentDecode", "output", "isC0ControlPercentEncode", "extraPathPercentEncodeSet", "isPathPercentEncode", "extraUserinfoPercentEncodeSet", "isUserinfoPercentEncode", "percentEncodeChar", "encodeSetPredicate", "cStr", "parseIPv4Number", "R", "parseIPv4", "parts", "numbers", "part", "n", "ipv4", "counter", "serializeIPv4", "address", "parseIPv6", "pieceIndex", "compress", "pointer", "value", "length", "numbersSeen", "ipv4Piece", "number", "swaps", "temp", "serializeIPv6", "findLongestZeroSequence", "ignore0", "parseHost", "isSpecialArg", "parseOpaqueHost", "domain", "asciiDomain", "ipv4Host", "decoded", "arr", "maxIdx", "maxLen", "currStart", "currLen", "serializeHost", "host", "trimControlChars", "trimTabAndNewline", "shortenPath", "path", "isNormalizedWindowsDriveLetter", "includesCredentials", "cannotHaveAUsernamePasswordPort", "URLStateMachine", "base", "encodingOverride", "stateOverride", "res", "ret", "len", "codePoint", "encodedCodePoints", "port", "fileOtherwiseCodePoints", "serializeURL", "excludeFragment", "serializeOrigin", "tuple", "result", "options", "usm", "username", "password", "integer", "require_URL_impl", "__commonJSMin", "exports", "usm", "constructorArgs", "url", "base", "parsedBase", "parsedURL", "v", "input", "require_URL", "__commonJSMin", "exports", "module", "conversions", "utils", "Impl", "impl", "URL", "url", "args", "i", "V", "obj", "constructorArgs", "privateData", "require_public_api", "__commonJSMin", "exports", "require_lib", "__commonJSMin", "exports", "module", "_interopDefault", "ex", "Stream", "http", "Url", "whatwgUrl", "https", "zlib", "Readable", "BUFFER", "TYPE", "Blob", "blobParts", "options", "buffers", "size", "a", "length", "i", "element", "buffer", "type", "buf", "ab", "readable", "start", "end", "relativeStart", "relativeEnd", "span", "slicedBuffer", "blob", "FetchError", "message", "systemError", "convert", "INTERNALS", "PassThrough", "Body", "body", "_this", "_ref", "_ref$size", "_ref$timeout", "timeout", "isURLSearchParams", "isBlob", "err", "error", "consumeBody", "ct", "_this2", "_this3", "convertBody", "proto", "name", "desc", "_this4", "accum", "accumBytes", "abort", "resolve", "reject", "resTimeout", "chunk", "headers", "charset", "res", "str", "obj", "clone", "instance", "p1", "p2", "extractContentType", "getTotalBytes", "writeToStream", "dest", "invalidTokenRegex", "invalidHeaderCharRegex", "validateName", "validateValue", "value", "find", "map", "key", "MAP", "Headers", "init", "rawHeaders", "headerNames", "headerName", "method", "pairs", "pair", "callback", "thisArg", "getHeaders", "_pairs$i", "createHeadersIterator", "kind", "k", "INTERNAL", "target", "iterator", "HeadersIteratorPrototype", "_INTERNAL", "index", "values", "len", "exportNodeCompatibleHeaders", "hostHeaderKey", "createHeadersLenient", "val", "INTERNALS$1", "STATUS_CODES", "Response", "opts", "status", "contentType", "INTERNALS$2", "URL", "parse_url", "format_url", "parseURL", "urlStr", "streamDestructionSupported", "isRequest", "input", "isAbortSignal", "signal", "Request", "parsedURL", "inputBody", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "agent", "AbortError", "URL$1", "PassThrough$1", "isDomainOrSubdomain", "destination", "original", "orig", "fetch", "url", "send", "response", "abortAndFinalize", "finalize", "req", "reqTimeout", "socket", "location", "locationURL", "requestOpts", "response_options", "codings", "zlibOptions", "code", "require_is_stream", "__commonJSMin", "exports", "module", "isStream", "stream", "GaxiosError", "message", "options", "response", "exports", "getRetryConfig", "err", "config", "getConfig", "retryRanges", "shouldRetryRequest", "delay", "_a", "backoff", "resolve", "exports", "isInRange", "min", "max", "status", "require_ms", "__commonJSMin", "exports", "module", "s", "m", "h", "d", "w", "y", "val", "options", "type", "parse", "fmtLong", "fmtShort", "str", "match", "n", "ms", "msAbs", "plural", "name", "isPlural", "require_common", "__commonJSMin", "exports", "module", "setup", "env", "createDebug", "coerce", "disable", "enable", "enabled", "destroy", "key", "selectColor", "namespace", "hash", "i", "prevTime", "enableOverride", "namespacesCache", "enabledCache", "debug", "args", "self", "curr", "ms", "index", "match", "format", "formatter", "val", "extend", "v", "delimiter", "newDebug", "namespaces", "split", "len", "toNamespace", "name", "regexp", "require_browser", "__commonJSMin", "exports", "module", "formatArgs", "save", "load", "useColors", "localstorage", "warned", "args", "c", "index", "lastC", "match", "namespaces", "r", "formatters", "v", "error", "require_has_flag", "__commonJSMin", "exports", "module", "flag", "argv", "prefix", "position", "terminatorPosition", "require_supports_color", "__commonJSMin", "exports", "module", "os", "tty", "hasFlag", "env", "forceColor", "translateLevel", "level", "supportsColor", "haveStream", "streamIsTTY", "min", "osRelease", "sign", "version", "getSupportLevel", "stream", "require_node", "__commonJSMin", "exports", "module", "tty", "util", "init", "log", "formatArgs", "save", "load", "useColors", "supportsColor", "key", "obj", "prop", "_", "k", "val", "args", "name", "c", "colorCode", "prefix", "getDate", "namespaces", "debug", "keys", "i", "formatters", "v", "str", "require_src", "__commonJSMin", "exports", "module", "promisify", "fn", "req", "opts", "resolve", "reject", "err", "rtn", "exports", "events_1", "debug_1", "__importDefault", "promisify_1", "debug", "isAgent", "v", "isSecureEndpoint", "stack", "l", "createAgent", "callback", "opts", "Agent", "_opts", "req", "fn", "timedOut", "timeoutId", "timeoutMs", "onerror", "err", "ontimeout", "callbackError", "onsocket", "socket", "module", "debug_1", "__importDefault", "debug", "parseProxyResponse", "socket", "resolve", "reject", "buffersLength", "buffers", "read", "b", "ondata", "cleanup", "onend", "onerror", "onclose", "err", "buffered", "firstLine", "statusCode", "exports", "net_1", "__importDefault", "tls_1", "url_1", "assert_1", "debug_1", "agent_base_1", "parse_proxy_response_1", "debug", "HttpsProxyAgent", "_opts", "opts", "proxy", "isHTTPS", "req", "secureProxy", "socket", "headers", "payload", "host", "port", "secureEndpoint", "isDefaultPort", "name", "proxyResponsePromise", "statusCode", "buffered", "resume", "servername", "omit", "fakeSocket", "s", "exports", "secure", "protocol", "obj", "keys", "ret", "key", "agent_1", "__importDefault", "createHttpsProxyAgent", "opts", "module", "extend_1", "__importDefault", "https_1", "node_fetch_1", "querystring_1", "is_stream_1", "url_1", "common_1", "retry_1", "fetch", "hasFetch", "hasWindow", "hasBuffer", "hasHeader", "options", "header", "getHeader", "key", "HttpsProxyAgent", "loadProxy", "proxy", "skipProxy", "url", "noProxyEnv", "_a", "noProxyUrls", "parsedURL", "getProxy", "Gaxios", "defaults", "opts", "res", "data", "translatedResponse", "e", "err", "shouldRetry", "config", "baseUrl", "additionalQueryParams", "prefix", "status", "params", "headers", "value", "exports", "gaxios_1", "exports", "common_1", "request", "opts", "require_bignumber", "__commonJSMin", "exports", "module", "globalObject", "BigNumber", "isNumeric", "mathceil", "mathfloor", "bignumberError", "tooManyDigits", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "POWS_TEN", "SQRT_BASE", "MAX", "clone", "configObject", "div", "convertBase", "parseNumeric", "P", "ONE", "DECIMAL_PLACES", "ROUNDING_MODE", "TO_EXP_NEG", "TO_EXP_POS", "MIN_EXP", "MAX_EXP", "CRYPTO", "MODULO_MODE", "POW_PRECISION", "FORMAT", "ALPHABET", "v", "alphabet", "c", "caseChanged", "e", "i", "isNum", "len", "str", "x", "intCheck", "round", "obj", "p", "n", "s", "out", "maxOrMin", "pow2_53", "random53bitInt", "dp", "a", "b", "k", "rand", "args", "sum", "decimal", "toBaseOut", "baseIn", "baseOut", "j", "arr", "arrL", "sign", "callerIsToString", "d", "r", "xc", "y", "rm", "toFixedPoint", "coeffToString", "multiply", "base", "m", "temp", "xlo", "xhi", "carry", "klo", "khi", "compare", "aL", "bL", "cmp", "subtract", "more", "prod", "prodL", "q", "qc", "rem", "remL", "rem0", "xi", "xL", "yc0", "yL", "yz", "yc", "bitFloor", "format", "id", "c0", "ne", "toExponential", "method", "normalise", "basePrefix", "dotAfter", "dotBefore", "isInfinityOrNaN", "whitespaceOrPlus", "p1", "p2", "sd", "ni", "rd", "pows10", "valueOf", "half", "isModExp", "nIsBig", "nIsNeg", "nIsOdd", "isOdd", "t", "xLTy", "xe", "ye", "xcL", "ycL", "ylo", "yhi", "zc", "sqrtBase", "rep", "g1", "g2", "groupSeparator", "intPart", "fractionPart", "isNeg", "intDigits", "md", "d0", "d1", "d2", "exp", "n0", "n1", "z", "l", "min", "max", "name", "zs", "require_stringify", "__commonJSMin", "exports", "module", "BigNumber", "JSON", "f", "n", "cx", "escapable", "gap", "indent", "meta", "rep", "quote", "string", "a", "c", "str", "key", "holder", "i", "k", "v", "length", "mind", "partial", "value", "isBigNumber", "replacer", "space", "require_parse", "__commonJSMin", "exports", "module", "BigNumber", "suspectProtoRx", "suspectConstructorRx", "json_parse", "options", "_options", "at", "ch", "escapee", "text", "error", "m", "next", "c", "number", "string", "hex", "i", "uffff", "startAt", "white", "word", "value", "array", "object", "key", "source", "reviver", "result", "walk", "holder", "k", "v", "require_json_bigint", "__commonJSMin", "exports", "module", "json_stringify", "json_parse", "options", "gaxios_1", "jsonBigint", "exports", "getBaseUrl", "baseUrl", "validate", "options", "key", "metadataAccessor", "type", "noResponseRetries", "fastFail", "property", "res", "fastFailMetadataRequest", "requestTimeout", "e", "secondaryOptions", "responded", "r1", "err", "r2", "instance", "project", "detectGCPAvailableRetries", "cachedIsAvailableResponse", "isAvailable", "code", "resetIsAvailableCache", "require_base64_js", "__commonJSMin", "exports", "byteLength", "toByteArray", "fromByteArray", "lookup", "revLookup", "Arr", "code", "i", "len", "getLens", "b64", "validLen", "placeHoldersLen", "lens", "_byteLength", "tmp", "arr", "curByte", "tripletToBase64", "num", "encodeChunk", "uint8", "start", "end", "output", "extraBytes", "parts", "maxChunkLength", "len2", "require_text_min", "__commonJSMin", "exports", "l", "m", "k", "a", "c", "r", "t", "u", "f", "q", "e", "h", "d", "b", "g", "n", "v", "p", "require_crypto", "__commonJSMin", "exports", "base64js", "crypto_1", "BrowserCrypto", "str", "inputBuffer", "outputBuffer", "count", "array", "base64", "pubkey", "data", "signature", "algo", "dataArray", "signatureArray", "cryptoKey", "privateKey", "result", "uint8array", "text", "key", "msg", "rawKey", "enc", "require_crypto", "__commonJSMin", "exports", "crypto", "NodeCrypto", "str", "count", "pubkey", "data", "signature", "verifier", "privateKey", "signer", "base64", "text", "key", "msg", "cryptoKey", "toBuffer", "toArrayBuffer", "buffer", "arrayBuffer", "require_crypto", "__commonJSMin", "exports", "crypto_1", "crypto_2", "createCrypto", "hasBrowserCrypto", "fromArrayBufferToHex", "arrayBuffer", "byte", "require_options", "__commonJSMin", "exports", "validate", "options", "vpairs", "pair", "e", "require_transporters", "__commonJSMin", "exports", "gaxios_1", "options_1", "pkg", "PRODUCT_NAME", "DefaultTransporter", "opts", "uaValue", "authVersion", "nodeVersion", "callback", "e", "r", "res", "err", "body", "err2", "require_arrify", "__commonJSMin", "exports", "module", "arrify", "value", "require_safe_buffer", "__commonJSMin", "exports", "module", "buffer", "Buffer", "copyProps", "src", "dst", "key", "SafeBuffer", "arg", "encodingOrOffset", "length", "size", "fill", "encoding", "buf", "require_param_bytes_for_alg", "__commonJSMin", "exports", "module", "getParamSize", "keySize", "result", "paramBytesForAlg", "getParamBytesForAlg", "alg", "paramBytes", "require_ecdsa_sig_formatter", "__commonJSMin", "exports", "module", "Buffer", "getParamBytesForAlg", "MAX_OCTET", "CLASS_UNIVERSAL", "PRIMITIVE_BIT", "TAG_SEQ", "TAG_INT", "ENCODED_TAG_SEQ", "ENCODED_TAG_INT", "base64Url", "base64", "signatureAsBuffer", "signature", "derToJose", "alg", "paramBytes", "maxEncodedParamLength", "inputLength", "offset", "seqLength", "rLength", "rOffset", "sLength", "sOffset", "rPadding", "sPadding", "dst", "o", "countPadding", "buf", "start", "stop", "padding", "needsSign", "joseToDer", "signatureBytes", "rsBytes", "shortLength", "require_authclient", "__commonJSMin", "exports", "events_1", "transporters_1", "AuthClient", "credentials", "headers", "require_loginticket", "__commonJSMin", "exports", "LoginTicket", "env", "pay", "payload", "require_oauth2client", "__commonJSMin", "exports", "querystring", "stream", "formatEcdsa", "crypto_1", "authclient_1", "loginticket_1", "CodeChallengeMethod", "CertificateFormat", "OAuth2Client", "optionsOrClientId", "clientSecret", "redirectUri", "opts", "crypto", "codeVerifier", "codeChallenge", "codeOrOptions", "callback", "options", "r", "e", "url", "values", "res", "tokens", "refreshToken", "p", "data", "refreshedAccessToken", "thisCreds", "headers", "err", "credentials", "token", "parameters", "retry", "r2", "statusCode", "mayRequireRefresh", "mayRequireRefreshWithNoRefreshToken", "isReadableStream", "isAuthErr", "response", "accessToken", "info", "nowTime", "format", "cacheControl", "cacheAge", "regexResult", "certificates", "key", "now", "jwt", "certs", "requiredAudience", "issuers", "maxExpiry", "segments", "signed", "signature", "envelope", "payload", "cert", "iat", "exp", "earliest", "latest", "aud", "audVerified", "accessTokenResponse", "expiryDate", "require_computeclient", "__commonJSMin", "exports", "arrify", "gcpMetadata", "oauth2client_1", "Compute", "options", "refreshToken", "tokenPath", "data", "instanceOptions", "e", "tokens", "targetAudience", "idTokenPath", "idToken", "res", "require_idtokenclient", "__commonJSMin", "exports", "oauth2client_1", "IdTokenClient", "options", "url", "idToken", "payloadB64", "require_envDetect", "__commonJSMin", "exports", "gcpMetadata", "GCPEnv", "envPromise", "clear", "getEnv", "getEnvMemoized", "env", "isAppEngine", "isCloudFunction", "isComputeEngine", "isKubernetesEngine", "isCloudRun", "require_data_stream", "__commonJSMin", "exports", "module", "Buffer", "Stream", "util", "DataStream", "data", "require_buffer_equal_constant_time", "__commonJSMin", "exports", "module", "Buffer", "SlowBuffer", "bufferEq", "a", "b", "c", "i", "that", "origBufEqual", "origSlowBufEqual", "require_jwa", "__commonJSMin", "exports", "module", "bufferEqual", "Buffer", "crypto", "formatEcdsa", "util", "MSG_INVALID_ALGORITHM", "MSG_INVALID_SECRET", "MSG_INVALID_VERIFIER_KEY", "MSG_INVALID_SIGNER_KEY", "supportsKeyObjects", "checkIsPublicKey", "key", "typeError", "checkIsPrivateKey", "checkIsSecretKey", "fromBase64", "base64", "toBase64", "base64url", "padding", "i", "template", "args", "errMsg", "bufferOrString", "obj", "normalizeInput", "thing", "createHmacSigner", "bits", "secret", "hmac", "sig", "createHmacVerifier", "signature", "computedSig", "createKeySigner", "privateKey", "signer", "createKeyVerifier", "publicKey", "verifier", "createPSSKeySigner", "createPSSKeyVerifier", "createECDSASigner", "inner", "createECDSAVerifer", "result", "createNoneSigner", "createNoneVerifier", "algorithm", "signerFactories", "verifierFactories", "match", "algo", "require_tostring", "__commonJSMin", "exports", "module", "Buffer", "obj", "require_sign_stream", "__commonJSMin", "exports", "module", "Buffer", "DataStream", "jwa", "Stream", "toString", "util", "base64url", "string", "encoding", "jwsSecuredInput", "header", "payload", "encodedHeader", "encodedPayload", "jwsSign", "opts", "secretOrKey", "algo", "securedInput", "signature", "SignStream", "secret", "secretStream", "e", "require_verify_stream", "__commonJSMin", "exports", "module", "Buffer", "DataStream", "jwa", "Stream", "toString", "util", "JWS_REGEX", "isObject", "thing", "safeJsonParse", "headerFromJWS", "jwsSig", "encodedHeader", "securedInputFromJWS", "signatureFromJWS", "payloadFromJWS", "encoding", "payload", "isValidJws", "string", "jwsVerify", "algorithm", "secretOrKey", "err", "signature", "securedInput", "algo", "jwsDecode", "opts", "header", "VerifyStream", "secretStream", "valid", "obj", "e", "require_jws", "__commonJSMin", "exports", "SignStream", "VerifyStream", "ALGORITHMS", "opts", "require_forge", "__commonJSMin", "exports", "module", "require_baseN", "__commonJSMin", "exports", "module", "api", "_reverseAlphabets", "input", "alphabet", "maxline", "output", "_encodeWithByteBuffer", "base", "first", "digits", "j", "carry", "regex", "table", "i", "bytes", "value", "k", "require_util", "__commonJSMin", "exports", "module", "forge", "baseN", "util", "callback", "handler", "event", "msg", "copy", "callbacks", "now", "attr", "div", "oldSetImmediate", "x", "_checkBitsParam", "n", "ByteStringBuffer", "b", "arr", "i", "_MAX_CONSTRUCTED_STRING_LENGTH", "d", "bytes", "str", "buffer", "rval", "max", "count", "c", "len", "DataBuffer", "options", "isArrayBuffer", "isArrayBufferView", "amount", "growSize", "src", "dst", "encoding", "view", "input", "s", "s1", "s2", "s3", "t", "hex", "_base64", "_base64Idx", "_base58", "maxline", "line", "output", "chr1", "chr2", "chr3", "enc1", "enc2", "enc3", "enc4", "offset", "out", "j", "k", "api", "raw", "start", "flg", "_setStorageObject", "id", "obj", "error", "_getStorageObject", "_setItem", "key", "data", "_getItem", "_removeItem", "empty", "prop", "_clearItems", "_callStorageFunction", "func", "args", "location", "type", "done", "exception", "idx", "ex", "format", "re", "match", "part", "argi", "parts", "last", "code", "number", "decimals", "dec_point", "thousands_sep", "size", "ip", "num", "blanks", "e", "zeros", "zeroGroups", "zeroMaxGroup", "group", "blobUrl", "st", "et", "sample", "samples", "numWorkers", "avg", "map", "err", "results", "reduce", "workers", "worker", "overlaps", "r1", "overlap", "r2", "require_cipher", "__commonJSMin", "exports", "module", "forge", "algorithm", "key", "api", "name", "BlockCipher", "options", "opts", "input", "pad", "output", "require_cipherModes", "__commonJSMin", "exports", "module", "forge", "modes", "options", "input", "output", "finish", "i", "padding", "len", "count", "transformIV", "inputLength", "partialBytes", "inc32", "iv", "additionalData", "ivLength", "from64To32", "overflow", "rval", "lengths", "tag", "x", "y", "z_i", "v_i", "x_i", "out", "lsb", "z", "idx", "ah", "h", "bits", "multiplier", "perInt", "size", "m", "tmp", "shft", "mid", "half", "j", "m_i", "m_j", "c", "blockSize", "ints", "blocks", "block", "num", "require_aes", "__commonJSMin", "exports", "module", "forge", "key", "iv", "output", "mode", "cipher", "_createCipher", "name", "init", "initialize", "self", "inBlock", "outBlock", "_updateBlock", "options", "tmp", "i", "len", "encryptOp", "_expandKey", "decrypt", "registerAlgorithm", "factory", "Nb", "sbox", "isbox", "rcon", "mix", "imix", "xtime", "e", "ei", "e2", "e4", "e8", "sx", "sx2", "me", "ime", "n", "w", "temp", "iNk", "Nk", "Nr1", "end", "m0", "m1", "m2", "m3", "wnew", "wi", "input", "Nr", "sub", "a", "b", "d", "a2", "b2", "c2", "round", "algorithm", "start", "require_oids", "__commonJSMin", "exports", "module", "forge", "oids", "_IN", "id", "name", "_I_", "require_asn1", "__commonJSMin", "exports", "module", "forge", "asn1", "tagClass", "type", "constructed", "value", "options", "tmp", "i", "obj", "copy", "obj1", "obj2", "equal", "b", "b2", "length", "longForm", "_checkBufferLength", "bytes", "remaining", "n", "error", "_getValueLength", "longFormBytes", "byteCount", "_fromDer", "depth", "start", "b1", "bitStringContents", "savedRead", "savedRemaining", "unused", "subOptions", "composed", "used", "tc", "asn1Options", "useBitStringContents", "len", "lenBytes", "oid", "values", "last", "valueBytes", "utc", "date", "year", "MM", "DD", "hh", "mm", "ss", "c", "end", "hhoffset", "mmoffset", "offset", "gentime", "YYYY", "fff", "isUTC", "rval", "format", "x", "v", "capture", "errors", "j", "_nonLatinRegex", "level", "indentation", "indent", "subvalues", "sub", "e", "require_md", "__commonJSMin", "exports", "module", "forge", "require_hmac", "__commonJSMin", "exports", "module", "forge", "hmac", "_key", "_md", "_ipadding", "_opadding", "ctx", "md", "key", "tmp", "i", "keylen", "bytes", "inner", "require_md5", "__commonJSMin", "exports", "module", "forge", "md5", "_initialized", "_init", "_state", "_input", "_w", "md", "int32s", "i", "msg", "encoding", "len", "_update", "finalBlock", "remaining", "overflow", "_padding", "bits", "carry", "s2", "rval", "_g", "_r", "_k", "s", "w", "bytes", "t", "a", "b", "c", "d", "f", "r", "require_pem", "__commonJSMin", "exports", "module", "forge", "pem", "msg", "options", "rval", "header", "foldHeader", "str", "rMessage", "rHeader", "rCRLF", "match", "type", "lines", "li", "line", "nl", "next", "values", "vi", "ltrim", "insertSpace", "$1", "length", "candidate", "insert", "require_des", "__commonJSMin", "exports", "module", "forge", "key", "iv", "output", "mode", "cipher", "_createCipher", "name", "self", "inBlock", "outBlock", "_updateBlock", "options", "_createKeys", "registerAlgorithm", "factory", "spfunction1", "spfunction2", "spfunction3", "spfunction4", "spfunction5", "spfunction6", "spfunction7", "spfunction8", "pc2bytes0", "pc2bytes1", "pc2bytes2", "pc2bytes3", "pc2bytes4", "pc2bytes5", "pc2bytes6", "pc2bytes7", "pc2bytes8", "pc2bytes9", "pc2bytes10", "pc2bytes11", "pc2bytes12", "pc2bytes13", "iterations", "keys", "shifts", "n", "tmp", "j", "left", "right", "i", "lefttmp", "righttmp", "input", "decrypt", "looping", "endloop", "loopinc", "right1", "right2", "algorithm", "start", "require_pbkdf2", "__commonJSMin", "exports", "module", "forge", "pkcs5", "crypto", "p", "s", "c", "dkLen", "md", "callback", "err", "key", "hLen", "len", "r", "prf", "dk", "xor", "u_c", "u_c1", "i", "j", "outer", "inner", "require_sha256", "__commonJSMin", "exports", "module", "forge", "sha256", "_initialized", "_init", "_state", "_input", "_w", "md", "int32s", "i", "msg", "encoding", "len", "_update", "finalBlock", "remaining", "overflow", "_padding", "next", "carry", "bits", "s2", "rval", "_k", "s", "w", "bytes", "t1", "t2", "s0", "s1", "ch", "maj", "a", "b", "d", "e", "f", "g", "h", "require_prng", "__commonJSMin", "exports", "module", "forge", "_crypto", "prng", "plugin", "ctx", "md", "pools", "count", "callback", "cipher", "increment", "formatKey", "formatSeed", "b", "generate", "err", "_reseed", "bytes", "_reseedSync", "_seed", "needed", "_2powK", "k", "seedBytes", "defaultSeedFile", "getRandomValues", "globalScope", "arr", "entropy", "i", "e", "hi", "lo", "next", "seed", "n", "x", "worker", "listener", "data", "require_random", "__commonJSMin", "exports", "module", "forge", "jQuery", "prng_aes", "_prng_aes_output", "_prng_aes_buffer", "key", "tmp", "seed", "spawnPrng", "ctx", "count", "callback", "_ctx", "getRandomValues", "globalScope", "_crypto", "arr", "_navBytes", "e", "require_rc2", "__commonJSMin", "exports", "module", "forge", "piTable", "s", "rol", "word", "bits", "ror", "key", "effKeyBits", "L", "T", "T1", "T8", "TM", "i", "createCipher", "encrypt", "_finish", "_input", "_output", "_iv", "mixRound", "mashRound", "j", "K", "R", "runPlan", "plan", "val", "ptr", "ctr", "cipher", "iv", "output", "input", "pad", "rval", "padding", "len", "count", "require_jsbn", "__commonJSMin", "exports", "module", "forge", "dbits", "canary", "j_lm", "BigInteger", "a", "b", "c", "nbi", "am1", "i", "x", "w", "j", "v", "am2", "xl", "xh", "l", "h", "m", "am3", "BI_FP", "BI_RM", "BI_RC", "rr", "vv", "int2char", "n", "intAt", "s", "bnpCopyTo", "r", "bnpFromInt", "nbv", "bnpFromString", "k", "mi", "sh", "bnpClamp", "bnToString", "km", "d", "p", "bnNegate", "bnAbs", "bnCompareTo", "nbits", "t", "bnBitLength", "bnpDLShiftTo", "bnpDRShiftTo", "bnpLShiftTo", "bs", "cbs", "bm", "ds", "bnpRShiftTo", "bnpSubTo", "bnpMultiplyTo", "y", "bnpSquareTo", "bnpDivRemTo", "q", "pm", "pt", "ts", "ms", "nsh", "ys", "y0", "yt", "d1", "d2", "e", "qd", "bnMod", "Classic", "cConvert", "cRevert", "cReduce", "cMulTo", "cSqrTo", "bnpInvDigit", "Montgomery", "montConvert", "montRevert", "montReduce", "u0", "montSqrTo", "montMulTo", "bnpIsEven", "bnpExp", "z", "r2", "g", "bnModPowInt", "bnClone", "bnIntValue", "bnByteValue", "bnShortValue", "bnpChunkSize", "bnSigNum", "bnpToRadix", "cs", "bnpFromRadix", "bnpFromNumber", "op_or", "bnToByteArray", "bnEquals", "bnMin", "bnMax", "bnpBitwiseTo", "op", "f", "op_and", "bnAnd", "bnOr", "op_xor", "bnXor", "op_andnot", "bnAndNot", "bnNot", "bnShiftLeft", "bnShiftRight", "lbit", "bnGetLowestSetBit", "cbit", "bnBitCount", "bnTestBit", "bnpChangeBit", "bnSetBit", "bnClearBit", "bnFlipBit", "bnpAddTo", "bnAdd", "bnSubtract", "bnMultiply", "bnDivide", "bnRemainder", "bnDivideAndRemainder", "bnpDMultiply", "bnpDAddOffset", "NullExp", "nNop", "nMulTo", "nSqrTo", "bnPow", "bnpMultiplyLowerTo", "bnpMultiplyUpperTo", "Barrett", "barrettConvert", "barrettRevert", "barrettReduce", "barrettSqrTo", "barrettMulTo", "bnModPow", "k1", "g2", "is1", "bnGCD", "bnpModInt", "bnModInverse", "ac", "u", "lowprimes", "lplim", "bnIsProbablePrime", "bnpMillerRabin", "n1", "prng", "bnGetPrng", "require_sha1", "__commonJSMin", "exports", "module", "forge", "sha1", "_initialized", "_init", "_state", "_input", "_w", "md", "int32s", "i", "msg", "encoding", "len", "_update", "finalBlock", "remaining", "overflow", "_padding", "next", "carry", "bits", "s2", "rval", "s", "w", "bytes", "t", "a", "b", "c", "d", "e", "f", "require_pkcs1", "__commonJSMin", "exports", "module", "forge", "pkcs1", "key", "message", "options", "label", "seed", "md", "mgf1Md", "keyLength", "maxLength", "error", "lHash", "PS", "PS_length", "i", "DB", "dbMask", "rsa_mgf1", "maskedDB", "seedMask", "maskedSeed", "em", "y", "db", "lHashPrime", "in_ps", "index", "j", "code", "is_0", "error_mask", "maskLength", "hash", "t", "count", "c", "require_prime", "__commonJSMin", "exports", "module", "forge", "prime", "BigInteger", "GCD_30_DELTA", "THIRTY", "op_or", "x", "y", "bits", "options", "callback", "algorithm", "prng", "rng", "b", "i", "primeincFindPrime", "primeincFindPrimeWithWorkers", "primeincFindPrimeWithoutWorkers", "num", "generateRandom", "deltaIdx", "mrTests", "getMillerRabinTests", "maxBlockTime", "_primeinc", "start", "numWorkers", "workLoad", "range", "workerScript", "err", "cores", "generate", "workers", "running", "workerMessage", "found", "e", "data", "hex", "bits1", "require_rsa", "__commonJSMin", "exports", "module", "forge", "BigInteger", "_crypto", "asn1", "util", "pki", "GCD_30_DELTA", "privateKeyValidator", "rsaPrivateKeyValidator", "rsaPublicKeyValidator", "publicKeyValidator", "digestInfoValidator", "emsaPkcs1v15encode", "md", "oid", "error", "oidBytes", "digestInfo", "digestAlgorithm", "digest", "_modPow", "x", "key", "pub", "r", "xp", "xq", "y", "m", "bt", "eb", "k", "_encodePkcs1_v1_5", "yhex", "ed", "zeros", "ml", "xhex", "_decodePkcs1_v1_5", "bits", "e", "options", "prng", "rng", "b", "i", "algorithm", "rval", "state", "n", "THIRTY", "deltaIdx", "op_or", "t1", "t2", "total", "bits1", "_getMillerRabinTests", "callback", "_detectNodeCrypto", "err", "priv", "_detectSubtleCrypto", "_intToUint8Array", "pair", "pkcs8", "privateKey", "_detectSubtleMsCrypto", "genOp", "exportOp", "keypair", "_generateKeyPair", "data", "scheme", "schemeOptions", "signature", "d", "obj", "capture", "errors", "p", "q", "dP", "dQ", "qInv", "rsaKey", "_bnToBytes", "padNum", "padByte", "numZeros", "padBytes", "em", "first", "zero", "opts", "generate", "getPrime", "num", "finish", "tmp", "hex", "bytes", "fn", "buffer", "require_pbe", "__commonJSMin", "exports", "module", "forge", "BigInteger", "asn1", "pki", "oids", "encryptedPrivateKeyValidator", "PBES2AlgorithmsValidator", "pkcs12PbeParamsValidator", "obj", "password", "options", "salt", "count", "countBytes", "dkLen", "encryptionAlgorithm", "encryptedData", "ivLen", "encOid", "cipherFn", "error", "prfAlgorithm", "md", "prfAlgorithmToMessageDigest", "dk", "iv", "cipher", "params", "createPbkdf2Params", "saltBytes", "rval", "capture", "errors", "oid", "encrypted", "epki", "maxline", "msg", "pem", "rsaKey", "algorithm", "key", "id", "iter", "n", "j", "l", "v", "result", "passBuf", "p", "s", "D", "Slen", "S", "Plen", "P", "I", "c", "i", "buf", "round", "B", "k", "Inew", "chunk", "x", "prfOidToMessageDigest", "dIvLen", "digests", "hash", "length", "bytes", "prfOid", "factory", "require_pkcs7asn1", "__commonJSMin", "exports", "module", "forge", "asn1", "p7v", "contentInfoValidator", "encryptedContentInfoValidator", "signerValidator", "require_mgf1", "__commonJSMin", "exports", "module", "forge", "mgf1", "md", "mgf", "seed", "maskLen", "t", "len", "i", "c", "require_mgf", "__commonJSMin", "exports", "module", "forge", "require_pss", "__commonJSMin", "exports", "module", "forge", "pss", "options", "hash", "mgf", "hLen", "salt_", "sLen", "prng", "pssobj", "md", "modBits", "i", "emBits", "emLen", "mHash", "salt", "m_", "h", "ps", "db", "maskLen", "dbMask", "maskedDB", "mask", "em", "checkLen", "h_", "require_x509", "__commonJSMin", "exports", "module", "forge", "asn1", "pki", "oids", "_shortNames", "publicKeyValidator", "x509CertificateValidator", "rsassaPssParameterValidator", "certificationRequestInfoValidator", "certificationRequestValidator", "rdn", "md", "rval", "set", "attr", "obj", "si", "i", "attributes", "seq", "type", "values", "vi", "ei", "_getAttribute", "options", "_readSignatureParameters", "oid", "fillDefaults", "params", "capture", "errors", "error", "_createSignatureDigest", "_verifySignature", "cert", "scheme", "hash", "mgf", "pem", "computeHash", "strict", "msg", "maxline", "key", "bytes", "digest", "hex", "csr", "sn", "_fillMissingFields", "attrs", "uniqueId", "exts", "_fillMissingExtensionFields", "ext", "algorithmOid", "child", "issuer", "subject", "tbsCertificate", "parent", "s", "iattr", "sattr", "n", "ski", "serial", "validity", "imd", "ibytes", "smd", "sbytes", "extseq", "e", "ev", "b2", "b3", "value", "gn", "altName", "cri", "_dnToAsn1", "valueTagClass", "unused", "keyIdentifier", "authorityCertIssuer", "serialNumber", "subSeq", "fullNameGeneralNames", "_signatureParametersToAsn1", "parts", "_CRIAttributesToAsn1", "valueConstructed", "jan_1_1950", "jan_1_2050", "_dateToAsn1", "date", "notBefore", "notAfter", "tbs", "dn", "certs", "caStore", "getBySubject", "ensureSubjectHasHash", "tmp", "match", "der1", "der2", "certList", "result", "chain", "validityCheckDate", "first", "depth", "selfSigned", "parents", "verified", "se", "bcExt", "keyUsageExt", "pathLen", "vfd", "ret", "require_pkcs12", "__commonJSMin", "exports", "module", "forge", "asn1", "pki", "p12", "contentInfoValidator", "pfxValidator", "safeBagValidator", "attributeValidator", "certBagValidator", "_getBagsByAttribute", "safeContents", "attrName", "attrValue", "bagType", "result", "i", "j", "bag", "obj", "strict", "password", "capture", "errors", "error", "pfx", "filter", "rval", "localKeyId", "friendlyName", "data", "_decodePkcs7Data", "md", "macKeyBytes", "macAlgorithm", "macSalt", "macIterations", "macKey", "mac", "macValue", "_decodeAuthenticatedSafe", "value", "authSafe", "contentInfo", "_decryptSafeContents", "_decodeSafeContents", "oid", "cipher", "encryptedContentAsn1", "encrypted", "res", "safeBag", "_decodeBagAttributes", "validator", "decoder", "bagAsn1", "certAsn1", "attributes", "decodedAttrs", "key", "cert", "options", "bagAttrs", "pairedCert", "sha1", "attrs", "contents", "chain", "certSafeBags", "certBagAttrs", "certSafeBag", "certSafeContents", "certCI", "keyBag", "pkAsn1", "keySafeContents", "keyCI", "safe", "macData", "count", "require_pki", "__commonJSMin", "exports", "module", "forge", "asn1", "pki", "pem", "msg", "error", "obj", "key", "maxline", "require_tls", "__commonJSMin", "exports", "module", "forge", "prf_TLS1", "secret", "label", "seed", "length", "rval", "idx", "slen", "s1", "s2", "ai", "hmac", "md5itr", "sha1itr", "md5bytes", "i", "sha1bytes", "hmac_sha1", "key", "seqNum", "record", "b", "deflate", "c", "s", "bytes", "inflate", "readVector", "lenBytes", "len", "writeVector", "v", "tls", "twoBytes", "cs", "ignore", "msg", "client", "remaining", "exts", "ext", "snl", "snType", "tmp", "msgRandom", "cRandom", "sRandom", "sessionId", "SCC", "SCE", "session", "version", "CCC", "CCE", "CKE", "cert", "asn1", "certs", "ex", "SKE", "SCR", "privateKey", "sp", "CCV", "SHD", "msgBytes", "verify", "error", "depth", "ret", "SER", "callback", "signature", "SFI", "CFI", "vd", "vdl", "prf", "SAD", "CAD", "alert", "type", "hsTable", "payload", "SHE", "CHE", "__", "R0", "R1", "R2", "R3", "R4", "ctTable", "H0", "H1", "H2", "H3", "H4", "H5", "H6", "H7", "H8", "H9", "random", "tls10", "km", "createMode", "mode", "state", "d", "utc", "options", "cipherSuites", "cSuites", "compressionMethods", "cMethods", "extensions", "serverName", "snList", "extLength", "hint", "certList", "der", "certBuffer", "certTypes", "cAs", "dn", "byteBuffer", "payloadLength", "plaintextLength", "paddingLength", "records", "data", "rec", "_certErrorToAlertDesc", "_alertDescToCertError", "desc", "chain", "vfd", "err", "cache", "capacity", "caStore", "entity", "sessionCache", "cn", "dpth", "cts", "fatal", "clearFail", "_update", "aligned", "handlers", "_readRecordHeader", "compatibleVersion", "_readRecord", "require_aesCipherSuites", "__commonJSMin", "exports", "module", "forge", "tls", "sp", "initConnectionState", "state", "c", "client", "decrypt_aes_cbc_sha1", "encrypt_aes_cbc_sha1", "record", "s", "rval", "mac", "iv", "cipher", "encrypt_aes_cbc_sha1_padding", "blockSize", "input", "decrypt", "padding", "decrypt_aes_cbc_sha1_padding", "output", "len", "paddingLength", "i", "macLen", "mac2", "compareMacs", "key", "mac1", "hmac", "require_sha512", "__commonJSMin", "exports", "module", "forge", "sha512", "sha384", "algorithm", "_initialized", "_init", "_states", "_state", "_h", "_input", "_w", "wi", "digestLength", "md", "int32s", "i", "msg", "encoding", "len", "_update", "finalBlock", "remaining", "overflow", "_padding", "next", "carry", "bits", "h", "rval", "hlen", "_k", "s", "w", "bytes", "t1_hi", "t1_lo", "t2_hi", "t2_lo", "s0_hi", "s0_lo", "s1_hi", "s1_lo", "ch_hi", "ch_lo", "maj_hi", "maj_lo", "a_hi", "a_lo", "b_hi", "b_lo", "c_hi", "c_lo", "d_hi", "d_lo", "e_hi", "e_lo", "f_hi", "f_lo", "g_hi", "g_lo", "h_hi", "h_lo", "hi", "lo", "w2", "w7", "w15", "w16", "require_asn1_validator", "__commonJSMin", "exports", "forge", "asn1", "require_ed25519", "__commonJSMin", "exports", "module", "forge", "asn1Validator", "publicKeyValidator", "privateKeyValidator", "BigInteger", "ByteBuffer", "NativeBuffer", "ed25519", "options", "seed", "messageToNativeBuffer", "pk", "sk", "crypto_sign_keypair", "obj", "capture", "errors", "valid", "error", "oid", "ed25519Oid", "privateKey", "privateKeyBytes", "publicKeyBytes", "i", "msg", "keyPair", "signedMsg", "crypto_sign", "sig", "publicKey", "sm", "m", "crypto_sign_open", "message", "encoding", "buffer", "gf0", "gf", "gf1", "D", "D2", "X", "Y", "L", "I", "sha512", "msgLen", "md", "hash", "out", "p", "d", "scalarbase", "pack", "n", "j", "x", "smlen", "r", "reduce", "h", "modL", "mlen", "t", "q", "unpackneg", "scalarmult", "add", "crypto_verify_32", "carry", "k", "a", "b", "c", "e", "f", "g", "Z", "M", "A", "cswap", "sel25519", "tx", "ty", "zi", "inv25519", "pack25519", "par25519", "o", "car25519", "chk", "num", "den", "den2", "den4", "den6", "set25519", "unpack25519", "S", "pow2523", "neq25519", "xi", "y", "yi", "vn", "s", "v", "init", "t0", "t1", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9", "t10", "t11", "t12", "t13", "t14", "t15", "t16", "t17", "t18", "t19", "t20", "t21", "t22", "t23", "t24", "t25", "t26", "t27", "t28", "t29", "t30", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "b10", "b11", "b12", "b13", "b14", "b15", "require_kem", "__commonJSMin", "exports", "module", "forge", "BigInteger", "kdf", "options", "prng", "kem", "publicKey", "keyLength", "byteLength", "r", "zeros", "encapsulation", "key", "privateKey", "md", "digestLength", "_createKDF", "counterStart", "x", "length", "k", "c", "i", "hash", "require_log", "__commonJSMin", "exports", "module", "forge", "sLevelInfo", "sLoggers", "sConsoleLogger", "i", "level", "message", "messageLevelIndex", "logger", "loggerLevelIndex", "args", "levels", "category", "msg", "logFunction", "rval", "aValidLevel", "lock", "levelHandlers", "f", "handler", "query", "require_md_all", "__commonJSMin", "exports", "module", "require_pkcs7", "__commonJSMin", "exports", "module", "forge", "asn1", "p7", "pem", "msg", "error", "obj", "maxline", "pemObj", "capture", "errors", "contentType", "_fromAsn1", "certs", "i", "crls", "signedData", "signer", "issuer", "serialNumber", "cert", "key", "digestAlgorithm", "authenticatedAttributes", "messageDigest", "attr", "options", "content", "mds", "addDigestAlgorithmIds", "addSignerInfos", "crl", "oid", "bytes", "signingTime", "attrsAsn1", "ai", "_attributeToAsn1", "_signersToAsn1", "_decryptContent", "_recipientsFromAsn1", "_recipientsToAsn1", "_encryptedContentToAsn1", "sAttr", "r", "rAttr", "match", "j", "recipient", "privKey", "cipher", "keyLen", "ivLen", "ciphFn", "ciph", "_recipientFromAsn1", "_recipientToAsn1", "infos", "ret", "recipients", "_signerToAsn1", "rval", "signers", "value", "jan_1_1950", "jan_1_2050", "date", "timestamp", "ec", "validator", "require_ssh", "__commonJSMin", "exports", "module", "forge", "ssh", "privateKey", "passphrase", "comment", "algorithm", "encryptionAlgorithm", "ppk", "pubbuffer", "_addStringToBuffer", "_addBigIntegerToBuffer", "pub", "length", "privbuffer", "priv", "encLen", "padding", "_sha1", "aeskey", "cipher", "encrypted", "mackey", "macbuffer", "hmac", "key", "type", "buffer", "options", "md", "digest", "hex", "val", "hexVal", "bytes", "sha", "num", "i", "require_lib", "__commonJSMin", "exports", "module", "require_src", "__commonJSMin", "exports", "fs", "forge", "util_1", "readFile", "getPem", "filename", "callback", "getPemAsync", "pem", "err", "keyp12", "convertToPem", "p12base64", "p12Der", "p12Asn1", "bags", "privateKey", "require_src", "__commonJSMin", "exports", "fs", "gaxios_1", "jws", "path", "util_1", "readFile", "ErrorWithCode", "GOOGLE_TOKEN_URL", "GOOGLE_REVOKE_TOKEN_URL", "message", "code", "getPem", "GoogleToken", "options", "now", "_a", "eagerRefreshThresholdMillis", "callback", "opts", "cb", "t", "keyFile", "key", "body", "privateKey", "clientEmail", "creds", "url", "iat", "additionalClaims", "payload", "signedJWT", "r", "e", "desc", "require_iterator", "__commonJSMin", "exports", "module", "Yallist", "walker", "require_yallist", "__commonJSMin", "exports", "module", "Yallist", "Node", "list", "self", "item", "i", "l", "node", "next", "prev", "head", "tail", "push", "unshift", "res", "fn", "thisp", "walker", "n", "initial", "acc", "arr", "from", "to", "ret", "start", "deleteCount", "nodes", "insert", "p", "value", "inserted", "require_lru_cache", "__commonJSMin", "exports", "module", "Yallist", "MAX", "LENGTH", "LENGTH_CALCULATOR", "ALLOW_STALE", "MAX_AGE", "DISPOSE", "NO_DISPOSE_ON_SET", "LRU_LIST", "CACHE", "UPDATE_AGE_ON_GET", "naiveLength", "LRUCache", "options", "max", "lc", "mL", "trim", "allowStale", "mA", "lC", "hit", "fn", "thisp", "walker", "prev", "forEachStep", "next", "k", "isStale", "h", "key", "value", "maxAge", "now", "len", "del", "item", "Entry", "get", "node", "arr", "l", "expiresAt", "self", "doUse", "diff", "length", "require_jwtaccess", "__commonJSMin", "exports", "jws", "LRU", "DEFAULT_HEADER", "JWTAccess", "email", "key", "keyId", "eagerRefreshThresholdMillis", "url", "scopes", "cacheKey", "additionalClaims", "cachedToken", "now", "iat", "exp", "defaultClaims", "claim", "header", "payload", "headers", "json", "inputStream", "callback", "resolve", "reject", "s", "chunk", "data", "err", "require_jwtclient", "__commonJSMin", "exports", "gtoken_1", "jwtaccess_1", "oauth2client_1", "JWT", "optionsOrEmail", "keyFile", "key", "scopes", "subject", "keyId", "opts", "url", "useSelfSignedJWT", "tokens", "headers", "targetAudience", "gtoken", "callback", "result", "refreshToken", "json", "inputStream", "resolve", "reject", "s", "chunk", "data", "e", "apiKey", "creds", "require_refreshclient", "__commonJSMin", "exports", "oauth2client_1", "UserRefreshClient", "optionsOrClientId", "clientSecret", "refreshToken", "eagerRefreshThresholdMillis", "forceRefreshOnFailure", "opts", "json", "inputStream", "callback", "resolve", "reject", "s", "chunk", "data", "err", "require_oauth2common", "__commonJSMin", "exports", "querystring", "crypto_1", "METHODS_SUPPORTING_REQUEST_BODY", "OAuthClientAuthHandler", "clientAuthentication", "opts", "bearerToken", "_a", "clientId", "clientSecret", "base64EncodedCreds", "method", "contentType", "headers", "key", "data", "getErrorFromOAuthErrorResponse", "resp", "err", "errorCode", "errorDescription", "errorUri", "message", "newError", "keys", "require_stscredentials", "__commonJSMin", "exports", "querystring", "transporters_1", "oauth2common_1", "StsCredentials", "tokenExchangeEndpoint", "clientAuthentication", "stsCredentialsOptions", "additionalHeaders", "options", "_a", "_b", "_c", "values", "key", "headers", "opts", "response", "stsSuccessfulResponse", "error", "require_baseexternalclient", "__commonJSMin", "exports", "stream", "authclient_1", "sts", "STS_GRANT_TYPE", "STS_REQUEST_TOKEN_TYPE", "DEFAULT_OAUTH_SCOPE", "GOOGLE_APIS_DOMAIN_PATTERN", "VARIABLE_PORTION_PATTERN", "WORKFORCE_AUDIENCE_PATTERN", "BaseExternalAccountClient", "options", "additionalOptions", "workforceAudiencePattern", "_a", "result", "credentials", "headers", "opts", "callback", "r", "e", "projectNumber", "response", "retry", "requestHeaders", "res", "statusCode", "isReadableStream", "subjectToken", "stsCredentialsOptions", "stsResponse", "audience", "match", "token", "successResponse", "accessToken", "now", "apiName", "url", "parsedUrl", "urlDomain", "googleAPIsDomainPatterns", "googleAPIsDomainPattern", "require_identitypoolclient", "__commonJSMin", "exports", "_a", "_b", "_c", "fs", "util_1", "baseexternalclient_1", "readFile", "realpath", "lstat", "IdentityPoolClient", "options", "additionalOptions", "filePath", "formatType", "formatSubjectTokenFieldName", "err", "subjectToken", "rawText", "url", "headers", "opts", "require_awsrequestsigner", "__commonJSMin", "exports", "crypto_1", "AWS_ALGORITHM", "AWS_REQUEST_TYPE", "AwsRequestSigner", "getCredentials", "region", "amzOptions", "requestPayloadData", "url", "method", "requestPayload", "additionalAmzHeaders", "awsSecurityCredentials", "uri", "headerMap", "generateAuthenticationHeaderMap", "headers", "awsSignedReq", "sign", "crypto", "key", "msg", "getSigningKey", "dateStamp", "serviceName", "kDate", "kRegion", "kService", "options", "now", "amzDate", "reformattedAdditionalAmzHeaders", "amzHeaders", "canonicalHeaders", "signedHeadersList", "signedHeaders", "payloadHash", "canonicalRequest", "credentialScope", "stringToSign", "signingKey", "signature", "authorizationHeader", "require_awsclient", "__commonJSMin", "exports", "awsrequestsigner_1", "baseexternalclient_1", "AwsClient", "options", "additionalOptions", "_a", "match", "roleName", "awsCreds", "reformattedHeader", "extendedHeaders", "key", "opts", "response", "require_externalclient", "__commonJSMin", "exports", "baseexternalclient_1", "identitypoolclient_1", "awsclient_1", "ExternalAccountClient", "options", "additionalOptions", "_a", "require_googleauth", "__commonJSMin", "exports", "child_process_1", "fs", "gcpMetadata", "os", "path", "crypto_1", "transporters_1", "computeclient_1", "idtokenclient_1", "envDetect_1", "jwtclient_1", "refreshclient_1", "externalclient_1", "baseexternalclient_1", "GoogleAuth", "opts", "client", "callback", "resolve", "reject", "projectId", "e", "optionsOrCallback", "options", "r", "credential", "isGCE", "credentialsPath", "location", "home", "filePath", "err", "readStream", "json", "inputStream", "s", "chunk", "data", "apiKey", "sys", "stdout", "creds", "stream", "targetAudience", "url", "headers", "crypto", "emailOrUniqueId", "require_iam", "__commonJSMin", "exports", "IAMAuth", "selector", "token", "require_impersonated", "__commonJSMin", "exports", "oauth2client_1", "Impersonated", "options", "_a", "_b", "_c", "_d", "_e", "_f", "refreshToken", "name", "u", "body", "res", "tokenResponse", "error", "status", "message", "require_downscopedclient", "__commonJSMin", "exports", "stream", "authclient_1", "sts", "STS_GRANT_TYPE", "STS_REQUEST_TOKEN_TYPE", "STS_SUBJECT_TOKEN_TYPE", "STS_ACCESS_TOKEN_URL", "DownscopedClient", "authClient", "credentialAccessBoundary", "additionalOptions", "quotaProjectId", "rule", "credentials", "headers", "opts", "callback", "r", "e", "retry", "response", "requestHeaders", "res", "statusCode", "isReadableStream", "_a", "subjectToken", "stsCredentialsOptions", "stsResponse", "sourceCredExpireDate", "expiryDate", "downscopedAccessToken", "now", "require_src", "__commonJSMin", "exports", "googleauth_1", "computeclient_1", "envDetect_1", "iam_1", "idtokenclient_1", "jwtaccess_1", "jwtclient_1", "impersonated_1", "oauth2client_1", "loginticket_1", "refreshclient_1", "awsclient_1", "identitypoolclient_1", "externalclient_1", "baseexternalclient_1", "downscopedclient_1", "transporters_1", "auth", "require_apiIndex", "__commonJSMin", "exports", "getAPI", "api", "options", "versions", "context", "version", "ctr", "ep", "e", "require_shams", "__commonJSMin", "exports", "module", "obj", "sym", "symObj", "symVal", "syms", "descriptor", "require_has_symbols", "__commonJSMin", "exports", "module", "origSymbol", "hasSymbolSham", "require_implementation", "__commonJSMin", "exports", "module", "ERROR_MESSAGE", "slice", "toStr", "funcType", "that", "target", "args", "bound", "binder", "result", "boundLength", "boundArgs", "i", "Empty", "require_function_bind", "__commonJSMin", "exports", "module", "implementation", "require_src", "__commonJSMin", "exports", "module", "bind", "require_get_intrinsic", "__commonJSMin", "exports", "module", "undefined", "$SyntaxError", "$Function", "$TypeError", "getEvalledConstructor", "expressionSyntax", "$gOPD", "throwTypeError", "ThrowTypeError", "hasSymbols", "getProto", "x", "needsEval", "TypedArray", "INTRINSICS", "doEval", "name", "value", "fn", "gen", "LEGACY_ALIASES", "bind", "hasOwn", "$concat", "$spliceApply", "$replace", "$strSlice", "rePropName", "reEscapeChar", "stringToPath", "string", "first", "last", "result", "match", "number", "quote", "subString", "getBaseIntrinsic", "allowMissing", "intrinsicName", "alias", "parts", "intrinsicBaseName", "intrinsic", "intrinsicRealName", "skipFurtherCaching", "i", "isOwn", "part", "desc", "require_call_bind", "__commonJSMin", "exports", "module", "bind", "GetIntrinsic", "$apply", "$call", "$reflectApply", "$gOPD", "$defineProperty", "$max", "originalFunction", "func", "desc", "applyBind", "require_callBound", "__commonJSMin", "exports", "module", "GetIntrinsic", "callBind", "$indexOf", "name", "allowMissing", "intrinsic", "require_util_inspect", "__commonJSMin", "exports", "module", "require_object_inspect", "__commonJSMin", "exports", "module", "hasMap", "mapSizeDescriptor", "mapSize", "mapForEach", "hasSet", "setSizeDescriptor", "setSize", "setForEach", "hasWeakMap", "weakMapHas", "hasWeakSet", "weakSetHas", "hasWeakRef", "weakRefDeref", "booleanValueOf", "objectToString", "functionToString", "match", "bigIntValueOf", "gOPS", "symToString", "hasShammedSymbols", "isEnumerable", "gPO", "O", "inspectCustom", "inspectSymbol", "isSymbol", "toStringTag", "inspect_", "obj", "options", "depth", "seen", "opts", "has", "customInspect", "inspectString", "maxDepth", "isArray", "indent", "getIndent", "indexOf", "inspect", "value", "from", "noIndent", "newOpts", "name", "nameOf", "keys", "arrObjKeys", "symString", "markBoxed", "isElement", "s", "attrs", "i", "wrapQuotes", "quote", "xs", "singleLineValues", "indentedJoin", "isError", "parts", "isMap", "mapParts", "key", "collectionOf", "isSet", "setParts", "isWeakMap", "weakCollectionOf", "isWeakSet", "isWeakRef", "isNumber", "isBigInt", "isBoolean", "isString", "isDate", "isRegExp", "ys", "isPlainObject", "protoTag", "stringTag", "toStr", "constructorTag", "tag", "defaultStyle", "quoteChar", "hasOwn", "f", "m", "x", "l", "str", "remaining", "trailer", "lowbyte", "c", "n", "type", "size", "entries", "joinedEntries", "baseIndent", "lineJoiner", "isArr", "syms", "symMap", "k", "j", "require_side_channel", "__commonJSMin", "exports", "module", "GetIntrinsic", "callBound", "inspect", "$TypeError", "$WeakMap", "$Map", "$weakMapGet", "$weakMapSet", "$weakMapHas", "$mapGet", "$mapSet", "$mapHas", "listGetNode", "list", "key", "prev", "curr", "listGet", "objects", "node", "listSet", "value", "listHas", "$wm", "$m", "$o", "channel", "require_formats", "__commonJSMin", "exports", "module", "replace", "percentTwenties", "Format", "value", "require_utils", "__commonJSMin", "exports", "module", "formats", "has", "isArray", "hexTable", "array", "i", "compactQueue", "queue", "item", "obj", "compacted", "j", "arrayToObject", "source", "options", "merge", "target", "mergeTarget", "targetItem", "acc", "key", "value", "assign", "decode", "str", "decoder", "charset", "strWithoutPlus", "encode", "defaultEncoder", "kind", "format", "string", "$0", "out", "c", "compact", "refs", "keys", "val", "isRegExp", "isBuffer", "combine", "a", "b", "maybeMap", "fn", "mapped", "require_stringify", "__commonJSMin", "exports", "module", "getSideChannel", "utils", "formats", "has", "arrayPrefixGenerators", "prefix", "key", "isArray", "split", "push", "pushToArray", "arr", "valueOrArray", "toISO", "defaultFormat", "defaults", "date", "isNonNullishPrimitive", "v", "sentinel", "stringify", "object", "generateArrayPrefix", "commaRoundTrip", "strictNullHandling", "skipNulls", "encoder", "filter", "sort", "allowDots", "serializeDate", "format", "formatter", "encodeValuesOnly", "charset", "sideChannel", "obj", "tmpSc", "step", "findFlag", "pos", "value", "keyValue", "valuesArray", "valuesJoined", "i", "values", "objKeys", "keys", "adjustedPrefix", "j", "keyPrefix", "valueSideChannel", "normalizeStringifyOptions", "opts", "options", "arrayFormat", "joined", "require_parse", "__commonJSMin", "exports", "module", "utils", "has", "isArray", "defaults", "interpretNumericEntities", "str", "$0", "numberStr", "parseArrayValue", "val", "options", "isoSentinel", "charsetSentinel", "parseValues", "obj", "cleanStr", "limit", "parts", "skipIndex", "i", "charset", "part", "bracketEqualsPos", "pos", "key", "encodedVal", "parseObject", "chain", "valuesParsed", "leaf", "root", "cleanRoot", "index", "parseKeys", "givenKey", "brackets", "child", "segment", "parent", "keys", "normalizeParseOptions", "opts", "tempObj", "newObj", "require_lib", "__commonJSMin", "exports", "module", "stringify", "parse", "formats", "require_url_template", "__commonJSMin", "exports", "module", "root", "factory", "UrlTemplate", "str", "part", "c", "operator", "value", "key", "context", "modifier", "result", "k", "tmp", "template", "that", "operators", "_", "expression", "literal", "values", "variable", "separator", "require_isbrowser", "__commonJSMin", "exports", "isBrowser", "require_http2", "__commonJSMin", "exports", "http2", "zlib", "url_1", "qs", "extend", "stream_1", "util", "process", "common_1", "HTTP2_HEADER_CONTENT_ENCODING", "HTTP2_HEADER_CONTENT_TYPE", "HTTP2_HEADER_METHOD", "HTTP2_HEADER_PATH", "HTTP2_HEADER_STATUS", "DEBUG", "request", "config", "opts", "validateStatus", "url", "sessionData", "_getClient", "pathWithQs", "headers", "res", "chunks", "session", "req", "resolve", "reject", "stream", "d", "err", "buf", "data", "message", "body", "e", "closeSession", "status", "host", "errorCode", "lastStreamId", "require_apirequest", "__commonJSMin", "exports", "google_auth_library_1", "qs", "stream", "urlTemplate", "uuid", "extend", "isbrowser_1", "h2", "pkg", "isReadableStream", "obj", "getMissingParams", "params", "required", "missing", "param", "createAPIRequest", "parameters", "callback", "createAPIRequestAsync", "_a", "options", "media", "resource", "authClient", "defaultMime", "headers", "populateAPIHeader", "key", "newKey", "missingParams", "originalUrl", "path", "multipartUpload", "multipart", "boundary", "finale", "rStream", "pStream", "ProgressStream", "isStream", "part", "preamble", "bytesRead", "browserMultipartUpload", "content", "userAgent", "d", "line", "status", "authHeaders", "mooOpts", "chunk", "encoding", "require_authplus", "__commonJSMin", "exports", "google_auth_library_1", "AuthPlus", "options", "callback", "require_endpoint", "__commonJSMin", "exports", "apirequest_1", "Endpoint", "options", "target", "rootSchema", "schema", "context", "resourceName", "resource", "name", "method", "paramsOrCallback", "callback", "params", "schemaUrl", "buildurl", "parameters", "mediaUrl", "pathParams", "key", "input", "require_discovery", "__commonJSMin", "exports", "fs", "google_auth_library_1", "resolve", "util", "apirequest_1", "endpoint_1", "readFile", "Discovery", "options", "schema", "ep", "args", "discoveryUrl", "headers", "items", "apis", "api", "endpointCreator", "versionIndex", "apisIndex", "set", "type", "version", "e", "apiDiscoveryUrl", "parts", "file", "res", "url", "parameters", "require_src", "__commonJSMin", "exports", "google_auth_library_1", "gaxios_1", "apiIndex_1", "apirequest_1", "authplus_1", "discovery_1", "endpoint_1", "googleapis_common_1", "youtube_v3", "Youtube", "options", "google", "Resource$Abusereports", "Resource$Activities", "Resource$Captions", "Resource$Channelbanners", "Resource$Channels", "Resource$Channelsections", "Resource$Comments", "Resource$Commentthreads", "Resource$I18nlanguages", "Resource$I18nregions", "Resource$Livebroadcasts", "Resource$Livechatbans", "Resource$Livechatmessages", "Resource$Livechatmoderators", "Resource$Livestreams", "Resource$Members", "Resource$Membershipslevels", "Resource$Playlistitems", "Resource$Playlists", "Resource$Search", "Resource$Subscriptions", "Resource$Superchatevents", "Resource$Tests", "Resource$Thirdpartylinks", "Resource$Thumbnails", "Resource$Videoabusereportreasons", "Resource$Videocategories", "Resource$Videos", "Resource$Watermarks", "context", "paramsOrCallback", "optionsOrCallback", "callback", "params", "rootUrl", "parameters", "exports", "googleapis_common_1", "v3_1", "exports", "youtube", "versionOrOptions", "auth", "googleapis_common_2", "require_duration_iso_8601", "__commonJSMin", "exports", "duration", "numberRegExp", "durationRegExpS", "durationRegExpTM", "durationRegExpH", "durationRegExpD", "durationRegExpM", "durationRegExpY", "durationRegExp", "matchResult", "durationResult", "matchResultIndex", "value", "isAllUndefined", "key", "second", "hour", "minute", "hms", "require_he", "__commonJSMin", "exports", "module", "root", "freeExports", "freeModule", "freeGlobal", "regexAstralSymbols", "regexAsciiWhitelist", "regexBmpWhitelist", "regexEncodeNonAscii", "encodeMap", "regexEscape", "escapeMap", "regexInvalidEntity", "regexInvalidRawCodePoint", "regexDecode", "decodeMap", "decodeMapLegacy", "decodeMapNumeric", "invalidReferenceCodePoints", "stringFromCharCode", "object", "hasOwnProperty", "has", "propertyName", "contains", "array", "value", "index", "length", "merge", "options", "defaults", "result", "key", "codePointToSymbol", "codePoint", "strict", "output", "parseError", "hexEscape", "decEscape", "message", "encode", "string", "encodeEverything", "useNamedReferences", "allowUnsafeSymbols", "escapeCodePoint", "escapeBmpSymbol", "symbol", "$0", "high", "low", "decode", "html", "$1", "$2", "$3", "$4", "$5", "$6", "$7", "$8", "semicolon", "decDigits", "hexDigits", "reference", "next", "escape", "he", "search_channel_exports", "__export", "SearchChannel", "__toCommonJS", "import_api", "import_react", "import_javascript_time_ago", "TimeAgo", "en_default", "timeAgo", "getErrorMessage", "error", "fmt", "compactNumberFormat", "num", "formatDate", "input", "date", "timeAgo", "import_api", "import_react", "import_youtube", "import_duration_iso_8601", "createClient", "apikey", "youtubeClient", "maxPageResults", "useRefresher", "fn", "deps", "data", "setData", "error", "setError", "isLoading", "setIsLoading", "timestamp", "setTimestamp", "depsAll", "d", "cancel", "fetcher", "fetchData", "updateInline", "e", "getErrorMessage", "dataToStatistics", "statistics", "si", "fetchAndInjectVideoStats", "videos", "videoIds", "v", "statsItems", "youtubeClient", "s", "stats", "el", "x", "search", "query", "type", "channedId", "maxPageResults", "searchVideos", "items", "result", "r", "vid", "getVideos", "searchChannels", "channelIds", "cid", "rps", "getChannel", "channelId", "item", "sn", "sd", "getChannels", "id", "getPlaylistVideos", "playlistId", "import_api", "import_react", "import_api", "import_api", "import_api", "import_react", "import_api", "import_jsx_runtime", "griditemsize", "cache", "getRecentVideos", "getCachedVideos", "getPinnedVideos", "key", "videos", "addRecentVideo", "videoId", "removePinnedVideo", "recent", "id", "addPinnedVideo", "removeRecentVideo", "pinned", "removeVideo", "v", "clearRecentVideos", "clearPinnedVideos", "PinVideo", "video", "refresh", "PinnedVideoActions", "RecentVideoActions", "import_fs", "import_he", "import_jsx_runtime", "videoUrl", "videoId", "CopyVideoUrlAction", "video", "refresh", "addRecentVideo", "OpenVideoInBrowser", "OpenWithIINAAction", "appPath", "fs", "ShowVideoDetails", "props", "VideoItemDetail", "ShowChannelAction", "ChannelItemDetailFetched", "statistics", "desc", "title", "thumbnailUrl", "thumbnailMd", "channel", "md", "formatDate", "React", "compactNumberFormat", "OpenChannelInBrowser", "VideoItem", "view", "primaryaction", "parts", "thumbnail", "he", "Actions", "showDetail", "openBrowser", "RecentVideoActions", "PinnedVideoActions", "PinVideo", "import_api", "view", "ListOrGrid", "props", "context", "ListOrGridSection", "ListOrGridEmptyView", "import_jsx_runtime", "PlaylistList", "props", "griditemsize", "playlistId", "data", "error", "isLoading", "useRefresher", "getPlaylistVideos", "getErrorMessage", "ListOrGrid", "v", "VideoItem", "import_api", "import_react", "import_jsx_runtime", "SearchVideoList", "channelId", "searchQuery", "griditemsize", "showRecentVideos", "searchText", "setSearchText", "data", "error", "isLoading", "useRefresher", "searchVideos", "getErrorMessage", "loading", "setLoading", "pinnedVideos", "setPinnedVideos", "recentVideos", "setRecentVideos", "state", "setState", "refresh", "getVideos", "getPinnedVideos", "v", "getRecentVideos", "ListOrGrid", "VideoItem", "ListOrGridEmptyView", "ListOrGridSection", "import_api", "import_jsx_runtime", "griditemsize", "cache", "getRecentChannels", "getCachedChannels", "getPinnedChannels", "key", "channels", "addRecentChannel", "channelId", "removePinnedChannel", "recent", "id", "addPinnedChannel", "removeRecentChannel", "pinned", "removeChannel", "c", "clearRecentChannels", "clearPinnedChannels", "PinChannel", "refresh", "PinnedChannelActions", "RecentChannelActions", "import_jsx_runtime", "OpenChannelInBrowser", "channelId", "refresh", "addRecentChannel", "SearchChannelVideosAction", "SearchVideoList", "ShowRecentPlaylistVideosAction", "props", "title", "PlaylistList", "import_he", "import_jsx_runtime", "ChannelItemDetail", "props", "channel", "statistics", "mdParts", "desc", "title", "thumbnailUrl", "md", "compactNumberFormat", "formatDate", "React", "ShowRecentPlaylistVideosAction", "SearchChannelVideosAction", "OpenChannelInBrowser", "ChannelItem", "view", "primaryaction", "refresh", "channelId", "he", "parts", "thumbnail", "Actions", "showDetail", "addRecentChannel", "openBrowser", "RecentChannelActions", "PinnedChannelActions", "PinChannel", "ChannelItemDetailFetched", "data", "error", "isLoading", "useRefresher", "getChannel", "getErrorMessage", "import_jsx_runtime", "SearchChannelList", "searchQuery", "griditemsize", "showRecentChannels", "searchText", "setSearchText", "data", "error", "isLoading", "useRefresher", "searchChannels", "getErrorMessage", "loading", "setLoading", "pinnedChannels", "setPinnedChannels", "recentChannels", "setRecentChannels", "state", "setState", "refresh", "getChannels", "getPinnedChannels", "getRecentChannels", "ListOrGrid", "c", "ChannelItem", "ListOrGridEmptyView", "ListOrGridSection", "import_jsx_runtime", "SearchChannel", "props", "SearchChannelList"]
}
